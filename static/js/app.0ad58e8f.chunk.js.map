{"version":3,"sources":["assets/user.jpg","assets/logo.png","components/context.js","screens/DrawerContent.js","screens/HomeScreen.js","screens/Menu/BookmarkScreen.js","screens/Menu/SettingsScreen.js","screens/Menu/SupportScreen.js","screens/Menu/ProfileScreen.js","screens/Plan/PlanDetailsGeneralTab.js","components/InterestModal.js","screens/Plan/PlanDetailsCashBalanceTab.js","screens/Plan/PlanDetails401(k)Tab.js","screens/Plan/PlanDetailsTopTab.js","screens/Census/CensusScreen.js","screens/Report/ReportStandardScreen.js","screens/Report/ReportFavoriteScreen.js","screens/Report/ReportSmartScreen.js","screens/Report/ReportAdminScreen.js","screens/Report/ReportTopTabScreen.js","screens/Report/ReportListScreen.js","screens/Calculate/CalculateScreen.js","screens/Classes/ClassesScreen.js","screens/Classes/ClassesUpdateScreen.js","screens/Plan/PlanListScreen.js","screens/PPACalculator/BlankPPACalculatorScreen.js","screens/OwnerOnly/BlankOwnerOnlyScreen.js","screens/Census/CensusUpdateScreen.js","screens/Plan/PlanCopyList.js","components/CopyModal.js","components/AlertModalExcel.js","components/MenuModal.js","screens/MainTabScreen.js","screens/Menu/ContactStackScreen.js","screens/Menu/SetupStackScreen.js","screens/Menu/ProfileStatckScreen.js","screens/SplashScreen.js","screens/SignInScreen.js","screens/SignUpScreen.js","screens/RootStackScreen.js","model/defaultPlan.js","model/dropDown.js","App.js","node_modules/moment/locale sync /^/.*$","assets/men1.jpg","assets/men2.jpg","assets/men3.jpg","assets/women1.jpg","assets/women2.jpg","assets/women3.jpg","assets/Owner.jpg"],"names":["module","exports","AuthContext","React","createContext","DrawerContent","props","paperTheme","useTheme","useContext","signOut","toggleTheme","dataState","userProfile","portrait","profilePic","indexOf","View","style","flex","ScrollView","styles","drawerContent","LinearGradient","colors","userInfoSection","flexDirection","justifyContent","TouchableOpacity","Image","source","uri","profile","require","Box","logo","Text","LogoName","Name","firstName","lastName","Email","userName","name","size","color","Section","drawerSection","DrawerItemList","title","TouchableRipple","onPress","preference","pointerEvents","Switch","switch","value","dark","bottomDrawerSection","DrawerItem","icon","label","StyleSheet","create","padding","width","height","borderRadius","borderWidth","borderColor","alignSelf","alignContent","fontSize","fontWeight","marginVertical","textAlign","marginRight","marginTop","caption","lineHeight","row","alignItems","section","paragraph","marginBottom","borderTopColor","borderTopWidth","paddingVertical","paddingHorizontal","transform","Platform","OS","scaleX","scaleY","Dimensions","get","baseURL","Settings","domain","HomeScreen","navigation","useState","homeData","setHomeData","useEffect","getHomeData","a","async","url","headers","Headers","append","req","Request","method","fetch","then","response","json","responseJson","catch","error","Alert","alert","message","theme","container","StatusBar","barStyle","linearlight","linearDark","listContaner","SafeAreaView","FlatList","data","renderItem","item","Item","menuTitle","Description","menuDescription","Icon","menuImage","Screen","keyExtractor","id","toString","ActivityIndicator","primary","gotoTab","paramsVal","ifFeedback","myScreen","trim","screen","params","homeClick","WebBrowser","navigate","IconContainer","backgroundColor","TextContainer","iconDes","icontitle","borderBottomWidth","borderBottomColor","text","margin","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","BookmarkScreen","header","Title","SubTitle","info","Linking","openURL","link","textDecorationLine","subtitle","button","signIn","textSign","window","baseURL1","auth","ProfileScreen","setProfilePic","ProfileImage","setProfileImage","hasImageUri","sethasImageUri","isLoading","setIsLoading","isVisible","setIsVisible","hasError","disabled","oldPassword","newPassword","confirmPassword","changePW","setData","useRef","saveImage","values","body","JSON","stringify","userToken","Math","random","status","SaveToStorage","AsyncStorage","getItem","userProfileObj","parse","setItem","onSubmit","length","ImageManipulator","resize","compress","format","JPEG","base64","manipResult","Keyboard","dismiss","submitText","submitBackcolor","modalContainer","modalNavBar","allowFontScaling","headerPassStyle","marginLeft","modalBody","paddingLeft","paddingRight","paddingTop","modalFooter","bubble","buttonModal","leftNav","textStyle","profileBtn","ImagePicker","granted","allowsEditing","aspect","result","cancelled","_captureImage","_pickImage","elevation","General","route","Error","SetError","setDetails","updateOverrideSegRatesNew","DefaultPlan","DropdownData","DefaultDropdown","planDetailsData","setPlanDetailsData","planDetailsDataState","Details","planName","PlanName","setPlanName","planDescription","PlanDescription","setPlanDescription","planEffDate","moment","PlanEffDate","setPlanEffDate","retAge","RetAge","setRetAge","yearOfParticipationForNRA","YearOfParticipationForNRA","setYearOfParticipationForNRA","psRetAge","PSRetAge","setPSRetAge","minAge","MinAge","setMinAge","minSvcMonths","MonthCk","setMonthCk","MinSvcMonths","setMinSvcMonths","minSvcHours","HourCk","setHourCk","MinSvcHours","setMinSvcHours","entryDate","EntryDate","setEntryDate","vestingSchedYear1","VestingSchedYear1","setVestingSchedYear1","vestingSchedYear2","VestingSchedYear2","setVestingSchedYear2","vestingSchedYear3","VestingSchedYear3","setVestingSchedYear3","excludedYears_18","ExcludedYears_18","setExcludedYears_18","excludedYears_Eff","ExcludedYears_Eff","setExcludedYears_Eff","ageDefinition","AgeDefinition","setAgeDefinition","hceTopPaid","HCETopPaid","setHCETopPaid","includeDefInEmployerCost","IncludeDefInEmployerCost","setIncludeDefInEmployerCost","include401k","Include401k","setInclude401k","minTaxBracket","MinTaxBracket","setMinTaxBracket","maxTaxBracket","MaxTaxBracket","setMaxTaxBracket","entity","Entity","setEntity","preparedBy","PreparedBy","setPreparedBy","companyName","CompanyName","setCompanyName","showLogo","Showlogo","setShowlogo","minSvcType","MinSvcType","setMinSvcType","undefined","monthCk","hourCk","controller","Scroll","Dd2","TesthideDrop","setTesthideDrop","MinAgehideDrop","setMinAgehideDrop","MonthHideDrop","setMonthHideDrop","EntryHideDrop","setEntryHideDrop","TaxHideDrop","setTaxHideDrop","TestAgemargin","setTestAgemargin","MinAgemargin","setMinAgemargin","Monthmargin","setMonthmargin","EntryDatemargin","setEntryDatemargin","Taxmargin","setTaxmargin","DropdownController","DropSelected","minSvcTypeController","DetailsFetchedData","overrideSegRatesNew","setPlanDetailsTab","selectedPlan","getPlanDetails","plan","planId","Date","show","setShow","date","isSuccess","obj","setPlanData","planData","responseData","prepareVal","val","def","GetInterestRate","year","segment1Rate","segment2Rate","segment3Rate","Test_Age","parseInt","selectItem","NRA_Error","resetScrollToCoords","x","y","contentContainerStyle","scrollEnabled","tertiary","inputContainer","ref","ScrollContainer","TextInput","placeholderTextColor","placeholder","textInput","Logintext","keyboardType","onChangeText","multiline","numberOfLines","textArea","editable","Feather","mode","onConfirm","selectedDate","currentDate","currentYr","interestRatesData","iRates","filter","iRate","rateYear","defaultSegRatesNew","onCancel","zIndex","subNames","SubtextInput","items","defaultValue","placeholderStyle","activeLabelStyle","labelStyle","itemStyle","dropDownStyle","containerStyle","arrowColor","onChangeItem","instance","onOpen","current","scrollTo","animated","onClose","defaultIndex","checkedCheckBoxColor","uncheckedCheckBoxColor","isChecked","onClick","textInput2","textInput3","RadioButtonRN","activeOpacity","initial","animationTypes","boxStyle","box","selectedBtn","e","circleSize","activeColor","deactiveColor","textColor","Is401kChecked","setTimeout","secondary","textAlignVertical","InterestModal","Open","setOpen","setModalData","ModalData","Interest_index","setInterest_index","rateMonthName","transitionalFlag","InterestData","setInterestData","Modal","animationType","transparent","visible","onRequestClose","ModalBackground","Modalcontainer","greencontainer","headercontainer","bool","index","Info_container","InterestShow","Spacer","align","Button","top","itemText","CashBalance","Balance","isPBGCCovered","IsPBGCCovered","setIsPBGCCovered","cbInterestCredit","CBInterestCredit","setCBInterestCredit","overrideSegRate1","OverrideSegRate1","setOverrideSegRate1","overrideSegRate2","OverrideSegRate2","setOverrideSegRate2","overrideSegRate3","OverrideSegRate3","setOverrideSegRate3","preRetMortality","PreRetMortality","setPreRetMortality","mortalityTableCombined","MortalityTableCombined","setMortalityTableCombined","fundingForLumpSum","FundingForLumpSum","setFundingForLumpSum","imputeDisparity","ImputeDisparity","setImputeDisparity","aePostRetMortalityTable","AEPostRetMortalityTable","setAEPostRetMortalityTable","aePreRetInt","AEPreRetInt","setAEPreRetInt","aePostRetInt","AEPostRetInt","setAEPostRetInt","taPostRetMort","TAPostRetMort","setTAPostRetMort","taPreRetInt","TAPreRetInt","setTAPreRetInt","taPostRetInt","TAPostRetInt","setTAPostRetInt","CBScroll","ACTUARIALMargin","setACTUARIALMargin","TESTINGMargin","setTESTINGMargin","ACTUARIALhideDrop","setACTUARIALhideDrop","TESTINGhideDrop","setTESTINGhideDrop","CashDropSelected","DropdownCashController","NewOverrideSegRatesNew","UserCB","RadioBtn","searchable","searchablePlaceholder","searchableError","searchableStyle","FOI","totOwnerCost","TotOwnerCost","setTotOwnerCost","totNonOwnerCost","TotNonOwnerCost","setTotNonOwnerCost","catchUp","CatchUp","setCatchUp","includeMatch","IncludeMatch","setIncludeMatch","matchPercent1","MatchPercent1","setMatchPercent1","matchLimit1","MatchLimit1","setMatchLimit1","matchPercent2","MatchPercent2","setMatchPercent2","matchLimit2","MatchLimit2","setMatchLimit2","matchPercent3","MatchPercent3","setMatchPercent3","matchLimit3","MatchLimit3","setMatchLimit3","isSafeHarborContrib","IsSafeHarborContrib","setIsSafeHarborContrib","exclusions","Exclusions","setExclusions","matchChoice","setmatchChoice","User401k","SetIncludeMatchAarry","MatchNum","TopTab","createMaterialTopTabNavigator","TopTabs","set_Error","Navigator","swipeEnabled","tabBarOptions","activeTintColor","indicatorStyle","initialLayout","listeners","tabPress","event","component","PDCashbalanceScreen","preventDefault","PD401kScreen","CensusScreen","CensusToggle","CensusLoading","DocumentType","RightAction","DeleteAction","CensusDeleteClickEventListener","actionText","EditAction","CensusEditClickEventListener","setScreen","setDropdownData","CensusIndexChecked","setCensusIndexChecked","CensusSearchVal","setCensusSearchVal","setCensusInfo","CensusInmemory","censusData","setCensusData","oldCensusData","setOldCensusData","SaveCensus","Method","getCensus","Census","DocumentPicker","type","copyToCacheDirectory","FileSystem","encoding","Base64","b64","XLSX","read","cellText","cellNF","cellDates","wb","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","raw","defval","dateNF","payload","forEach","idx","censusD","ClassCode","DateOfBirth","add","DateOfHire","Deferral","W2Earnings","Earnings","FamCode","Firstname","Sex","Gender","WorkHours","Hours","LastName","LastYearComp","PercentOwnership","Principal","ProfitSharing","push","census","PickAndUpload","getClass","TransfromCensusData","NewArray","map","object","key","classCode","description","censusTransformData","tags","participantID","dateOfBirth","dateOfHire","workHours","age","sex","fullName","Lastname","principal","IsOwner","isOwner","FamilyCode","familyCode","w2Earnings","PastService","pastService","HceOverride","hceOverride","DeferCode","deferCode","HasCatchUp","hasCatchUp","CbPercent","cbPercent","CbCode","cbCode","PsCode","psCode","PsPercent","psPercent","DeferralPercent","deferralPercent","OverrideParticipationDate","overrideParticipationDate","lastYearComp","percentOwnership","highlyComp","classId","catchUpOverride","matchCode","matchPercent","shCode","shPercent","participationDate","own","CensusInfo","deleteParticipant","cancelable","CensusToggleshow","censusUpload","formContent","inputIcon","inputs","underlineColorAndroid","filteredName","namelowercase","toLowerCase","searchTermlowercase","CensusOnSearch","notificationList","avatar","toUpperCase","Swipeable","renderRightActions","overshootRight","TouchableHighlight","underlayColor","card","cardContent","image","imageContent","navbar","dateHeader","planDes","dateValue","crown","tagsContent","tag","btnColor","renderTags","iconBtnSearch","paddingBottom","flexWrap","marginHorizontal","calc","ReportStandardScreen","ReportsName","setReportsName","ReportModal","setReportModal","selectAll","setselectAll","cover","setcover","standing","setstanding","provision","setprovision","employee","setemployee","contriReport","setcontriReport","chartReport","setchartReport","taxReport","settaxReport","costReport","setcostReport","testReport","settestReport","percentReport","setpercentReport","gateway","setgateway","grouptestReport","setgrouptestReport","mostValue","setmostValue","detailReport","setdetailReport","maxCash","setmaxCash","testRes","settestRes","setParams","setReport","centeredView","modalView","modalText","openButton","listcontainer","flexShrink","buttoncontainer","buttons","CheckBox","titlecontainer","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ReportRightAction","DownloadAction","Status","ReportDownload","ReportListScreen","CalculateLoading","reportData","setReportData","getReportData","Report","rptData","requestDate","Num","split","ReportName","reportName","listContainer","requestStatus","textLight","fontStyle","CalculateScreen","CalculateModal","SetCalculateModal","CalculateRightAction","handleDownload","CalculateIndex","setCalculateIndex","CalReportName","setCalReportName","calculateData","setCalculateData","reportLink","reportOutputName","replace","Calculate","calculatePlan","getCalculatedPlan","console","log","DBInNature","ndtResult","ndtFieldId","requestCompleted","toggleCalculate","requestStatusDesc","datas","ndtFieldName","ndtFieldVal","email","infotext","ClassesdeleteClickEventListener","ClassesEditEventListener","ClassesScreen","Classes","classData","setClassData","Info","toggleClass","ClassContainer","Class","plantitle","contributionTypeDesc","cbValue","cbValueType","psValue","psValueType","ClassUpdate","ClassAddorEdit","Classload","token","Edited","contriTypeDes","State","contriTypeTrim","classcode","setclasscode","classDes","setclassDes","contritype","setcontritype","cashBalance","setcashBalance","cashAmt","setcashAmt","profitSharing","setprofitSharing","profitAmt","setprofitAmt","CUpdateScroll","CB_Disable","setCB_Disable","CB_DisableTxt","setCB_DisableTxt","ContriTypeMargin","setContriTypeMargin","ContriTypeMarginhideDrop","setContriTypeMarginhideDrop","CB_DisableCode","ContriTypeSelected","DropContriTypeController","SaveArray","setClassload","currentClasses","isNaN","ClassesState","StateArray","PlanId","ContributionType","CBValue","CBValueType","PSValue","PSValueType","Amt","KeyboardAvoidingView","behavior","scroll","columnNames","start","end","goBack","PlanScreen","PlanToggle","deleteClickEventListener","editClickEventListener","CopyAction","CopyClickEventListener","updatePlanData","setPlanID","Delete","initScreen","planStorage","SearchVal","setSearchVal","MenuResponse","inMemory","setInMemory","num","SavePlanId","indexChecked","setindexChecked","getPlanData","MenuCurrent","selectedMenu","CopyPlan","deletePlan","CopyInfo","userNameOnly","OnSearch","extraData","Company","number","effectiveDate","createDate","dateCreated","N0s","noOfEE","Prepared","initials","n","join","substring","AddCancel","toggleshow","background","GreenContainer","subContainer","iconLight","textGreen","tagColor","company","prepared","overlayContainerStyle","imgBorder","imgBackground","rounded","dateLabel","flexBasis","borderLeftWidth","employees","PPACalculatorScreen","OwnerOnlyScreen","AddModal","CensusAddorEdit","Censustoken","CensusPlanId","parameter","selectedUser","currentYear","getFullYear","BirthShow","setBirthShow","HireShow","setHireShow","OverrideShow","setOverrideShow","paxId","fname","setfname","lname","setlname","setsex","pricipal","setpricipal","owner","setowner","familycode","setfamilycode","datebirth","setdatebirth","datehire","setdatehire","hourswork","sethourswork","pastservice","setpastservice","LYcompensation","setLYcompensation","w2earnings","setw2earnings","catchup","setcatchup","classtype","setclasstype","deferral","setdeferral","deferralchoice","setdeferralchoice","CashbalanceInput","setCashbalanceInput","Cashbalancechoice","setCashbalancechoice","Profitsharinginput","setProfitsharinginput","Profitsharingchoice","setProfitsharingchoice","MatchContributioninput","setMatchContributioninput","MatchContributionchoice","setMatchContributionchoice","SafeHarborContribinput","setSafeHarborContribinput","SafeHarborContribchoice","setSafeHarborContribchoice","HCEchoice","setHCEchoice","Overridecheck","setOverridecheck","setPercentOwnership","CatchUpOverride","setCatchUpOverride","setParticipationDate","CensusUpdateScroll","FamilyCodeMargin","setFamilyCodeMargin","ClassTypeMargin","setClassTypeMargin","FamilyCodehideDrop","setFamilyCodehideDrop","ClassTypehideDrop","setClassTypehideDrop","CensusDropSelected","DropdownCensusController","SaveUserArray","CensushasError","test","CensusState","userArray","FirstName","DeferralOverrideValue","DeferralOverrideType","CBOverrideValue","CBOverrideType","PSOverrideValue","PSOverrideType","MatchOverrideValue","MatchOverrideType","SHOverrideValue","SHOverrideType","ParticipationDateOverride","HCEOverride","Age","HighlyComp","ClassId","ParticipationDate","ParticipantId","choice","Money","ItemsSpace","BselectedDate","BirthcurrentDate","CensusBirthhandleConfirm","HselectedDate","HirecurrentDate","CensusHirehandleConfirm","censusDropDownData","code","arr","i","CheckClassCode","OselectedDate","OverridecurrentDate","CensusOverridehandleConfirm","PlanCopy","copy","TitleName","columnNamesContainer","ellipsizeMode","Copyinfo","CopyModal","planID","planDesc","setPlanDesc","includeDetail","setIncludeDetail","userNumber","userSponsorId","sponsorId","CopyNow","Colorcontainer","keyboardVerticalOffset","AlertModal","MenuModal","IsSelected","MenuLoad","setMenuLoad","Time","time","Selected","position","right","HomeStack","createStackNavigator","Tab","createMaterialBottomTabNavigator","PlanTab","ConfirmSave","save","msg","getHeaderTitle","getFocusedRouteNameFromRoute","getPlanHeaderTitle","routeName","getPlanIconsTitle","setCensus","Plan","setPlan","menu","documentType","setdocumentType","CalculateToggle","setCalculateToggle","iconStyle","left","hide","MainTabScreen","useLayoutEffect","setOptions","headerTitle","initialRouteName","options","tabBarLabel","tabBarColor","tabBarIcon","DetailsScreen","PlanTabScreen","headerRight","headerLeft","HeaderBackButton","handleBackPress","BackHandler","addEventListener","removeEventListener","PlanListScreen","PlanDetailsTopTab","Standard","HomeStackScreen","headerMode","screenOptions","headerStyle","headerPressColorAndroid","headerBackImage","tintColor","Entypo","headerTitleAlign","headerBackTitleVisible","headerTintColor","headerTitleStyle","openDrawer","headerShown","animationEnabled","cardStyle","PPACalculator","ClassesUpdate","reportList","ContactStack","ContactStackScreen","ContactScreen","ProfileStack","ProfileStackScreen","height_logo","footer","site","baseURL2","ver","version","slideUp","from","to","SignInScreen","username","password","check_textInputChange","secureTextEntry","isValidUser","isValidPassword","setIsChecked","passwordInput","createRef","loginHandle","encode","identityToken","expireAt","decode","hasNewUpdate","details","_id","accessToken","changePassword","passwordExpiry","isGenerated","getProfile","userDetails","apiToken","getDefaultPlanDetails","getDefaultDropdown","planDetails","chkKeepMeSignedIn","accent","logocontainer","animation","duration","delay","formContainer","InputStyle","input","returnKeyType","autoCapitalize","textInputChange","onEndEditing","nativeEvent","onSubmitEditing","focus","errorMsg","handlePasswordChange","checkBox","checkStyle","checkInput","gradient","buttonText","lastoptions","lastText","flexGrow","resizeMode","overflow","firstname","lastname","phone","confirm_password","promocode","check_firstNameInputChange","check_lastNameInputChange","check_userNameInputChange","check_phoneInputChange","check_promoCodeInputChange","confirm_secureTextEntry","field","text_sub","text_header","direction","text_footer","action","FontAwesome","action2","action3","handleConfirmPasswordChange","textPrivate","color_textPrivate","row1","RootStack","RootStackScreen","SignUpScreen","DropDown","Drawer","createDrawerNavigator","enableScreens","App","isDarkTheme","setIsDarkTheme","dateModified","planType","initialDataState","selectedPlanName","classEdited","classAdded","censusEdited","censusAdded","CustomDefaultTheme","NavigationDefaultTheme","PaperDefaultTheme","plansub","plandate","textDark","CustomDarkTheme","NavigationDarkTheme","PaperDarkTheme","useReducer","prevState","defaultPlanDetails","defaultDropdown","Data","classes","calculate","newId","newArr","MenuName","Response","NewInfo","EditInfo","NewUserInfo","EditUserInfo","RatesNew","dispatch","authContext","useMemo","foundUser","appDefaults","removeItem","signUp","saveTheme","splice","addEditPlan","addEditClass","addEditCensus","expired","minutes","appDefaultsObj","isDarkThemeStorage","diff","getAsyncStorage","Provider","NavigationContainer","drawerContentOptions","activeBackgroundColor","drawerStyle","drawerIcon","webpackContext","webpackContextResolve","__webpack_require__","o","keys","Object","resolve"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,gsBCE9BC,EAAcC,IAAMC,gB,QCgC1B,SAASC,EAAcC,GAC1B,IAAMC,EAAaC,cACnB,EAA6CL,IAAMM,WAAWP,GAA9D,kBAASQ,EAAT,EAASA,QAASC,EAAlB,EAAkBA,YAAcC,EAAhC,KACMC,EAAcD,EAEhBE,EAAW,KACfF,EAAUE,SAAW,KAiBjBD,GAAeA,EAAYE,cAEQ,KADnCD,EAAWD,EAAYE,YACVC,QAAQ,WACjBF,EAAW,2BAA6BD,EAAYE,YAExDH,EAAUE,SAAWA,GAUzB,OACI,kBAACG,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IACf,kBAACC,EAAA,EAAed,EACZ,kBAACW,EAAA,EAAD,CAAMC,MAAOG,EAAOC,eACpB,kBAACC,EAAA,EAAD,CAAgBC,OAAQ,CAAC,UAAU,WAAYN,MAAOG,EAAOI,iBAErD,kBAACR,EAAA,EAAD,CAAMC,MAAQ,CAACQ,cAAe,MAAOC,eAAgB,kBACjD,kBAACC,EAAA,EAAD,KAC6B,OAAvBhB,EAAUE,SACR,kBAACe,EAAA,EAAD,CAAOC,OAAQ,CAAEC,IAAKnB,EAAUE,UAAYI,MAAOG,EAAOW,UAC1D,kBAACH,EAAA,EAAD,CAAOC,OAAQG,EAAQ,KAAuBf,MAAOG,EAAOW,WAGpE,kBAACf,EAAA,EAAD,CAAMC,MAAQG,EAAOa,KACrB,kBAACL,EAAA,EAAD,CAAOC,OAAQG,EAAQ,KACvBf,MAAOG,EAAOc,OACd,kBAACC,EAAA,EAAD,CAAMlB,MAASG,EAAOgB,UAAtB,oCAIJ,kBAACD,EAAA,EAAD,CAAMlB,MAASG,EAAOiB,MAAOzB,EAAY0B,UAAY,IAAM1B,EAAY2B,UAEvE,kBAACvB,EAAA,EAAD,CAAMC,MAAQ,CAACQ,cAAe,QAC1B,kBAACU,EAAA,EAAD,CAAMlB,MAASG,EAAOoB,OAAQ5B,EAAY6B,UAC1C,kBAAC,UAAD,CAAMC,KAAK,QAAQC,KAAM,GAAIC,MAAM,YAI3C,kBAAC,IAAOC,QAAR,CAAgB5B,MAAOG,EAAO0B,eAC1B,kBAACC,EAAA,EAAmB1C,IA+DxB,kBAAC,IAAOwC,QAAR,CAAgBG,MAAM,eAClB,kBAACC,EAAA,EAAD,CAAiBC,QAAS,WAAOxC,MAC7B,kBAACM,EAAA,EAAD,CAAMC,MAAOG,EAAO+B,YAChB,kBAAChB,EAAA,EAAD,mBACA,kBAACnB,EAAA,EAAD,CAAMoC,cAAc,QAChB,kBAACC,EAAA,EAAD,CAAQpC,MAAOG,EAAOkC,OAAQV,MAAO,UAAUW,MAAOjD,EAAWkD,aAOzF,kBAAC,IAAOX,QAAR,CAAgB5B,MAAOG,EAAOqC,qBAC1B,kBAACC,EAAA,EAAD,CACIC,KAAM,gBAAEf,EAAF,EAAEA,MAAOD,EAAT,EAASA,KAAT,OACF,kBAAC,UAAD,CACAD,KAAK,cACLE,MAAOA,EACPD,KAAMA,KAGViB,MAAM,WACNV,QAAS,WAAOzC,SAOpC,IAAMW,EAASyC,IAAWC,OAAO,CAC7BzC,cAAe,CACXH,KAAM,GAEVM,gBAAiB,CACbuC,QAAS,IAEbhC,QAAS,CACLiC,MAAO,GACPC,OAAQ,GACRC,aAAc,GACdC,YAAa,EACbC,YAAa,SAEjBlC,KAAM,CAEFmC,UAAW,SACXC,aAAc,WACdN,MAAO,IACPC,OAAQ,IAEZ5B,KAAM,CACFO,MAAO,QACP2B,SAAU,GACVC,WAAY,MACZC,eAAgB,GAEpBxC,IAAK,CACDR,cAAe,UAEnBW,SAAU,CACNmC,SAAU,EACVG,UAAW,SACX9B,MAAO,QACP4B,WAAY,QAEhBhC,MAAO,CACHI,MAAO,QACP2B,SAAU,GACVI,YAAa,GAGjB3B,MAAO,CACHuB,SAAU,GACVK,UAAW,EACXJ,WAAY,QAEhBK,QAAS,CACLN,SAAU,GACVO,WAAY,IAEhBC,IAAK,CACDH,UAAW,GACXnD,cAAe,MACfuD,WAAY,UAEhBC,QAAS,CACLxD,cAAe,MACfuD,WAAY,SACZL,YAAa,IAEjBO,UAAW,CACPV,WAAY,OACZG,YAAa,GAEjB7B,cAAe,CACX8B,UAAW,IAEfnB,oBAAqB,CACjB0B,aAAc,GACdC,eAAgB,UAChBC,eAAgB,GAEpBlC,WAAY,CACR1B,cAAe,MACfC,eAAgB,gBAChB4D,gBAAiB,GACjBC,kBAAmB,IAEvBjC,OAAQ,CACJkC,UAA2B,QAAhBC,IAASC,GAAe,CAAC,CAAEC,OAAQ,IAAM,CAAEC,OAAQ,KAAQ,CAAC,CAAED,OAAQ,GAAK,CAAEC,OAAQ,O,0KC3QxG,GAAuBC,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QACP8B,GAAUC,EAASC,OAwJVC,GA9HI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACX5E,EAAWhB,eAAXgB,OACR,EAAgC6E,mBAAS,MAAzC,WAAOC,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WAERC,MAIC,IAEH,IAOMA,EAAc,8BAAAC,EAAAC,OAAA,uDACdC,EAAMZ,GAAU,8BACP,OACTa,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAE3BC,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OANS,MAOTL,YATc,WAAAH,EAAA,MAYZS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAGHhB,GAAY,SAAAD,GAAQ,OAAIiB,QAE3BC,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MArBO,6DAyBdC,EAAQrH,eAEd,OACE,kBAACS,EAAA,EAAD,CAAMC,MAAOG,GAAOyG,WAClB,kBAACC,GAAA,EAAD,CAAWC,SAAYH,EAAMpE,KAAO,gBAAkB,iBACtD,kBAAClC,EAAA,EAAD,CACMC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAO8G,cAEhB7B,EAKF,kBAAC8B,GAAA,EAAD,CAAclH,MAAO,CAAC2D,UAAW,IAAK1D,KAAM,IAC1C,kBAACkH,GAAA,EAAD,CACEC,KAAMhC,EACNiC,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OAAc,kBAACC,EAAD,CAAMxF,MAAOuF,EAAKE,UAAWC,YAAaH,EAAKI,gBAAiBC,KAAML,EAAKM,UAAWC,OAAUP,EAAKE,aAC/HM,aAAc,SAAAR,GAAI,OAAIA,EAAKS,GAAGC,eARlC,kBAACjI,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,aAetD,SAASX,EAAT,GAAkD,IAAlCxF,EAAiC,EAAjCA,MAAM0F,EAA2B,EAA3BA,YAAYE,EAAe,EAAfA,KAAKE,EAAU,EAAVA,OACrCF,EAAI,2BAA8BA,EAClC,IAAIQ,EAAU,KACVC,EAAY,KACZC,GAAa,EACbC,EAAWT,EAAOU,OACtB,OAAOD,GACL,IAAK,2BACHA,EAAW,aACX,MACF,IAAK,iBACDA,EAAW,iBACX,MACJ,IAAK,WACDD,GAAa,EACb,MACJ,IAAK,oBACHF,EAAU,eACVC,EAAY,CAACI,OAAQ,UAAWC,OAAQ,CAACC,UAAW,QACpDJ,EAAW,iBACX,MACF,QACEA,EAAW,iBAIf,OACE,kBAAC5H,EAAA,EAAD,CAAkBuB,QAAS,YACL,IAAfoG,EAtFI,EAAA7C,EAAAC,OAAA,kEAAAD,EAAA,MAEMmD,IADF,wCADJ,0EAyFLzD,EAAW0D,SAASN,EAAU,CAACE,OAAQL,EAASM,OAAQL,MAG5D,kBAACrI,EAAA,EAAD,CAAMC,MAAOG,GAAOmH,MAOlB,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO0I,cAAe,CAACC,gBAAiBxI,EAAOoC,QAC3D,kBAAC/B,EAAA,EAAD,CAAOX,MAASG,GAAOwH,KAAM/G,OAAU,CAACC,IAAM8G,MAEhD,kBAAC5H,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4I,cAAe,CAACD,gBAAiBxI,EAAO0I,WAC3D,kBAAC,IAAD,CAAMhJ,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAO2I,aAAclH,GACxD,kBAAChC,EAAA,EAAD,CAAMC,MAAO,CAAEkJ,kBAAmB,IAAIC,kBAAmB7I,EAAO8I,KAAKlF,aAAc,EAAEP,UAAW,KAChG,kBAAC,IAAD,CAAM3D,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO8I,QAAS3B,QAWlEtH,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,GAGRgH,aAAa,CACXhH,KAAM,GAGRqH,KAAM,CACJ9G,cAAe,MACf6I,OAAQ,GACRrG,OAAQA,GAAO,GAGjB6F,cAAe,CACb9F,MAAO,MACPD,QAAS,GACTwG,oBAAqB,EACrBC,uBAAwB,EACxBT,gBAAiB,QACjBrI,eAAgB,SAChB4C,aAAc,UAGhB0F,cAAe,CACbhG,MAAO,MACPD,QAAS,GACT0G,qBAAsB,EACtBC,wBAAyB,EACzBhJ,eAAgB,SAChB4C,aAAc,UAIhBtB,MAAO,CACL0B,UAAW,SACXF,WAAY,OACZD,SAAUN,GAAS,IAAM,GAAK,IAGhCyE,YAAa,CACXhE,UAAW,OACXH,SAAUN,GAAS,IAAM,GAAK,IAGhC2E,KAAM,CACJ5E,MAAOC,GAAS,IAAM,IAAM,GAC5BA,OAAQA,GAAS,IAAM,IAAM,GAC7BC,aAAcD,GAAS,IAAM,GAAK,GAClCE,YAAa,EACbC,YAAa,QACbC,UAAW,Y,UCrKAsG,GA5CQ,WAOnB,OACE,kBAACrJ,EAAA,EAAD,CACEC,OAAQ,CAAC,UAAU,WACnBN,MAASG,GAAOyG,WAEhB,kBAAC7G,EAAA,EAAD,CAAMC,MAAOG,GAAOwJ,QAClB,kBAAC,IAAD,CAAM3J,MAASG,GAAOyJ,OAAtB,WAEF,kBAAC7J,EAAA,EAAD,CAAMC,MAAO,CAAC8C,QAAS,KACrB,kBAAC,IAAD,CAAM9C,MAASG,GAAO0J,UAAtB,qBACA,kBAAC,IAAD,CAAM7J,MAASG,GAAO2J,MAAtB,qBAA+C,KAA/C,YACgB,KADhB,qBAGA,kBAAC,IAAD,CAAM9J,MAASG,GAAO2J,MAAtB,qBACA,kBAAC,IAAD,CAAM9J,MAASG,GAAO2J,MAAtB,sBACA,kBAACpJ,EAAA,EAAD,CAAkBuB,QAAS,kBAAK8H,KAAQC,QAAQ,gCAC9C,kBAAC,IAAD,CAAMhK,MAAOG,GAAO8J,MAApB,wBAEF,kBAACvJ,EAAA,EAAD,CAAkBuB,QAAS,kBAvBrB,EAAAuD,EAAAC,OAAA,kEAAAD,EAAA,MAEWmD,IADL,gCADN,4EAwBJ,kBAAC,IAAD,CAAM3I,MAAOG,GAAO8J,MAApB,wBAGJ,kBAAClK,EAAA,EAAD,CAAMC,MAAOG,GAAOwJ,QAClB,kBAAC,IAAD,CAAM3J,MAASG,GAAOyJ,OAAtB,YAEF,kBAAC7J,EAAA,EAAD,CAAMC,MAAO,CAAC8C,QAAS,KACrB,kBAAC,IAAD,CAAM9C,MAASG,GAAO0J,UAAtB,gBACA,kBAAC,IAAD,CAAM7J,MAASG,GAAO2J,MAAtB,qBACA,kBAAC,IAAD,CAAM9J,MAASG,GAAO2J,MAAtB,qBACA,kBAACpJ,EAAA,EAAD,CAAkBuB,QAAS,kBAAK8H,KAAQC,QAAQ,mCAC9C,kBAAC,IAAD,CAAMhK,MAAOG,GAAO8J,MAApB,8BASN9J,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACP3G,KAAM,GAIV0J,OAAQ,CACNb,gBAAiB,UACjBhG,QAAS,IAEX8G,MAAO,CACLtG,SAAU,GACVC,WAAY,OACZ5B,MAAO,SAETkI,SAAU,CACRvG,SAAU,GACV3B,MAAO,UACPuC,aAAc,IAEhB4F,KAAM,CACJxG,SAAU,IAEZ2G,KAAM,CACJtG,UAAW,GACXL,SAAU,GACVC,WAAY,OACZ5B,MAAO,UACPuI,mBAAoB,e,4BCtE1B,GAAuBtF,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,Q,IA2GEJ,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,GAIR0J,OAAQ,CACNb,gBAAiB,QACjBhG,QAAS,IAEXf,MAAO,CACLJ,MAAO,QACP2B,SAAU,GACVC,WAAY,QAEd4G,SAAU,CACR7G,SAAU,IAEZ8G,OAAQ,CACNrG,WAAY,SACZJ,UAAWX,GAAS,IAAM,GAAK,IAEjCqH,OAAQ,CACJtH,MAAO,OACPY,UAAWX,GAAS,IAAM,GAAK,EAC/BA,OAAQ,GACRvC,eAAgB,SAChBsD,WAAY,SACZd,aAAc,GACdiB,aAAc,IAElBoG,SAAU,CACNhH,SAAU,GACVC,WAAY,UCpIHX,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN8D,WAAY,SACZtD,eAAgB,Y,2nBCHpB,IAAM8J,GAAS3F,KAAWC,IAAI,UACtB9B,GAAmBwH,GAAnBxH,MAAOC,GAAYuH,GAAZvH,OACTwH,GAAWzF,EAAS0F,KAifXC,GA/eO,SAAC,GAAoB,IAAlBxF,EAAiB,EAAjBA,WAEvB,EAAmDjG,IAAMM,WAAWP,GAApE,kBAAqB2L,GAArB,EAASlL,YAAT,EAAqBkL,eAAiBjL,EAAtC,KAQA,EAAsCT,IAAMkG,SAASzF,EAAUG,YAAuD,IAA1CH,EAAUG,WAAWC,QAAQ,QAAiB,2BAA6BJ,EAAUG,WAAYH,EAAUG,WAAY,MAAnM,WAAK+K,EAAL,KAAmBC,EAAnB,KACA,EAAoC5L,IAAMkG,UAAS,GAAnD,WAAK2F,EAAL,KAAkBC,EAAlB,KACA,EAA8C9L,IAAMkG,UAAS,GAA7D,WACA,GADA,UACoClG,IAAMkG,SAAS,KAAnD,WACA,GADA,UACgClG,IAAMkG,UAAS,IAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KACA,EAAgChM,IAAMkG,UAAS,GAA/C,WAAK+F,EAAL,KAAgBC,EAAhB,KACA,EAAwBlM,IAAMkG,SAAS,CACnCiG,UAAU,EACVC,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,gBAAiB,GACjBC,UAAU,EACV5K,IAAK,uCAPT,WAAOuG,EAAP,KAAasE,EAAb,KASmBpM,eAAXgB,OAEiBqL,mBACIA,mBAE7BrG,qBAAU,WAERuF,EAAgBD,EAAelL,EAAUG,YAAuD,IAA1CH,EAAUG,WAAWC,QAAQ,QAAiB,2BAA6BJ,EAAUG,WAAYH,EAAUG,WAAY,QAE5K,CAACH,EAAUG,aAEd,IA4EM+L,EAAY,SAAOC,GAAP,qBAAArG,EAAAC,OAAA,uDACZC,EAAM8E,GAAW,WACR,MACT7E,EAAU,IAAIC,QACdkG,EAAOC,KAAKC,UAAU,CAAC,WAAaH,IAExClG,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAC1CtG,EAAQE,OAAO,MAAO,MACtBF,EAAQE,OAAO,OAAQqG,KAAKC,SAASnE,YAEjClC,EAAM,IAAIC,QAAQL,EAAK,CACzBM,OAVW,MAWXL,UACAmG,SAdc,YAAAtG,EAAA,MAiBVS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,GAAwC,YAAxBA,EAAa+F,QAG7BC,EAAcR,GACdrF,IAAMC,MACJ,UACA,6BACA,CACI,CAAC2C,KAAM,KAAMnH,QAAS,WAAQgJ,EAAaD,GAAY,GACzBD,EAAeD,GAAc,GAC7BK,EAAaD,GAAY,GACzBP,EAAckB,GACd3G,EAAW0D,SAAS,cAKxDpC,IAAMC,MAAM,aAAc,iDAC1BsE,EAAeD,GAAc,GAC7BK,EAAaD,GAAY,GACzBD,EAAaD,GAAY,OAGhC1E,OAAM,SAACC,GACNC,IAAMC,MAAM,QAASF,EAAMG,aA5Cb,8DAgDZ2F,EAAgB,SAAMR,GAAN,iBAAArG,EAAAC,OAAA,kEAAAD,EAAA,MACI8G,IAAaC,QAAQ,gBADzB,cAChB5M,EADgB,QAEhB6M,EAAiBT,KAAKU,MAAM9M,IAEjBE,WAAcgM,EAJT,WAAArG,EAAA,MAKd8G,IAAaI,QAAQ,cAAeX,KAAKC,UAAUQ,KALrC,6DAyChBG,EAAW,SAAOd,GAAP,eAAArG,EAAAC,OAAA,qDAEXoG,EAAOtD,OAAOqE,OAAS,GAFZ,uBAGL,IACA,IAJK,WAAApH,EAAA,MAKWqH,KACtBhB,EAAOtD,OACP,CAAC,CAAEuE,OAAQ,CAAC/J,MAHN,IAGgBC,OAJhB,OAKN,CAAC+J,SAAU,EAAGC,OAAQH,KAA4BI,KAAMC,QAAQ,KARrD,OAKTC,EALS,OAWbvB,EAAUuB,EAAYD,QAXT,sBAiBfE,KAASC,UAjBM,8DA4IbC,EAAa,OACbC,EAAkB,YAQpB,OANkB,IAAhBzC,IAAsC,IAAdI,IAC1BoC,EAAa,QACbC,EAAkB,WAKhB,kBAAC,KAAD,CAAyBvN,MAAOG,GAAOyG,WACnC,kBAAC,KAAD,CAAS5G,MAAOG,GAAOqN,eAAgBtC,UAAWA,GAC5C,kBAACnL,EAAA,EAAD,CAAMC,MAAO,CAAC8I,gBAAiB,QAAS7F,aAAc,EAAGE,YAAa,qBAAsBJ,MAAOA,GAAQ,GAAIC,OAAQ,MACnH,kBAACjD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMC,MAAOG,GAAOsN,aAEhB,kBAAC,IAAD,CAAMC,kBAAkB,EAAO1N,MAAOG,GAAOwN,iBAA7C,oBAEA,kBAACjN,EAAA,EAAD,CAAkBuB,QAAS,kBAAMkJ,GAAa,KAC1C,kBAAC,UAAD,CAAMnL,MAAO,CAAC2B,MAAO,QAASiM,WAAY,IAAKnM,KAAK,QAAQC,KAAM,OAI1E,kBAAC3B,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO0N,UAAW,CAAClK,UAAU,MACvC,kBAAC5D,EAAA,EAAD,KAEI,kBAAC,IAAD,CAAM2N,kBAAkB,EAAO1N,MAAO,CAACsD,SAAU,GAAI3B,MAAO,UAAWmM,YAAa,KAApF,qGAIA,kBAAC/N,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAY,GAAIC,aAAc,GAAIC,WAAY,KACxD,kBAAC,IAAD,CAAMN,kBAAkB,EAAO1N,MAAO,CAACsD,SAAU,GAAI3B,MAAO,UAAW4B,WAAY,OAAQW,cAAe,GAAI4J,YAAa,KAA3H,iBASJ,kBAAC/N,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAY,GAAIC,aAAc,KACxC,kBAAC,IAAD,CAAML,kBAAkB,EAAO1N,MAAO,CAACsD,SAAU,GAAI3B,MAAO,UAAW4B,WAAY,OAAQW,cAAe,GAAI4J,YAAa,KAA3H,iBASJ,kBAAC/N,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAY,GAAIC,aAAc,KACxC,kBAAC,IAAD,CAAML,kBAAkB,EAAO1N,MAAO,CAACsD,SAAU,GAAI3B,MAAO,UAAW4B,WAAY,OAAQW,cAAe,GAAI4J,YAAa,KAA3H,qBASJ,kBAAC/N,EAAA,EAAD,CAAMC,MAAOG,GAAO8N,aAChB,kBAACvN,EAAA,EAAD,CACI2K,SAAWjE,EAAKqE,SAChBxJ,QAAS,WA3FI,GAA7CmF,EAAKkE,YAAYtD,WAAWO,OAAOqE,OACnCpG,IAAMC,MAAM,kBAAkB,uCAEsB,GAA7CW,EAAKmE,YAAYvD,WAAWO,OAAOqE,QAC1ClB,EAAQ,GAAD,MAAKtE,GAAL,IAAWgE,UAAU,KAC5B5E,IAAMC,MAAM,kBAAkB,wCAEvBW,EAAKoE,gBAAgBxD,WAAWO,QAAUnB,EAAKmE,YAAYvD,WAAWO,SAC7EmD,EAAQ,GAAD,MAAKtE,GAAL,IAAWgE,UAAU,KAC5B5E,IAAMC,MAAM,kBAAkB,+DAmFEzG,MAAO,CAACG,GAAO+N,OAAQ/N,GAAOgO,YAAa,CAACpL,MAAM,OAClD,kBAAC,IAAD,CAAM2K,kBAAkB,EAAO1N,MAAO,CAAC2B,MAAM,UAA7C,iBAS5B,kBAAC5B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAMC,MAAOG,GAAOiO,SAClB,kBAAC,IAAD,CAAMV,kBAAkB,EAAO1N,MAAOG,GAAOkO,WAA7C,mBAEF,kBAACtO,EAAA,EAAD,CAAMC,MAAOG,GAAOmO,YAClB,kBAACvO,EAAA,EAAD,CAAMC,MAAO,CAAE8C,QAAS,KACH,OAAjB8H,EACA,kBAACjK,EAAA,EAAD,CAAOC,OAAQ,CAAEC,IAAK+J,GAAgB5K,MAAO,CAAE+C,MAAOC,GAAS,IAAM,IAAM,IAAKA,OAAQA,GAAS,IAAM,IAAM,IAAKC,aAAcD,GAAS,IAAM,IAAM,OACrJ,kBAACrC,EAAA,EAAD,CAAOC,OAAQG,EAAQ,KAA0Bf,MAAO,CAAE+C,MAAOC,GAAS,IAAM,IAAM,IAAKA,OAAQA,GAAS,IAAM,IAAM,IAAKC,aAAcD,GAAS,IAAM,IAAM,QAGpK,kBAACtC,EAAA,EAAD,CAAkBuB,QAAS,kBA/UnB,0BAAAuD,EAAAC,OAAA,kEAAAD,EAAA,MAEW+I,QAFX,WAIa,IAJb,OAICC,QAJD,uBAKlB/H,MAAM,2EALY,4CAAAjB,EAAA,MASC+I,KAA8B,CACjDE,eAAe,EACfC,OAAQ,CAAC,EAAG,QAXM,QASdC,EATc,QAcRC,YACV7D,EAAeD,GAAc,GAC7BD,EAAgBD,EAAe+D,EAAO9N,MAhBpB,6DA+UyBgO,IAAiB7O,MAAO,CAACG,GAAO+N,OAAQ/N,GAAOiK,OAAQ,CAACrH,MAAO,UAC9F,kBAAChD,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOuD,WAAY,WAC9C,kBAAC,UAAD,CAAMtC,KAAK,cAAcC,KAAM,GAAIC,MAAM,QAAQ3B,MAAO,CAAC0D,YAAa,KACtE,kBAAC,IAAD,CAAMgK,kBAAkB,EAAO1N,MAAO,CAAC2B,MAAM,QAAQ4B,WAAY,SAAjE,mBAIJ,kBAAC7C,EAAA,EAAD,CAAkBuB,QAAS,YA1WtB,mBAAAuD,EAAAC,OAAA,kEAAAD,EAAA,MAEc+I,QAFd,WAIgB,IAJhB,OAIIC,QAJJ,uBAKf/H,MAAM,iFALS,4CAAAjB,EAAA,MASI+I,KAAoC,CACvDE,eAAe,EACfC,OAAQ,CAAC,EAAG,QAXG,QASXC,EATW,QAcLC,YACV7D,EAAeD,GAAc,GAC7BD,EAAgBD,EAAe+D,EAAO9N,MAhBvB,6DA0W6BiO,IAAe9O,MAAO,CAACG,GAAO+N,OAAQ/N,GAAOiK,OAAQ,CAACrH,MAAO,UAC7F,kBAAChD,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOuD,WAAY,WAC9C,kBAAC,UAAD,CAAMtC,KAAK,SAASC,KAAM,GAAIC,MAAM,QAAQ3B,MAAO,CAAC0D,YAAa,KACjE,kBAAC,IAAD,CAAMgK,kBAAkB,EAAO1N,MAAO,CAAC2B,MAAM,QAAQ4B,WAAY,SAAjE,kBA6CJ,kBAAC7C,EAAA,EAAD,CAAkB2K,UAA0B,IAAhBP,IAAuC,IAAdI,IAAqC,IAAdF,EAAqB/I,QAAS,WAAQgJ,EAAaD,GAAY,GAAO2B,EAAS/B,IAAiB5K,MAAO,CAACG,GAAO+N,OAAQ/N,GAAOiK,OAAQ,CAACtB,gBAAiByE,EAAiBxK,MAAO,UACvPiI,EACG,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAO,UAEvC,kBAAC,IAAD,CAAM+L,kBAAkB,EAAO1N,MAAO,CAAC2B,MAAO2L,EAAY/J,WAAY,SAAtE,eAYlBpD,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EAGN8N,aAAc,GACdD,YAAa,IAIfM,QAAS,GAGTE,WAAY,CACVvK,WAAY,SACZtD,eAAgB,SAChBqC,QAAS,IAEXuL,UAAW,CACTT,WAAY,GACZjK,UAAW,GACXL,SAAU,GACVC,WAAY,OACZ5B,MAAO,QAETuM,OAAQ,CACJpF,gBAAiB,UAEjBzE,gBAAiB,GACjBpB,aAAc,GAGlBmH,OAAQ,CACJzG,UAAW,GACXX,OAAQ,GACRvC,eAAgB,SAEhBsD,WAAY,UAGhByJ,eAAgB,CACdzJ,WAAY,SACZtD,eAAgB,UAElBgN,YAAa,CACTzK,OAAQ,GACR8F,gBAAiB,UACjBiG,UAAW,EACXzK,kBAAmB,GACnB9D,cAAe,MACfuD,WAAY,SACZtD,eAAgB,iBAEpB0N,YAAa,CACXxK,UAAW,GAEXI,WAAY,UAGdkK,YAAa,CACXF,aAAc,GAEdvN,cAAe,MACfuD,WAAY,SACZtD,eAAgB,YAElBkN,gBAAiB,CACfC,WAAY,GAEZtK,SAAS,GACTC,WAAY,OACZ5B,MAAO,W,mnBChkBX,IAAMmD,GAAUC,EAASC,OACzB,GAAuBJ,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAq9BEgM,GAn9BC,SAAC,GAAiC,IAAD,EAA7BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChC,EAA6DlQ,IAAMM,WAAWP,GAA9E,kBAAQoQ,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,0BAA4B3P,EAAhD,KACM4P,EAAc5P,EAAU4P,YACxBC,EAAe7P,EAAU8P,gBAC/B,EAA8CvQ,IAAMkG,SAAS,MAA7D,WAAOsK,EAAP,KAAwBC,EAAxB,KACIC,EAAuBjQ,EAAUkQ,QAKrC,EAA8B3Q,IAAMkG,SAASmK,EAAYO,UAAzD,WAAKC,EAAL,KAAeC,EAAf,KACA,EAA4C9Q,IAAMkG,SAASmK,EAAYU,iBAAvE,WAAKC,EAAL,KAAsBC,EAAtB,KACA,EAAoCjR,IAAMkG,SAASmK,EAAYa,YAAaC,IAAOd,EAAYa,aAAanD,OAAO,cAAc,MAAjI,WAAKqD,EAAL,KAAkBC,EAAlB,KACA,EAA0BrR,IAAMkG,SAASmK,EAAYiB,OAAOvI,SAAUsH,EAAYiB,OAAOvI,WAAW,MAApG,WAAKwI,EAAL,KAAaC,EAAb,KACA,EAAgExR,IAAMkG,SAASmK,EAAYoB,2BAA3F,WAAKC,EAAL,KAAgCC,EAAhC,KACA,EAA8B3R,IAAMkG,SAASmK,EAAYuB,UAAzD,WAAKC,EAAL,KAAeC,EAAf,KACA,GAA0B9R,IAAMkG,SAASmK,EAAY0B,QAArD,aAAKC,GAAL,MAAaC,GAAb,MACA,GAA4BjS,IAAMkG,SAAqC,MAA5BmK,EAAY6B,cAAvD,aAAKC,GAAL,MAAcC,GAAd,MACA,GAAsCpS,IAAMkG,SAASmK,EAAY6B,cAAjE,aAAKG,GAAL,MAAmBC,GAAnB,MACA,GAA0BtS,IAAMkG,YAAUmK,EAAYkC,aAAelC,EAAYkC,YAAc,IAA/F,aAAKC,GAAL,MAAaC,GAAb,MACA,GAAoCzS,IAAMkG,SAASmK,EAAYkC,YAAclC,EAAYkC,YAAYxJ,WAAW,KAAhH,aAAK2J,GAAL,MAAkBC,GAAlB,MACA,GAAgC3S,IAAMkG,SAASmK,EAAYuC,WAA3D,aAAKC,GAAL,MAAgBC,GAAhB,MACA,GAAgD9S,IAAMkG,SAASmK,EAAY0C,kBAAoB1C,EAAY0C,kBAAkBhK,WAAW,KAAxI,aAAKiK,GAAL,MAAwBC,GAAxB,MACA,GAAgDjT,IAAMkG,SAASmK,EAAY6C,kBAAoB7C,EAAY6C,kBAAkBnK,WAAW,KAAxI,aAAKoK,GAAL,MAAwBC,GAAxB,MACA,GAAgDpT,IAAMkG,SAASmK,EAAYgD,kBAAoBhD,EAAYgD,kBAAkBtK,WAAW,MAAxI,aAAKuK,GAAL,MAAwBC,GAAxB,MACA,GAA8CvT,IAAMkG,SAASmK,EAAYmD,kBAAzE,aAAKC,GAAL,MAAuBC,GAAvB,MACA,GAAgD1T,IAAMkG,SAASmK,EAAYsD,mBAA3E,aAAKC,GAAL,MAAwBC,GAAxB,MACA,GAAwC7T,IAAMkG,SAAuC,MAA9BmK,EAAYyD,cAAuB,EAAI,GAA9F,aAAKC,GAAL,MAAoBC,GAApB,MACA,GAAkChU,IAAMkG,SAAmC,GAA1BmK,EAAY4D,WAAiB,EAAG,GAAjF,aAAKC,GAAL,MAAiBC,GAAjB,MACA,GAA8DnU,IAAMkG,SAASmK,EAAY+D,0BAAzF,aAAKC,GAAL,MAA+BC,GAA/B,MACA,GAAoCtU,IAAMkG,SAASmK,EAAYkE,aAA/D,aAAKC,GAAL,MAAkBC,GAAlB,MACA,GAAwCzU,IAAMkG,SAASmK,EAAYqE,cAAgBrE,EAAYqE,cAAc3L,WAAW,MAAxH,aAAK4L,GAAL,MAAoBC,GAApB,MACA,GAAwC5U,IAAMkG,SAASmK,EAAYwE,cAAgBxE,EAAYwE,cAAc9L,WAAW,MAAxH,aAAK+L,GAAL,MAAoBC,GAApB,MACA,GAA0B/U,IAAMkG,SAASmK,EAAY2E,QAArD,aAAKC,GAAL,MAAaC,GAAb,MACA,GAAkClV,IAAMkG,SAASmK,EAAY8E,YAA7D,aAAKC,GAAL,MAAiBC,GAAjB,MACA,GAAoCrV,IAAMkG,SAASmK,EAAYiF,aAA/D,aAAKC,GAAL,MAAkBC,GAAlB,MACA,GAA8BxV,IAAMkG,SAASmK,EAAYoF,UAAzD,aAAKC,GAAL,MAAeC,GAAf,MACA,GAAkC3V,IAAMkG,SAASmK,EAAYuF,YAA7D,aAAKC,GAAL,MAAiBC,GAAjB,MAEkB,IAAfD,IACD1D,IAAU,EACVK,IAAS,EACT9B,EAAqBkF,WAAa,GAEb,IAAfC,IACN1D,IAAU,EACVK,IAAS,EACT9B,EAAqBkF,WAAa,GAEb,IAAfC,IACN1D,IAAU,EACVK,IAAS,EACT9B,EAAqBkF,WAAa,GAEb,IAAfC,KACN1D,IAAU,EACVK,IAAS,EACT9B,EAAqBkF,WAAa,GAGpClF,EAAqBE,SAAWC,EAChCH,EAAqBK,gBAAkBC,EACvCN,EAAqBQ,YAAcE,EACnCV,EAAqBY,OAASC,EAC9Bb,EAAqBe,+BAA0DsE,IAA9BrE,EAA0C,KAAOA,EAClGhB,EAAqBkB,cAAwBmE,IAAblE,EAAyB,KAAOA,EAChEnB,EAAqBqB,YAAoBgE,IAAX/D,GAAuB,KAAOA,GAC5DtB,EAAqBsF,QAAU7D,GAC/BzB,EAAqBwB,kBAAgC6D,IAAjB1D,GAA6B,KAAOA,GACxE3B,EAAqBuF,OAASzD,GAC9B9B,EAAqB6B,YAAcG,GAAeA,GAAY3J,WAAa,IAC3E2H,EAAqBkC,eAA0BmD,IAAdlD,GAA0B,KAAOA,GAClEnC,EAAqBqC,kBAAoBC,GAAoBA,GAAkBjK,WAAa,IAC5F2H,EAAqBwC,kBAAoBC,GAAoBA,GAAkBpK,WAAa,IAC5F2H,EAAqB2C,kBAAoBC,GAAoBA,GAAkBvK,WAAa,IAC5F2H,EAAqB8C,iBAAmBC,GACxC/C,EAAqBiD,kBAAoBC,GACzClD,EAAqBoD,cAAkC,IAAlBC,GAAsB,IAAM,IACjErD,EAAqBuD,gBAA4B8B,IAAf7B,GAA2B,KAAOA,GACpExD,EAAqB0D,yBAA2BC,GAChD3D,EAAqB6D,YAAcC,GACnC9D,EAAqBgE,cAAgBC,GAAgBA,GAAc5L,WAAa,IAChF2H,EAAqBmE,cAAgBC,GAAgBA,GAAc/L,WAAa,IAChF2H,EAAqBsE,YAAoBe,IAAXd,GAAuB,KAAOA,GAC5DvE,EAAqByE,WAAaC,GAClC1E,EAAqB4E,YAAcC,GACnC7E,EAAqB+E,SAAWC,GAEhC,IACIQ,GADEC,GAASnW,IAAM0M,SAIf0J,GAAMpW,IAAM0M,SAClB,GAAsC1M,IAAMkG,UAAS,GAArD,aAAKmQ,GAAL,MAAmBC,GAAnB,MACA,GAA0CtW,IAAMkG,UAAS,GAAzD,aAAKqQ,GAAL,MAAqBC,GAArB,MACA,GAAwCxW,IAAMkG,UAAS,GAAvD,aAAKuQ,GAAL,MAAoBC,GAApB,MACA,GAAwC1W,IAAMkG,UAAS,GAAvD,aAAKyQ,GAAL,MAAoBC,GAApB,MACA,GAAoC5W,IAAMkG,UAAS,GAAnD,aAAK2Q,GAAL,MAAkBC,GAAlB,MAEA,GAAwC9W,IAAMkG,SAAS,GAAvD,aAAK6Q,GAAL,MAAoBC,GAApB,MACA,GAAsChX,IAAMkG,SAAS,GAArD,aAAK+Q,GAAL,MAAmBC,GAAnB,MACA,GAAoClX,IAAMkG,SAAS,GAAnD,aAAKiR,GAAL,MAAkBC,GAAlB,MACA,GAA4CpX,IAAMkG,SAAS,GAA3D,aAAKmR,GAAL,MAAsBC,GAAtB,MACA,GAAgCtX,IAAMkG,SAAS,GAA/C,aAAKqR,GAAL,MAAgBC,GAAhB,MAGMC,GAAqB,SAACC,GACN,IAAjBA,GAEDV,GAAiBD,GAAgB,KACjCT,GAAgBD,IAAe,GAE/Ba,GAAgBD,GAAe,GAC/BT,GAAkBD,IAAiB,GAEnCa,GAAeD,GAAc,GAC7BT,GAAiBD,IAAgB,GACjCa,GAAmBD,GAAkB,GACrCT,GAAiBD,IAAgB,GAEjCa,GAAaD,GAAY,GACzBT,GAAeD,IAAc,IAEN,IAAjBa,GAENV,GAAiBD,GAAgB,GACjCT,GAAgBD,IAAe,GAE/Ba,GAAgBD,GAAe,KAC/BT,GAAkBD,IAAiB,GAEnCa,GAAeD,GAAc,GAC7BT,GAAiBD,IAAgB,GACjCa,GAAmBD,GAAkB,GACrCT,GAAiBD,IAAgB,GACjCa,GAAaD,GAAY,GACzBT,GAAeD,IAAc,IAEN,IAAjBa,GAENV,GAAiBD,GAAgB,GACjCT,GAAgBD,IAAe,GAE/Ba,GAAgBD,GAAe,GAC/BT,GAAkBD,IAAiB,GAEnCa,GAAeD,GAAc,KAC7BT,GAAiBD,IAAgB,GACjCa,GAAmBD,GAAkB,GACrCT,GAAiBD,IAAgB,GACjCa,GAAaD,GAAY,GACzBT,GAAeD,IAAc,IAEN,IAAjBa,GAENV,GAAiBD,GAAgB,GACjCT,GAAgBD,IAAe,GAE/Ba,GAAgBD,GAAe,GAC/BT,GAAkBD,IAAiB,GAEnCa,GAAeD,GAAc,GAC7BT,GAAiBD,IAAgB,GACjCa,GAAmBD,GAAkB,KACrCT,GAAiBD,IAAgB,GAEjCa,GAAaD,GAAY,GACzBT,GAAeD,IAAc,IAEN,IAAjBa,IAENV,GAAiBD,GAAgB,GACjCT,GAAgBD,IAAe,GAE/Ba,GAAgBD,GAAe,GAC/BT,GAAkBD,IAAiB,GAEnCa,GAAeD,GAAc,GAC7BT,GAAiBD,IAAgB,GACjCa,GAAmBD,GAAkB,GACrCT,GAAiBD,IAAgB,GAEjCa,GAAaD,GAAY,IACzBT,GAAeD,IAAc,KAI3Bc,GAAuB,YACV,IAAZxF,KAA+B,IAAXK,IACnBsD,GAAcD,GAAa,GAC3BnF,EAAqBkF,WAAa,IAGlB,IAAZzD,KAAgC,IAAXK,IACzBsD,GAAcD,GAAa,GAC3BnF,EAAqBkF,WAAa,IAGlB,IAAZzD,KAA+B,IAAXK,IACxBsD,GAAcD,GAAa,GAC3BnF,EAAqBkF,WAAa,IAGlB,IAAZzD,KAAgC,IAAXK,KACzBsD,GAAcD,GAAa,GAC3BnF,EAAqBkF,WAAa,IAK1C5V,IAAMqG,WAAU,WAIsG,IAAD,IAA9G5F,EAAU,iBAAoBA,EAAU,iBAAsD,iBAAnCA,EAAU,gBAAgB0B,QAGxFsO,GAAmB,SAAAD,GAAe,OAAI,QAClCR,EAAMxG,QAAsC,SAA5B,SAAAwG,EAAMxG,aAAN,IAAcC,YAC9BhJ,EAAUmX,mBAAmBC,oBAAsB,KAC/CxH,GAGFI,GAAmB,SAAAD,GAAe,OAAIH,KACtCyH,GAAkBzH,GAGlB5P,EAAUsX,aAAe,MAIzBC,MAIJA,GAAevX,EAAUwX,KAAKC,WAIjC,CAACzX,EAAUsX,aAActX,EAAU,gBAA6C,YAA5B,SAAAuP,EAAMxG,aAAN,IAAcC,aAErE,IA0BUpI,GAAWhB,eAAXgB,OAER,GAAuBrB,IAAMkG,SAAS,IAAIiS,MAA1C,aACA,IADA,YACsBnY,IAAMkG,UAAS,IAArC,aAAKkS,GAAL,MAAWC,GAAX,MACA,GAA2BrY,IAAMkG,SAAS,MAA1C,aAAKoS,GAAL,MAGMN,IAHN,MAGuB,SAAOE,GAAP,mBAAA3R,EAAAC,OAAA,uDACjBC,EAAM,KACG,MACTC,EAAU,IAAIC,QAEhBF,EADEyR,EACIrS,GAAU,kBAAqBqS,EAE/BrS,GAAU,kBAElBa,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAXS,MAYTL,YAdiB,WAAAH,EAAA,MAiBfS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,EAAamR,WAAanR,EAAaoR,IAGvCV,GADEI,EACgB9Q,EAAaoR,IAAI,GAEjBpR,EAAaoR,MAIjCjR,IAAMC,MAAM,aAAcJ,EAAaK,SACvCgR,aAAY,SAAAC,GAAQ,MAAI,UAG7BrR,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAnCU,8DAuCjBqQ,GAAoB,SAACa,GAIzBxI,EAAWwI,GACXlI,GAAmB,SAAAD,GAAe,OAAImI,KAEtC7H,EAAYD,EAAW8H,EAAa/H,UACpCK,EAAmBD,EAAkB2H,EAAa5H,iBAClDM,EAAeD,EAAeuH,EAAazH,YAAaC,IAAOwH,EAAazH,aAAanD,OAAO,cAAc,MAC9GyD,EAAUD,EAASoH,EAAarH,OAAOvI,SAAU4P,EAAarH,OAAOvI,WAAW,MAChF4I,EAA6BD,EAA4BiH,EAAalH,0BAA4BmH,GAAWD,EAAalH,2BAA4BnB,EAAamB,0BAA0B,GAAGpO,OAChMyO,EAAYD,EAAW+G,GAAWD,EAAa/G,WAC/CK,GAAUD,GAAS2G,EAAa5G,OAAU6G,GAAWD,EAAa5G,QAAUzB,EAAayB,OAAO,GAAG1O,OACnG+O,GAAWD,GAAwC,MAA7BwG,EAAazG,cACnCI,GAAgBD,GAAesG,EAAazG,cAC5CO,GAAUD,MAAUmG,EAAapG,aAAeoG,EAAapG,YAAc,IAC3EI,GAAeD,GAAciG,EAAapG,YAAcoG,EAAapG,YAAYxJ,WAAW,KAC5F+J,GAAaD,GAAY8F,EAAa/F,WACtCK,GAAqBD,GAAoB2F,EAAa5F,kBAAoB4F,EAAa5F,kBAAkBhK,WAAW,KACpHqK,GAAqBD,GAAqBwF,EAAazF,kBAAoByF,EAAazF,kBAAkBnK,WAAW,KACrHwK,GAAqBD,GAAoBqF,EAAatF,kBAAoBsF,EAAatF,kBAAkBtK,WAAW,KACpH2K,GAAoBD,GAAoBkF,EAAanF,kBACrDK,GAAqBD,GAAqB+E,EAAahF,mBACvDK,GAAiBD,GAAiD,MAA/B4E,EAAa7E,cAAuB,EAAI,GAC3EK,GAAcD,GAAyC,GAA3ByE,EAAa1E,WAAiB,EAAG,GAC7DK,GAA4BD,GAA4BsE,EAAavE,0BACrEK,GAAeD,GAAemE,EAAapE,aAC3CK,GAAiBD,GAAiBgE,EAAajE,cAAgBiE,EAAajE,cAAc3L,WAAW,MACrGgM,GAAiBD,GAAiB6D,EAAa9D,cAAgB8D,EAAa9D,cAAc9L,WAAW,MACrGmM,GAAUD,GAAU0D,EAAa3D,QACjCK,GAAcD,GAAcuD,EAAaxD,YACzCK,GAAeD,GAAeoD,EAAarD,aAC3CK,GAAYD,GAAWiD,EAAalD,UACpCK,GAAcD,GAAa8C,EAAa/C,aAQpCgD,GAAa,SAACC,EAAKC,GAEvB,OAAID,IAGEC,GAGK,KAuEPC,GAAkB,SAAOC,GAAP,mBAAAzS,EAAAC,OAAA,uDAElBC,EAAMZ,GAAU,+CAAiDmT,EAAO,0CAC/D,OACTtS,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAGtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OARS,MASTL,YAZkB,WAAAH,EAAA,MAehBS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,EAAamR,UAGf9X,EAAUmX,mBAAmBC,oBAAsB,CACjD,iBAAoBzQ,EAAaoR,IAAIS,aAAalQ,WAClD,iBAAoB3B,EAAaoR,IAAIU,aAAanQ,WAClD,iBAAoB3B,EAAaoR,IAAIW,aAAapQ,YAIpDxB,IAAMC,MAAM,aAAcJ,EAAaK,YAI5CJ,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAE/B,MAnCW,6DAuClB2R,GAAW,SAAC/V,GACbA,EAAQkO,IAAoB,IAAVlO,GAGnBmE,MAAM,iJACNsK,EAAYD,EAAWwH,SAAS9H,EAAQ,KACxC2E,GAAWoD,WAAWD,SAAS9H,EAAQ,MAGvCO,EAAYD,EAAWxO,IAIrBkW,GAAY,SAACV,GACbA,EAAM,IAAMA,EAAM,GAEpB3I,EAASD,GAAQ,GAEX4B,EAAWgH,IAAqB,IAAbhH,GAEzBrK,MAAM,iJACNsK,EAAYD,EAAWwH,SAASR,EAAK,KACrC3I,EAASD,GAAQ,GACjBiG,GAAWoD,WAAWD,SAASR,EAAK,MAIpC3I,EAASD,GAAQ,IAsBvB,OAEE,kBAAC,KAAD,CACElP,MAAO,GACPyY,oBAAqB,CAAEC,EAAG,EAAGC,EAAG,GAChCC,sBAAuB,CAAC3Y,KAAM,GAC9B4Y,eAAe,GAIjB,kBAAC9Y,EAAA,EAAD,CAAMC,MAAQ,CAACG,GAAOyG,UAAU,CAACkC,gBAAiBxI,GAAOwY,YACvDrJ,EAKF,kBAAC1P,EAAA,EAAD,CAAMC,MAAQG,GAAO4Y,gBAErB,kBAAC7Y,EAAA,EAAD,CAAY8Y,IAAK5D,GAAQpV,MAAQG,GAAO8Y,iBACtC,kBAAClZ,EAAA,EAAD,CAAMC,MAAO,CAACkE,aAAc,KAE1B,kBAAC,IAAD,CAAMlE,MAAOG,GAAO4B,OAApB,aAEA,kBAACmX,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOwN,EACPyJ,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS/H,EAAYD,EAAWgI,MAEhD,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,oBAEA,kBAACuV,GAAA,EAAD,CACEO,WAAW,EACXC,cAAe1W,GAAS,IAAM,EAAI,EAClCmW,qBAAuB,qBACvBC,YAAY,cACZpZ,MAAO,CAACG,GAAOwZ,SAAS,CAAChY,MAAOrB,GAAOgZ,YAEvChX,MAAO2N,EACPsJ,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS5H,EAAmBD,EAAkB6H,MAG9D,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,uBAGA,kBAACjD,EAAA,EAAD,CAAkBV,MAAS,CAAEQ,cAAe,OAAQyB,QAAS,kBAAMqV,GAAQD,IAAQA,MACjF,kBAAC6B,GAAA,EAAD,CAAWlZ,MAAO,CAACC,KAAM,GACvBkZ,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YACxChX,MAAe,MAARiV,GAAeA,GAAKvP,WAAaqI,EACxCuJ,UAAU,EAIVJ,aAAc,SAAC1B,GAAD,OAASxH,EAAeD,EAAcyH,MAEtD,kBAAC+B,GAAA,EAAD,CAAS7Z,MAAO,CAAE4N,WAAY,GACxBnM,KAAK,WACLE,MAAM,OACND,KAAM,MAKb2V,IACC,kBAAC,KAAD,CACAnM,UAAWmM,GACXyC,KAAK,OACLvC,KAAOlH,EAAe,IAAI+G,KAAK/G,GAAc,IAAI+G,KACjD2C,UA1NgB,SAACC,GAAkB,IAAD,EAElC/B,EADAgC,EAAcD,GAAgBzC,GAE9B2C,EAAY9J,MAASpD,OAAO,QAYhC,GATAiN,EAAc7J,IAAO6J,GAAajN,OAAO,cAIzCsK,GAAQD,IAAQA,IAChB/G,EAAeD,EAAY4J,GAC3BhC,EAAO7H,IAAO6J,GAAajN,OAAO,QAG9BiC,EAAMxG,QAAsC,SAA5B,SAAAwG,EAAMxG,aAAN,IAAcC,WAChC,GAAIhJ,EAAUya,kBAAmB,CAG/B,IAAIC,EAAS1a,EAAUya,kBACnBrD,EAAuBsD,EAAOC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,UAAYtC,KAChEuC,EAAqBJ,EAAOC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,UAAYL,KAE9DpQ,EAAO,CACT,iBAAoB0Q,EAAmB,GAAGtC,aAAalQ,WACvD,iBAAoBwS,EAAmB,GAAGrC,aAAanQ,WACvD,iBAAoBwS,EAAmB,GAAGpC,aAAapQ,YAGrD8O,EAAoBlK,SAMtB9C,EAAO,CACL,iBAAoBgN,EAAoB,GAAGoB,aAAalQ,WACxD,iBAAoB8O,EAAoB,GAAGqB,aAAanQ,WACxD,iBAAoB8O,EAAoB,GAAGsB,aAAapQ,aAM5DqH,EAA0BvF,QAK1BkO,GAAgBC,IA0KhBwC,SAAU,kBAAMnD,GAAQD,IAAQA,OAGlC,kBAAC,IAAD,CAAMrX,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,0BACa,IAAVuL,GACC,kBAAC,IAAD,CAAMlP,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,2FAEF,kBAACvD,EAAA,EAAD,CAAMC,MAAK,MAAuB,YAAhBwE,IAASC,GAAkB,CAACiW,OAAQ,EAAEla,cAAe,OAAS,CAACA,cAAe,SAC9F,kBAAC,IAAD,CAAMR,MAAO,CAACG,GAAOwa,SAAS,KAA9B,oBACA,kBAACzB,GAAA,EAAD,CAAWlZ,MAAO,CAACoD,UAAU,aAAcnD,KAAK,GAC9CkZ,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOkO,EACP+I,aAAa,UACbC,aAAc,SAAC1B,GAAD,MAAS,CAACrH,EAAUD,EAASsH,GAAMU,GAAUV,OAE7D,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,0BAEE,kBAAC,KAAD,CACEE,MAAOtL,EAAamB,0BACpBoK,aAAcnK,EACd+J,OAAQ,EACRtB,YAAY,GACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3B4B,UAAW,CAACza,eAAgB,cAC5BT,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM+C,GAAS,IAAM,GAAM,EAAE4K,WAAY,EAAGjK,WAAW,IACrF0X,WAAW,qBACXC,aAAc,SAAAhU,GAAI,OAAIsJ,EAA6BD,EAA4BrJ,EAAKhF,WAK5F,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,eAEA,kBAAC,KAAD,CAEIuH,UAAWoK,GACXH,WAAY,SAACoG,GAAD,OAAcpG,GAAaoG,GACvCV,MAAOtL,EAAasB,SACpBiK,aAAchK,EACd4J,OAAQ,EACRtB,YAAY,wBACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3B4B,UAAW,CAACza,eAAgB,cAC5BT,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,EAAEwX,OAAQ,IAClEU,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAGiE,aAAc8R,IACrDqF,WAAW,qBACXG,OAAQ,WAA0B9E,GAAH,GAAoCtB,GAAOqG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,KACrHC,QAAS,WAAQrG,GAAgBD,IAAe,GAAOW,GAAiBD,GAAgB,IACxFsF,aAAc,SAAChU,GAAD,MAAU,CAAC+Q,GAAS/Q,EAAKhF,WAI3C,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,eAEE,kBAAC,KAAD,CACIqV,IAAK3D,GAELnK,UAAWsK,GACXqF,MAAOtL,EAAayB,OACpB6K,aAAc,EACdf,aAAc7J,GACdyJ,OAAQ,EACRtB,YAAY,wBACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3B4B,UAAW,CAACza,eAAgB,cAC5BT,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAGiE,aAAcgS,IACrDmF,WAAW,qBACXG,OAAQ,WAA0B9E,GAAH,GAAoCtB,GAAOqG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,KACrHC,QAAS,WAAQnG,GAAkBD,IAAiB,GAAOW,GAAgBD,GAAe,IAC1FoF,aAAc,SAAChU,GAAD,OAAU4J,GAAUD,GAAS3J,EAAKhF,UAKtD,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,mBACA,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAO0D,aAAc,IAC9C,kBAAC,KAAD,CACAlE,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAW5K,GAAS6K,QAAW,iBAAK,CAAC5K,GAAWD,IAAWA,IAAUwF,SACrE,kBAAC,IAAD,CAAM5W,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,WAGJ,kBAAC,KAAD,CACM6M,MAAOtL,EAAa4B,aACpBjG,UAAWwK,GACXmG,aAAc,EACdf,aAAcxJ,GACdoJ,OAAQ,EACRtB,YAAY,0BACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3B4B,UAAW,CAACza,eAAgB,cAC5BT,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAE2N,WAAY,EAAG1J,aAAckS,IACnEiF,WAAW,qBACXG,OAAQ,WAA0B9E,GAAH,GAAoCtB,GAAOqG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,KACrHC,QAAS,WAAQjG,GAAiBD,IAAgB,GAAOW,GAAeD,GAAc,IACtFkF,aAAc,SAAAhU,GAAI,OAAIiK,GAAgBD,GAAehK,EAAKhF,UAG9D,kBAACvC,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOmD,UAAW,EAAEO,aAAc,IAC7D,kBAAC,KAAD,CACAlE,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWvK,GAAQwK,QAAW,iBAAK,CAACvK,GAAUD,IAAUA,IAASmF,SACjE,kBAAC,IAAD,CAAM5W,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,UAGA,kBAACkL,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,kBACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOqP,GACP4H,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASlG,GAAeD,GAAcmG,MAGxD,kBAAC,IAAD,CAAM9X,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAU3V,UAAW,GAAGO,aAAc,IAApE,cAEA,kBAAC,KAAD,CACI2W,MAAOtL,EAAasC,UACpB3G,UAAW0K,GACXiG,aAAc,EACdf,aAAchJ,GACd4I,OAAQ,EACRtB,YAAY,oBACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3B4B,UAAW,CAACza,eAAgB,cAC5BT,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAE2N,WAAY,EAAE1J,aAAcoS,IAClE+E,WAAW,qBACXG,OAAQ,WAA0B9E,GAAH,GAAoCtB,GAAOqG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,KACrHC,QAAS,WAAQ/F,GAAiBD,IAAgB,GAAOW,GAAmBD,GAAkB,IAC9FgF,aAAc,SAAAhU,GAAI,OAAIyK,GAAaD,GAAYxK,EAAKhF,UAG1D,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,oBAEA,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC,IAAD,CAAMR,MAAOG,GAAOwa,UAApB,UACA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAO2P,GACPsH,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS5F,GAAqBD,GAAoB6F,MAElE,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,UAEA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAO8P,GACPmH,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASzF,GAAqBD,GAAoB0F,MAGpE,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,UAEA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOgc,WAAW,CAACxa,MAAOrB,GAAOgZ,YAEzChX,MAAOiQ,GACPgH,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAStF,GAAqBD,GAAoBuF,OAIpE,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,kBAEE,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWtJ,GAAkBuJ,QAAW,kBAAKtJ,GAAoBD,IAAoBA,OACrF,kBAAC,IAAD,CAAM1S,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,4BAEF,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWnJ,GAAmBoJ,QAAW,kBAAKnJ,GAAqBD,IAAqBA,OACxF,kBAAC,IAAD,CAAM7S,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,oCAGJ,kBAAC,IAAD,CAAMhO,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,kBAEA,kBAACyY,GAAA,EAAD,CACIhV,KA/jBA,CACR,CACEW,GAAI,EACJqB,KAAM,0BACNzG,MAAO,2BAET,CACEoF,GAAI,EACJqB,KAAM,uBACNzG,MAAO,yBAujBD0Z,cAAe,EACfC,QAAStJ,GACTuJ,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GACrBO,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,KACvB0Z,KAAK,EACAC,YAAa,SAACC,GAAD,OAAO1J,GAAiBD,GAAgB2J,EAAE5U,KACvD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAIf,kBAAC,IAAD,CAAM/c,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,qCAEA,kBAACyY,GAAA,EAAD,CACIhV,KArkBA,CACR,CACEW,GAAI,EAEJpF,MAAO,OAET,CACEoF,GAAI,EAEJpF,MAAO,OA6jBD0Z,cAAe,EACfC,QAASnJ,GACToJ,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IACvB0Z,KAAK,EACAC,YAAa,SAACC,GAAD,OAAOvJ,GAAcD,GAAawJ,EAAE5U,KACjD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAcf,kBAAC,IAAD,CAAM/c,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,sCAEE,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAW1I,GAA0B2I,QAAW,kBAAK1I,GAA4BD,IAA4BA,OAC7G,kBAAC,IAAD,CAAMtT,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,IAAI1K,SAAU,OAAlE,iDAKJ,kBAAC,IAAD,CAAMtD,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,mBAEE,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWvI,GAAawI,QAAW,iBAAK,CAACvI,GAAeD,IAAeA,IAAa/T,EAAUsd,cAAgBvJ,OAC9G,kBAAC,IAAD,CAAMzT,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,4BAGJ,kBAAC,IAAD,CAAMhO,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,eAEE,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,IAAD,CAAMR,MAAOG,GAAOwa,UAApB,WACA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOsR,GACP2F,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASjE,GAAiBD,GAAgBkE,MAE1D,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,WAEA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAOyR,GACPwF,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS9D,GAAiBD,GAAgB+D,OAI9D,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,sBAEA,kBAACuV,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,WACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAO+R,GACPkF,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASxD,GAAcD,GAAayD,MAGpD,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,QAEA,kBAACuV,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOkS,GACP+E,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASrD,GAAeD,GAAcsD,MAGtD,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,+BAEE,kBAAC,KAAD,CACIkX,MAAOtL,EAAa0E,OACpB/I,UAAW4K,GACX+F,aAAc,EACdf,aAAc5G,GACdkF,YAAY,2BACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAEiE,aAAcsS,IACpD6E,WAAW,qBACXG,OAAQ,WAA0B9E,GAAH,GAC7BuG,YAAW,WACT7H,GAAOqG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,MACjD,IAELC,QAAS,WAAQ7F,GAAeD,IAAc,GAAOW,GAAaD,GAAY,IAC9E8E,aAAc,SAAAhU,GAAI,OAAI6M,GAAUD,GAAS5M,EAAKhF,UAElD,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,cACA,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWrH,GACXsH,QAAW,iBAAK,CAACrH,GAAYD,IAAYA,QACzC,kBAAC,IAAD,CAAM3U,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,2CAjbJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,GAAO4c,gBA8blD/c,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN6N,YAAa,EACbC,aAAc,EACdC,WAAY,IAEd+K,eAAgB,CACd9Y,KAAM,EACN0D,UAAW,GACXmF,gBAAiB,QACjBQ,oBAAqB,GACrBE,qBAAsB,IAExByP,gBAAiB,CACftV,UAAW,GACXW,kBAAmB,IAErBvC,MAAO,CACLuB,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZW,aAAc,GAEhByW,SAAU,CACR5M,aAAc,EACdpK,UAAW,EACXmK,YAAa,EACbxK,SAAUN,GAAS,IAAM,GAAK,IAEhC2W,SAAU,CACR1Z,KAAM,EACNkd,kBAAmB,MACnBra,QAAS,EACTG,aAAc,EACdC,YAAa,IACbC,YAAa,WAEfkW,UAAW,CACTpZ,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAErB+S,WAAY,CACVjc,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAErBgT,WAAY,CACVlc,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAErByR,aAAc,CACZ3a,KAAM,EACN2N,WAAY,EACZ1E,kBAAmB,EACnBC,kBAAmB,a,2BCzhCvB,GAAuBvE,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAIP8B,GAAUC,EAASC,OA0KVoY,GAzKO,SAAC,GAAyD,EAAvDlY,WAAwD,IAA7CmY,EAA4C,EAA5CA,KAAKC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,aAIhD,GAJ8E,EAAhBC,UAIpBve,IAAMkG,SAAS,IAAzD,WAAKsY,EAAL,KAAqBC,EAArB,KACQpd,EAAWhB,eAAXgB,OACR,EAAuBrB,IAAMM,WAAWP,GAAxC,yBAAUU,EAAV,KAME,EAAsCT,IAAMkG,SAJ9B,CACV,CAAC4C,GAAI,IAAI4V,cAAe,aAAaC,iBAAkB,KAAK1F,aAAc,OAAOC,aAAc,OAAOC,aAAc,UAGxH,WAAKyF,EAAL,KAAmBC,EAAnB,KA0BA7e,IAAMqG,WAAU,WACZ0S,MAED,IAGH,IAAMA,EAAkB,8BAAAxS,EAAAC,OAAA,uDAChBC,EAAMZ,GAAU,wDACP,OACTa,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAGtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OARS,MASTL,YAXgB,WAAAH,EAAA,MAcdS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,EAAamR,WAEf9X,EAAUya,kBAAoB9T,EAAaoR,IAC3CqG,EAAgBzX,EAAaoR,MAG7BjR,IAAMC,MAAM,aAAcJ,EAAaK,YAI5CJ,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAE/B,MA9BS,6DAkCxB,OAEI,kBAACqX,GAAA,EAAD,CACIpC,UAAU,EAEVqC,cAAc,OACdC,aAAa,EACbC,QAASb,EACTc,eAAgB,cAGpB,kBAACpe,EAAA,EAAD,CAAMC,MAAQG,GAAOie,iBACjB,kBAAC/d,EAAA,EAAD,CAAgBC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnDhH,MAAQG,GAAOke,gBAEf,kBAACte,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOme,eAAgB,CAACxV,gBAAiBxI,EAAOoC,QAC1D,kBAAC3C,EAAA,EAAD,CAAMC,MAAOG,GAAOoe,iBAChB,kBAAC,IAAD,CAAMve,MAAO,CAACG,GAAOwJ,OAAO,CAAC7G,QAAS,KAAtC,kBACA,kBAACpC,EAAA,EAAD,CAAkBV,MAAO,CAAE8C,QAAS,EAAGG,aAAc,IAAKhB,QAAS,kBAAMqb,EAAQD,GAAQA,KACzF,kBAAC,IAAD,CAAMrd,MAAOG,GAAOwJ,QAApB,QASR,kBAACxC,GAAA,EAAD,CAEIC,KAAMyW,EAENxW,WAAY,gBAtFPmX,EAsFUlX,EAAH,EAAGA,KAAH,EAAQmX,MAAR,OAAoB,kBAAClX,EAAD,CAAMoW,cAAerW,EAAKqW,cAAeC,kBAtFpEY,EAsF8FlX,EAAKsW,kBArFpG,IAATY,EAEQ,MAIA,MA+EwHtG,aAAc5Q,EAAK4Q,aAC9IC,aAAc7Q,EAAK6Q,aAAcC,aAAc9Q,EAAK8Q,aAAc9Q,KAAMA,KACxEQ,aAAc,SAAAR,GAAI,OAAIA,EAAKS,GAAGC,iBAW1C,SAAST,EAAT,GAA+F,IAA/EoW,EAA8E,EAA9EA,cAAcC,EAAgE,EAAhEA,iBAAiB1F,EAA+C,EAA/CA,aAAaC,EAAkC,EAAlCA,aAAaC,EAAqB,EAArBA,aAAa9Q,EAAQ,EAARA,KAClF,OACA,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOue,eAAgB,CAAC5V,gBAAiBxI,EAAO0I,WAC1D,kBAACtI,EAAA,EAAD,CAAkBV,MAAOG,GAAOmH,KAAMrF,QAAS,YAjHlC,SAACqF,GACfmW,IAAmBnW,EAAKS,GAEvB2V,EAAkBD,EAAiB,GAInCC,EAAkBD,EAAiBnW,EAAKS,IA0Gc4W,CAAarX,KAC/D,kBAACvH,EAAA,EAAD,CAAMC,MAAOG,GAAOye,QAChB,kBAAC,IAAD,CAAM5e,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ,cACpC,kBAACrJ,EAAA,EAAD,CAAMC,MAAOG,GAAO0e,OAChB,kBAAC,IAAD,CAAM7e,MAAO,CAAC0D,YAAa,EAAG/B,MAAOrB,EAAO8I,OAAQuU,EAApD,MACCF,IAAmBnW,EAAKS,IACzB,kBAAC+W,GAAA,EAAD,CACI7c,QAAS,WAAoCsb,EAAyBjW,GAAMgW,EAAQD,GAAQA,IAC5Ftb,MAAM,QACNJ,MAAM,cAIjB8b,IAAmBnW,EAAKS,IACzB,kBAAChI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMC,MAAOG,GAAOye,QAChB,kBAAC,IAAD,CAAM5e,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ,gBACpC,kBAAC,IAAD,CAAMpJ,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQwU,IAGxC,kBAAC7d,EAAA,EAAD,CAAMC,MAAOG,GAAOye,QAChB,kBAAC,IAAD,CAAM5e,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ,qBACpC,kBAAC,IAAD,CAAMpJ,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ8O,IAGxC,kBAACnY,EAAA,EAAD,CAAMC,MAAOG,GAAOye,QAChB,kBAAC,IAAD,CAAM5e,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ,sBACpC,kBAAC,IAAD,CAAMpJ,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ+O,IAGxC,kBAACpY,EAAA,EAAD,CAAMC,MAAOG,GAAOye,QAChB,kBAAC,IAAD,CAAM5e,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQ,sBACpC,kBAAC,IAAD,CAAMpJ,MAAO,CAAC2B,MAAOrB,EAAO8I,OAAQgP,SAatDjY,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAKRme,gBAAiB,CACbne,KAAM,EACN6I,gBAAiB,uBAGrBuV,eAAgB,CACZrb,OAAQA,GAAO,IAEfqG,OAAQ,GACR0V,IAAK,SAOTpV,OAAQ,CACJhI,MAAO,QACP2B,SAAU,GAEVC,WAAY,OACZF,aAAc,UAIlBib,eAAgB,CACZxb,QAAS,GAGTW,UAAW,UAGf8a,gBAAiB,CACb3Q,WAAY,EACZlK,YAAa,EAEblD,cAAe,MAEfC,eAAgB,iBAGpBie,eAAgB,CAEZzb,aAAc,EACdoG,OAAQ,EACRvG,QAAS,IAEb8b,OAAQ,CACJpe,cAAe,MACfC,eAAgB,gBAChBsD,WAAY,SACZjB,QAAS,GAEbkc,SAAU,CACNrd,MAAO,SAGXkd,MAAO,CACHre,cAAe,MACfuD,WAAY,SACZtD,eAAgB,YC9OxB,GAAuBmE,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAmcEic,GAjcK,SAAC,GAAc,EAAZhQ,MAAa,IAClC,EAAuBhQ,IAAMM,WAAWP,GAAxC,yBAAUU,EAAV,KAEA,EAAsBT,IAAMkG,UAAS,GAArC,WAAKkY,EAAL,KAAWC,EAAX,KAEA,EAAgCre,IAAMkG,SAAS,MAA/C,WAAKqY,EAAL,KAAgBD,EAAhB,KAIA,EAA8Bte,IAAMkG,SAAS,MAA7C,WASMmK,GATN,UASoB5P,EAAU4P,aACxBC,EAAe7P,EAAU8P,gBAC3B0P,EAAUxf,EAAUkQ,QACpBiH,EAAqBnX,EAAUmX,mBAKnC,EAAwC5X,IAAMkG,UAAuC,IAA9BmK,EAAY6P,cAAyB,EAAE,GAA9F,WAAKC,EAAL,KAAoBC,EAApB,KACA,EAA8CpgB,IAAMkG,SAASmK,EAAYgQ,iBAAmBhQ,EAAYgQ,iBAAiBtX,WAAa,MAAtI,WAAKuX,EAAL,KAAuBC,EAAvB,KACA,EAA8CvgB,IAAMkG,SAASmK,EAAYmQ,iBAAmBnQ,EAAYmQ,iBAAiBzX,WAAa,MAAtI,WAAK0X,EAAL,KAAuBC,EAAvB,KACA,EAA8C1gB,IAAMkG,SAASmK,EAAYsQ,iBAAmBtQ,EAAYsQ,iBAAiB5X,WAAa,MAAtI,WAAK6X,EAAL,KAAuBC,EAAvB,KACA,EAA8C7gB,IAAMkG,SAASmK,EAAYyQ,iBAAmBzQ,EAAYyQ,iBAAiB/X,WAAa,MAAtI,WAAKgY,EAAL,KAAuBC,EAAvB,KACA,EAA4ChhB,IAAMkG,UAAyC,IAAhCmK,EAAY4Q,gBAA2B,EAAE,GAApG,WAAKC,EAAL,KAAsBC,EAAtB,KACA,EAA0DnhB,IAAMkG,UAAgD,IAAvCmK,EAAY+Q,uBAAkC,EAAE,GAAzH,WAAKC,EAAL,KAA6BC,GAA7B,KACA,GAAgDthB,IAAMkG,UAA2C,IAAlCmK,EAAYkR,kBAA6B,EAAE,GAA1G,aAAKC,GAAL,MAAwBC,GAAxB,MACA,GAA4CzhB,IAAMkG,UAAyC,IAAhCmK,EAAYqR,gBAA2B,EAAE,GAApG,aAAKC,GAAL,MAAsBC,GAAtB,MACA,GAA4D5hB,IAAMkG,SAASmK,EAAYwR,yBAAvF,aAAKC,GAAL,MAA8BC,GAA9B,MACA,GAAoC/hB,IAAMkG,SAASmK,EAAY2R,YAAc3R,EAAY2R,YAAYjZ,WAAa,MAAlH,aAAKkZ,GAAL,MAAkBC,GAAlB,MACA,GAAsCliB,IAAMkG,SAASmK,EAAY8R,aAAe9R,EAAY8R,aAAapZ,WAAa,MAAtH,aAAKqZ,GAAL,MAAmBC,GAAnB,MACA,GAAwCriB,IAAMkG,SAASmK,EAAYiS,eAAnE,aAAKC,GAAL,MAAoBC,GAApB,MACA,GAAoCxiB,IAAMkG,SAASmK,EAAYoS,YAAcpS,EAAYoS,YAAY1Z,WAAa,MAAlH,aAAK2Z,GAAL,MAAkBC,GAAlB,MACA,GAAsC3iB,IAAMkG,SAASmK,EAAYuS,aAAevS,EAAYuS,aAAa7Z,WAAa,MAAtH,aAAK8Z,GAAL,MAAmBC,GAAnB,MAEA7C,EAAQC,cAAkC,IAAlBC,EACxBF,EAAQI,iBAAmBC,EAAmBA,EAAiBvX,WAAa,IAC5EkX,EAAQO,iBAAmBC,EAAmBA,EAAiB1X,WAAa,IAC5EkX,EAAQU,iBAAmBC,EAAmBA,EAAiB7X,WAAa,IAC5EkX,EAAQa,iBAAmBC,EAAmBA,EAAiBhY,WAAa,IAC5EkX,EAAQgB,gBAAsC,IAApBC,EAC1BjB,EAAQmB,uBAAoD,IAA3BC,EACjCpB,EAAQsB,kBAA0C,IAAtBC,GAC5BvB,EAAQyB,gBAAsC,IAApBC,GAC1B1B,EAAQ4B,6BAAsD9L,IAA5B+L,GAAwC,KAAOA,GACjF7B,EAAQ+B,YAAcC,GAAcA,GAAYlZ,WAAa,IAC7DkX,EAAQkC,aAAeC,GAAeH,GAAYlZ,WAAa,IAC/DkX,EAAQqC,mBAAkCvM,IAAlBwM,GAA8B,KAAOA,GAC7DtC,EAAQwC,YAAcC,GAAcA,GAAY3Z,WAAa,IAC7DkX,EAAQ2C,aAAeC,GAAeA,GAAa9Z,WAAa,IAG7DwV,IACDkC,EAAmBlC,EAAUtF,aAAalQ,WAC1C6X,EAAmBrC,EAAUrF,aAAanQ,WAC1CgY,EAAmBxC,EAAUpF,aAAapQ,YAG5C,IAAMga,GAAW/iB,IAAM0M,SACvB,GAA4C1M,IAAMkG,SAAS,GAA3D,aAAK8c,GAAL,MAAsBC,GAAtB,MACA,GAAwCjjB,IAAMkG,SAAS,GAAvD,aAAKgd,GAAL,MAAoBC,GAApB,MAEA,GAAgDnjB,IAAMkG,UAAS,GAA/D,aAAKkd,GAAL,MAAwBC,GAAxB,MACA,GAA4CrjB,IAAMkG,UAAS,GAA3D,aAAKod,GAAL,MAAsBC,GAAtB,MAEIC,GAAmB,KACjBC,GAAyB,SAACD,GACN,IAArBA,GAEDP,GAAmBD,GAAkB,KACrCK,GAAqBD,IAAoB,GAEzCD,GAAiBD,GAAgB,GACjCK,GAAmBD,IAAkB,IAEV,IAArBE,IAENP,GAAmBD,GAAkB,GACrCK,GAAqBD,IAAoB,GAEzCD,GAAiBD,GAAgB,KACjCK,GAAmBD,IAAkB,KAGzCtjB,IAAMqG,WAAU,YAIoB,OAA9B5F,EAAU,iBAA6BA,EAAU,iBAAsD,iBAAnCA,EAAU,gBAAgB0B,OAChG2V,KAIErX,EAAUijB,yBACZhD,EAAoBD,EAAmBhgB,EAAUijB,uBAAuBlD,kBACxEK,EAAoBD,EAAmBngB,EAAUijB,uBAAuB/C,kBACxEK,EAAoBD,EAAmBtgB,EAAUijB,uBAAuB5C,qBAEzE,CAACrgB,EAAUmX,mBAA0EnX,EAAUijB,yBAGlG,IAAM5L,GAAoB,WAGxB,GAAIF,GAAsBA,EAAmBhH,SAAS,CAEpD,IAAI+S,EAAS/L,EAGbwI,EAAiBD,GAAyC,IAAzBwD,EAAOzD,cAAyB,EAAI,GACrEK,EAAoBD,EAAmBqD,EAAOtD,iBAAiBtX,YAC/D2X,EAAoBD,EAAmBkD,EAAOnD,iBAAiBzX,YAC/D8X,EAAoBD,EAAmB+C,EAAOhD,iBAAiB5X,YAC/DiY,EAAoBD,EAAmB4C,EAAO7C,iBAAiB/X,YAC/DoY,EAAmBD,GAA6C,IAA3ByC,EAAO1C,gBAA2B,EAAI,GAC3EK,GAA0BD,GAA2D,IAAlCsC,EAAOvC,uBAAkC,EAAI,GAChGK,GAAqBD,IAAiD,IAA7BmC,EAAOpC,kBAA6B,EAAI,GACjFK,GAAmBD,IAA6C,IAA3BgC,EAAOjC,gBAA2B,EAAI,GAC3EK,GAA2BD,GAA0B6B,EAAO9B,yBAC5DK,GAAeD,GAAc0B,EAAO3B,YAAYjZ,YAChDsZ,GAAgBD,GAAeuB,EAAOxB,aAAapZ,YACnDyZ,GAAiBD,GAAgBoB,EAAOrB,eACxCK,GAAeD,GAAciB,EAAOlB,YAAY1Z,YAChD+Z,GAAgBD,GAAec,EAAOf,aAAa7Z,cAS/C1H,GAAWhB,eAAXgB,OAEFuiB,GAAW,CACf,CACE9a,GAAI,EACJpF,MAAO,OAET,CACEoF,GAAI,EACJpF,MAAO,OAyBT,OAEE,kBAAC5C,EAAA,EAAD,CAAMC,MAAQ,CAACG,GAAOyG,UAAU,CAACkC,gBAAiBxI,GAAO4H,WACzD,kBAACnI,EAAA,EAAD,CAAMC,MAAQG,GAAO4Y,gBACrB,kBAAC7Y,EAAA,EAAD,CAAY8Y,IAAKgJ,GAAUhiB,MAAQG,GAAO8Y,iBACxC,kBAAClZ,EAAA,EAAD,CAAMC,MAAO,CAACkE,aAAc,KAC1B,kBAAC,IAAD,CAAMlE,MAAOG,GAAO4B,OAApB,iCACA,kBAACqa,GAAA,EAAD,CACEhV,KA7BO,CACf,CACEW,GAAI,EACJpF,MAAO,OAER,CACCoF,GAAI,EACJpF,MAAO,OAuBD0Z,cAAe,EACfC,QAAS8C,EACT7C,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IACvB0Z,KAAK,EACAC,YAAa,SAACC,GAAD,OAAO0C,EAAiBD,EAAgBzC,EAAE5U,KACvD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAEb,kBAAC,IAAD,CAAM/c,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,gCAEE,kBAACuV,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOid,EACPhG,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS0H,EAAoBD,EAAmBzH,MAGlE,kBAAC/X,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,IAAD,CAAMR,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,yBACA,kBAACjD,EAAA,EAAD,CAAkBV,MAAOG,GAAOuC,KAAMT,QAAS,kBAAMqb,EAAQD,GAAQA,KACnE,kBAAC,UAAD,CAAU5b,KAAK,aAAaC,KAAM,GAAIoH,gBAAgB,cAWxD,kBAAC,GAAD,CAAUuU,KAAMA,EAAMC,QAASA,EAASC,aAAcA,EAAcC,UAAWA,IAGjF,kBAACzd,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAa,KAGzB,kBAAC,IAAD,CAAM9N,MAAOG,GAAOwa,UAApB,uBAEE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOod,EACPnG,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS6H,EAAoBD,EAAmB5H,MAGhE,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,wBAEE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOud,EACPtG,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASgI,EAAoBD,EAAmB/H,MAGhE,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,0BAEE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAS0d,EACTzG,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASmI,EAAoBD,EAAmBlI,MAGhE,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,6BAEA,kBAACyB,GAAA,EAAD,CACEhV,KAAMyb,GACNxG,cAAe,EACbC,QAAS6D,EACT5D,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,EAAEtN,cAAe,OACtC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOyD,EAAmBD,EAAkBxD,EAAE5U,KAC3D6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAEf,kBAAC,IAAD,CAAM/c,MAAOG,GAAOwa,UAApB,4BAEE,kBAACyB,GAAA,EAAD,CACEhV,KAAMyb,GACNxG,cAAe,EACfC,QAASgE,EACT/D,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,EAAEtN,cAAe,OACtC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO4D,GAA0BD,EAAyB3D,EAAE5U,KACzE6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAEf,kBAAC,IAAD,CAAM/c,MAAOG,GAAOwa,UAApB,wBAEE,kBAACyB,GAAA,EAAD,CACEhV,KAAMyb,GACNxG,cAAe,EACfC,QAASmE,GACTlE,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,EAAEtN,cAAe,OACtC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO+D,GAAqBD,GAAoB9D,EAAE5U,KAC/D6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAGf,kBAAC,IAAD,CAAM/c,MAAOG,GAAOwa,UAApB,oBAEE,kBAACyB,GAAA,EAAD,CAEEhV,KAAMyb,GACNxG,cAAe,EACfC,QAASsE,GACTrE,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,EAAEtN,cAAe,OACtC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOkE,GAAmBD,GAAkBjE,EAAE5U,KAC3D6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAIjB,kBAAC,IAAD,CAAM/c,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,yBAII,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAa,KAC3B,kBAAC,IAAD,CAAM9N,MAAOG,GAAOwa,UAApB,2BAEE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAO4e,GACP3H,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASqJ,GAAeD,GAAcpJ,MAKtD,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAOwa,SAAS,KAA9B,4BAEE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAO+e,GACP9H,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASwJ,GAAgBD,GAAevJ,MAGxD,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAOwa,SAAS,CAAC7M,YAAa,KAA5C,6BAEA,kBAAC,KAAD,CACE+M,MAAOtL,EAAauR,wBAClB5V,UAAWmX,GACXxG,aAAc,EACdf,aAAciG,GAAwB/Y,WACtCoR,YAAY,iCACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAE0D,UAAW,GAAIO,aAAc+d,IACnEa,YAAY,EACZC,sBAAsB,YACtBC,gBAAiB,kBAAMvc,MAAM,4BAC7Bwc,gBAAiB,CAACthB,MAAO,sBACzB0Z,WAAW,qBACXG,OAAQ,iBAAM,CAACiH,GAAmB,EAAEC,GAAuBD,IAAkBT,GAASvG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,MACnIC,QAAS,WAAQ0G,GAAqBD,IAAoB,GAAOH,GAAmBD,GAAkB,IACpG3G,aAAc,SAAAhU,GAAI,OAAI0Z,GAA2BD,GAA0BzZ,EAAKhF,WAGxF,kBAAC,IAAD,CAAMtC,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,uBACE,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAAC8N,YAAa,KAEvB,kBAAC,IAAD,CAAM9N,MAAOG,GAAOwa,UAApB,2BACE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOqf,GACPpI,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS8J,GAAeD,GAAc7J,MAGtD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,4BACE,kBAACzB,GAAA,EAAD,CACAC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,GAAOgZ,YAE3ChX,MAAOwf,GACPvI,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASiK,GAAgBD,GAAehK,MAEtD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,6BACA,kBAAC,KAAD,CACEE,MAAOtL,EAAagS,cACpBrW,UAAWqX,GACX1G,aAAc,EACdf,aAAc0G,GACdpI,YAAY,iCACZ2B,iBAAkB,CAACpZ,MAAOrB,GAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,GAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAE0D,UAAW,GAAIO,aAAcie,IACnEW,YAAY,EACZC,sBAAsB,YACtBC,gBAAiB,kBAAMvc,MAAM,4BAC7Bwc,gBAAiB,CAACthB,MAAO,sBACzB0Z,WAAW,qBACXG,OAAQ,iBAAM,CAACiH,GAAmB,EAAEC,GAAuBD,IACvDxF,YAAW,WACT+E,GAASvG,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,MACnD,KAEPC,QAAS,WAAQ4G,GAAmBD,IAAkB,GAAOH,GAAiBD,GAAgB,IAC9F7G,aAAc,SAAAhU,GAAI,OAAIma,GAAiBD,GAAgBla,EAAKhF,gBAW1EnC,GAASyC,IAAWC,OAAO,CAC9B+D,UAAW,CACR3G,KAAM,EACN6N,YAAa,EACbC,aAAc,EACdC,WAAY,IAGd+K,eAAgB,CACd9Y,KAAM,EACN0D,UAAW,GACXmF,gBAAiB,QACjBQ,oBAAqB,GACrBE,qBAAsB,IAExByP,gBAAiB,CACftV,UAAW,GACXW,kBAAmB,IAErBvC,MAAO,CACLuB,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZW,aAAc,GAEhByW,SAAU,CACR5M,aAAc,GACdpK,UAAW,EACXL,SAAUN,GAAS,IAAM,GAAK,IAEhCN,KAAM,CACJI,QAAS,EACTa,UAAW,EACXiK,WAAY,EACZ1J,aAAc,GAEhBmV,UAAW,CACTpZ,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAErByR,aAAc,CACZ3a,KAAM,EACN2N,WAAY,EACZ1J,aAAc,EACdP,UAAW,EACXuF,kBAAmB,EACnBC,kBAAmB,aCvfzB,GAAuBvE,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAkpBEkgB,GAhpBH,SAAC,GAAmB,EAAjBhe,WAAkB,IAC7B,EAAuBjG,IAAMM,WAAWP,GAAxC,yBAAUU,EAAV,KACM4P,EAAc5P,EAAU4P,YAC1BM,EAAUlQ,EAAUkQ,QACpBiH,EAAqBnX,EAAUmX,mBAKnC,EAAsC5X,IAAMkG,SAASmK,EAAY6T,aAAe7T,EAAY6T,aAAanb,WAAa,MAAtH,WAAKob,EAAL,KAAmBC,EAAnB,KACA,EAA4CpkB,IAAMkG,SAASmK,EAAYgU,gBAAkBhU,EAAYgU,gBAAgBtb,WAAa,MAAlI,WAAKub,EAAL,KAAsBC,EAAtB,KACA,EAA4BvkB,IAAMkG,SAAgC,KAAvBmK,EAAYmU,QAAiB,EAAE,GAA1E,WAAKC,EAAL,KAAcC,EAAd,KACA,EAAsC1kB,IAAMkG,SAAqC,GAA5BmK,EAAYsU,aAAoB,EAAE,GAAvF,WAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAwC7kB,IAAMkG,SAASmK,EAAYyU,cAAgBzU,EAAYyU,cAAc/b,WAAa,OAA1H,WAAKgc,EAAL,KAAoBC,EAApB,KACA,EAAoChlB,IAAMkG,SAASmK,EAAY4U,YAAc5U,EAAY4U,YAAYlc,WAAa,OAAlH,WAAKmc,EAAL,KAAkBC,EAAlB,KACA,EAAwCnlB,IAAMkG,SAASmK,EAAY+U,cAAgB/U,EAAY+U,cAAcrc,WAAa,OAA1H,WAAKsc,EAAL,KAAoBC,EAApB,KACA,EAAoCtlB,IAAMkG,SAASmK,EAAYkV,YAAclV,EAAYkV,YAAYxc,WAAa,OAAlH,WAAKyc,EAAL,KAAkBC,EAAlB,KACA,EAAwCzlB,IAAMkG,SAASmK,EAAYqV,cAAgBrV,EAAYqV,cAAc3c,WAAa,OAA1H,WAAK4c,EAAL,KAAoBC,EAApB,KACA,EAAoC5lB,IAAMkG,SAASmK,EAAYwV,YAAcxV,EAAYwV,YAAY9c,WAAa,OAAlH,WAAK+c,EAAL,KAAkBC,EAAlB,KACA,GAAoD/lB,IAAMkG,SAASmK,EAAY2V,qBAA/E,aAAKC,GAAL,MAA0BC,GAA1B,MACA,GAAkClmB,IAAMkG,SAAmC,GAA1BmK,EAAY8V,WAAkB,EAAE,GAAjF,aAAKC,GAAL,MAAiBC,GAAjB,MAOA,GAJA1V,EAAQuT,aAAeC,EAAeA,EAAapb,WAAa,IAChE4H,EAAQ0T,gBAAkBC,EAAkBA,EAAgBvb,WAAa,IACzE4H,EAAQ6T,aAAsBzO,IAAZ0O,GAAyC,IAAZA,EAAL,IAAyB,KAExC,IAAxBwB,IAAiD,IAAjBrB,EAEjCjU,EAAQgU,aAAe,OAEpB,IAA2B,IAAxBsB,IAAiD,IAAjBrB,EAEtCjU,EAAQgU,aAAe,OAEpB,IAA2B,IAAxBsB,IAAiD,IAAjBrB,EAEtCjU,EAAQgU,aAAe,OAEpB,IAA2B,IAAxBsB,GAEN,OAAOrB,GACL,KAAK,EACHjU,EAAQgU,aAAe,EACvB,MAEF,KAAK,EACHhU,EAAQgU,aAAe,EACvB,MAEF,KAAK,EACHhU,EAAQgU,aAAe,EACvB,MAEF,KAAK,EACHhU,EAAQgU,aAAe,EACvB,MAEF,QACEhU,EAAQgU,aAAe,KAY7B,OARAhU,EAAQmU,cAAgBC,EAAgBA,EAAchc,WAAa,IACnE4H,EAAQsU,YAAcC,EAAcA,EAAYnc,WAAa,IAC7D4H,EAAQyU,cAAgBC,EAAgBA,EAActc,WAAa,IACnE4H,EAAQ4U,YAAcC,EAAcA,EAAYzc,WAAa,IAC7D4H,EAAQ+U,cAAgBC,EAAgBA,EAAc5c,WAAa,IACnE4H,EAAQkV,YAAcC,EAAcA,EAAY/c,WAAa,IAC7D4H,EAAQqV,oBAAsBC,GAEvBG,IACL,KAAK,EACLzV,EAAQwV,WAAa,EACnB,MAEF,KAAK,EACLxV,EAAQwV,WAAa,EACnB,MAEF,KAAK,EACLxV,EAAQwV,WAAa,EACnB,MAEF,KAAK,EACLxV,EAAQwV,WAAa,EACnB,MAEF,QACExV,EAAQgU,aAAe,KAM5B,IAoEStjB,GAAWhB,eAAXgB,OAER,GAAoCrB,IAAMkG,SAzD3B,CACf,CACE4C,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,qBAET,CACEoF,GAAI,EACJpF,MAAO,yBA0CT,aAAK4iB,GAAL,MAAkBC,GAAlB,MAEAvmB,IAAMqG,WAAU,YAIoB,OAA9B5F,EAAU,iBAA6BA,EAAU,iBAAsD,iBAAnCA,EAAU,gBAAgB0B,OAChG2V,OAED,CAACrX,EAAUmX,qBAGd,IAAME,GAAoB,WAGxB,GAAIF,GAAsBA,EAAmBhH,SAAS,CAGpD,IAAI4V,EAAW5O,EAaf,GAZAwM,EAAgBD,EAAeqC,EAAStC,aAAanb,YACrDwb,EAAmBD,EAAkBkC,EAASnC,gBAAgBtb,YAC9D2b,EAAWD,EAA+B,MAArB+B,EAAShC,QAAkB,EAAI,IAUhB,IAAjCgC,EAASR,qBAA0D,IAA1BQ,EAAS7B,aAEnDE,EAAgBD,EAAe,QAE5B,IAAoC,IAAjC4B,EAASR,qBAA0D,IAA1BQ,EAAS7B,aAExDE,EAAgBD,EAAe,QAE5B,IAAoC,IAAjC4B,EAASR,qBAA0D,IAA1BQ,EAAS7B,aAExDE,EAAgBD,EAAe,QAE5B,IAA2B,IAAxBqB,GAEN,OAAOO,EAAS7B,cACd,KAAK,EACLE,EAAgBD,EAAe,GAC7B,MAEF,KAAK,EACLC,EAAgBD,EAAe,GAC7B,MAEF,KAAK,EACLC,EAAgBD,EAAe,GAC7B,MAEF,KAAK,EACLC,EAAgBD,EAAe,GAC7B,MAEF,QACEjU,EAAQgU,aAAe,KAa7B,OARAK,EAAiBD,EAAgByB,EAAS1B,cAAc/b,YACxDoc,EAAeD,EAAcsB,EAASvB,YAAYlc,YAClDuc,EAAiBD,EAAgBmB,EAASpB,cAAcrc,YACxD0c,EAAeD,EAAcgB,EAASjB,YAAYxc,YAClD6c,EAAiBD,EAAgBa,EAASd,cAAc3c,YACxDgd,EAAeD,EAAcU,EAASX,YAAY9c,YAClDmd,GAAuBD,GAAsBO,EAASR,qBAE/CQ,EAASL,YACd,KAAK,EACHE,GAAcD,GAAa,GAC3B,MAEF,KAAK,EACHC,GAAcD,GAAa,GAC3B,MAEF,KAAK,EACHC,GAAcD,GAAa,GAC3B,MAEF,KAAK,EACHC,GAAcD,GAAa,GAS/BK,OAIEA,GAAuB,YACA,IAAxBR,IAECM,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,yBAGXshB,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,MAK7BS,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,qBAET,CACEoF,GAAI,EACJpF,MAAO,0BAwKjB,OAEA,kBAAC5C,EAAA,EAAD,CAAMC,MAAQ,CAACG,GAAOyG,UAAU,CAACkC,gBAAiBxI,GAAO4H,WACzD,kBAACnI,EAAA,EAAD,CAAMC,MAAQG,GAAO4Y,gBACnB,kBAAC7Y,EAAA,EAAD,CAAYF,MAAQG,GAAO8Y,iBAEzB,kBAAClZ,EAAA,EAAD,CAAMC,MAAO,CAACkE,aAAc,GAAIP,UAAWX,GAAS,IAAM,GAAK,IAC7D,kBAAC,IAAD,CAAMhD,MAAOG,GAAO4B,OAApB,cAEE,kBAAChC,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,IAAD,CAAMR,MAAOG,GAAOwa,UAApB,SACA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YACxChX,MAAO8gB,EAEP7J,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASuL,EAAgBD,EAAetL,MAExD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwa,UAApB,aAEA,kBAACzB,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAOihB,EACPhK,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS0L,EAAmBD,EAAkBzL,OAIlE,kBAAC,IAAD,CAAM9X,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,YAEA,kBAACyY,GAAA,EAAD,CACIhV,KAnaM,CAChB,CACEW,GAAI,EAEJpF,MAAO,OAET,CACEoF,GAAI,EAEJpF,MAAO,OA2ZC0Z,cAAe,EACfC,QAASoH,EACTnH,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOgH,EAAWD,EAAU/G,EAAE5U,KAC3C6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAIf,kBAAC,IAAD,CAAM/c,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,WAEA,kBAACyY,GAAA,EAAD,CACIhV,KAAMme,GACNlJ,cAAe,EACfC,QAASuH,EACTtH,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GACrBO,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,KAClB0Z,KAAK,EACLC,YAAa,SAACC,GAjOH,IAAC5U,KAiOqB4U,EAAE5U,MAhOjC8b,IAEE,IAAP9b,IAAoC,IAAxBmd,IAGbpB,EAAgBD,EAAe9b,GAC/Bkc,EAAiBD,EAAgB,OACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,MACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,OAM7BjB,EAAgBD,EAAe9b,GAC/Bkc,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,QA0MzBnI,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAGb,kBAAChd,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOmD,UAAW,IAE7C,kBAACuV,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YACxChX,MAAO0hB,EAEPzK,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASmM,EAAiBD,EAAgBlM,MAE1D,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,cAEA,kBAACzM,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAO6hB,EACP5K,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASsM,EAAeD,EAAcrM,MAEtD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,MAIF,kBAAC5lB,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC0Y,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOgiB,EACP/K,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASyM,EAAiBD,EAAgBxM,MAE1D,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,cAEA,kBAACzM,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAOmiB,EACPlL,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS4M,EAAeD,EAAc3M,MAEtD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,MAGF,kBAAC5lB,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC0Y,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,GAAOgZ,YAExChX,MAAOsiB,EACPrL,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAAS+M,EAAiBD,EAAgB9M,MAE1D,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,cAEA,kBAACzM,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,IACZpZ,MAAO,CAACG,GAAO+b,WAAW,CAACva,MAAOrB,GAAOgZ,YAEzChX,MAAOyiB,EACPxL,aAAa,UACbC,aAAc,SAAC1B,GAAD,OAASkN,EAAeD,EAAcjN,MAEtD,kBAAC,IAAD,CAAM9X,MAAOG,GAAOwlB,UAApB,MAGJ,kBAAC,IAAD,CAAM3lB,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,gCAEA,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC,KAAD,CACAR,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,GAAOgZ,UACjC0C,UAAWkJ,GAAqBjJ,QAAW,kBA3RnDkJ,GAAuBD,IAAuBA,UACnB,IAAxBA,IAAiD,IAAjBrB,GAEjC2B,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,yBAGXmhB,EAAgBD,EAAe,GAC/BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,OAGC,IAAxBG,IAAiD,IAAjBrB,GAEtC2B,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,yBAGXmhB,EAAgBD,EAAe,GAC/BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,OAGC,IAAxBG,IAAkD,IAAjBrB,GAEvC2B,GAAeD,GAAgB,CAC7B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,qBAET,CACEoF,GAAI,EACJpF,MAAO,yBAGXmhB,EAAgBD,EAAe,GAC/BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,OAGC,IAAxBG,IAENM,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,yBAIXshB,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,KAC7BI,EAAiBD,EAAgB,KACjCI,EAAeD,EAAc,OAK7BS,GAAeD,GAAe,CAC5B,CACExd,GAAI,EACJpF,MAAO,YAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,qBAET,CACEoF,GAAI,EACJpF,MAAO,yBAGS,IAAjBkhB,GAEDC,EAAgBD,EAAe,QA6J3B,kBAAC,IAAD,CAAM7jB,MAAS,CAAC2B,MAAOrB,GAAOgZ,UAAUtL,WAAY,MAApD,QAEJ,kBAAC,IAAD,CAAMhO,MAAO,CAACG,GAAO4B,MAAM,CAAC4B,UAAW,MAAvC,cAEA,kBAACyY,GAAA,EAAD,CACIhV,KA3eS,CACnB,CACEW,GAAI,EACJpF,MAAO,SAET,CACEoF,GAAI,EACJpF,MAAO,OAET,CACEoF,GAAI,EACJpF,MAAO,iBAET,CACEoF,GAAI,EACJpF,MAAO,SA6dC0Z,cAAe,EACfC,QAAS+I,GACT9I,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GACrBO,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,KAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO2I,GAAcD,GAAa1I,EAAE5U,KACjD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,iBAWnB5c,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EACN6N,YAAa,EACbC,aAAc,EACdC,WAAY,IAEd+K,eAAgB,CACd9Y,KAAM,EACN0D,UAAW,GACXmF,gBAAiB,QACjBQ,oBAAqB,GACrBE,qBAAsB,IAExByP,gBAAiB,CACftV,UAAW,GACXW,kBAAmBtB,GAAS,IAAM,GAAK,IAEzCjB,MAAO,CACLuB,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZW,aAAc,GAEhByW,SAAU,CACR5M,aAAc,GACdpK,UAAW,EACXmK,YAAa,EACbxK,SAAUN,GAAS,IAAM,GAAK,IAEhCqW,UAAW,CACTpZ,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAGrB+S,WAAY,CACVjc,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAErBwc,SAAU,CACR5X,aAAc,GACdpK,UAAW,EACXmK,YAAa,GACbxK,SAAUN,GAAS,IAAM,GAAK,M,UC7rB9B4iB,GAASC,eAsEEC,GApED,SAAC,GAAwC,EAAvC5gB,WAAuC,EAA3B+J,MAA4B,IAAtB1I,EAAqB,EAArBA,MAAMwf,EAAe,EAAfA,UAGtC,EAAuB9mB,IAAMM,WAAWP,GAAxC,yBAAUU,EAAV,KAGQY,EAAWhB,eAAXgB,OACR,OAEE,kBAACslB,GAAOI,UAAR,CAAkBC,cAAc,EAC9BC,cAAe,CACbC,gBAAiB,OACjBC,eAAgB,CAAEtd,gBAAiB,WAEnC9I,MAAO,CAAE8I,gBAAiBxI,EAAO4c,YAEnCmJ,cAAe,CACbtjB,MAAO6B,KAAWC,IAAI,UAAU9B,QAIlC,kBAAC6iB,GAAO/d,OAAR,CAAepG,KAAK,UAClB6kB,UAAW,cAAGphB,WAAH,MAAqB,CAChCqhB,SAAU,SAAAC,SAQJ,SAAApnB,GAAK,OAAI,kBAAC,GAAD,OAAqBA,EAArB,CAA4B8P,MAAO3I,EAAO4I,SAAU4W,QAErE,kBAACH,GAAO/d,OAAR,CAAepG,KAAK,eAAeglB,UAAWC,GAC3CJ,UAAW,0BAAU,CACpBC,SAAU,SAAAC,QAE0BxR,IAA/BtV,EAAUkQ,QAAQC,UAAyD,KAA/BnQ,EAAUkQ,QAAQC,WAE/D2W,EAAMG,iBACNngB,IAAMC,MAAM,QAAQ,gCAM5B,kBAACmf,GAAO/d,OAAR,CAAepG,KAAK,SAASglB,UAAWG,GACrCN,UAAW,0BAAU,CACpBC,SAAU,SAAAC,QAE0BxR,IAA/BtV,EAAUkQ,QAAQC,UAAyD,KAA/BnQ,EAAUkQ,QAAQC,UAE/D2W,EAAMG,iBACNngB,IAAMC,MAAM,QAAQ,4BAEc,IAA5B/G,EAAUsd,eAEhBwJ,EAAMG,wB,gFCzChB7hB,GAAUC,EAASC,OACzB,GAAuBJ,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAggBE6jB,GA9fM,SAAC,GAA8D,IAA5D3hB,EAA2D,EAA3DA,WAAY4hB,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,cAAcC,EAAmB,EAAnBA,aAE1DC,EAAc,SAAC,GAClB,IADmB3f,EACpB,EADoBA,KAElB,OACE,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAACE,EAAA,EAAD,CAAmBV,MAAOG,GAAO+mB,aAAcjlB,QAAS,kBAAMklB,EAA+B7f,KACzF,kBAAC,UAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,SAASC,KAAM,GAAIC,MAAM,WAElE,kBAACjB,EAAA,EAAD,CAAkBV,MAAOG,GAAOknB,WAAYplB,QAAS,kBAAMqlB,EAA6BhgB,KACpF,kBAAC,UAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,eAAeC,KAAM,GAAIC,MAAM,aAMtErB,EAAWhB,eAAXgB,OACR,EAAiDrB,IAAMM,WAAWP,GAAlE,kBAAQuoB,EAAR,EAAQA,UAAUC,EAAlB,EAAkBA,gBAAkB9nB,EAApC,KAGA,EAAkDT,IAAMkG,SAAS,GAAjE,WAAKsiB,EAAL,KAAyBC,EAAzB,KACA,EAA4CzoB,IAAMkG,SAAS,MAA3D,WAAKwiB,EAAL,KAAsBC,EAAtB,KAKA,EAAkC3oB,IAAMkG,SAF3B,MAEb,WAAiB0iB,GAAjB,WAEA,EAA0C5oB,IAAMkG,SAJnC,MAIb,WAAK2iB,EAAL,KAYA,GAZA,KAYoC7oB,IAAMkG,SAAS,OAAnD,WAAO4iB,EAAP,KAAmBC,EAAnB,KACA,EAA0C/oB,IAAMkG,SAAS,MAAzD,WAAO8iB,EAAP,KAAsBC,EAAtB,KAEMC,EAAa,SAAMrc,EAAMqL,GAAZ,mBAAA3R,EAAAC,OAAA,uDACbC,EAAMZ,GAAU,kCACP,QACTa,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAE1CH,EAAOC,KAAKC,UAAUF,GAElBhG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OATS,OAUTL,UACAmG,SAba,WAAAtG,EAAA,MAgBXS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAECA,EAAamR,UACf+P,EAAU,CAACnmB,KAAM,SAAUgnB,OAAQ,UAEnC5hB,IAAMC,MAAM,aAAcJ,EAAaK,SACvC2hB,EAAU3oB,EAAUwX,KAAKC,YAG9B7Q,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,SACtC2hB,EAAU3oB,EAAUwX,KAAKC,SAClB,MA9BM,6DAiGnBlY,IAAMqG,WAAU,YAEW,OAArB5F,EAAU4oB,QAAoB5oB,EAAU4oB,QAAoC,WAA1B5oB,EAAU4oB,OAAOlnB,QACvE4mB,GAAc,SAAAD,GAAU,OAAI,QAEtBroB,EAAU4oB,QAAsC,kBAA5B5oB,EAAU4oB,OAAOF,OAnEvB,SAAOjR,GAAP,QAAA3R,EAAAC,OAAA,kEAAAD,EAAA,MAGD+iB,KAAgC,CAACC,KAAMxB,EAAayB,sBAAsB,KAHzE,eAMHzT,IAHbrG,EAHgB,QAMV9N,IANU,mCAAA2E,EAAA,MAQEkjB,KAAwB/Z,EAAO9N,MARjC,gCAAA2E,EAAA,MAWZkjB,KAA6B/Z,EAAO9N,IAAK,CAAC8nB,SAAUD,KAAwBE,SAAS1iB,MAAK,SAAA2iB,GAAG,OAAIC,KAAKC,KAAKF,EAAK,CAACL,KAAM,SAASQ,UAAS,EAAKC,QAAQ,EAAMC,WAAW,OAAQhjB,MAAK,SAAAijB,GAExL,IAAMC,EAASD,EAAGE,WAAW,GACvBC,EAAKH,EAAGI,OAAOH,GAEfhiB,EAAO0hB,KAAKU,MAAMC,cAAcH,EAAI,CAAEI,KAAK,EAAKC,OAAO,KAAMC,OAAO,eACtEC,EAAU,GACV9B,EAAa,GAEb3gB,GAAQA,EAAKwF,SACfid,EAAQ1S,OAASA,EACjB/P,EAAK0iB,SAAQ,SAASxiB,EAAMyiB,GAC1B,IAAIC,EAAU,GACdA,EAAQ/K,YAAsC,MAAxB3X,EAAK,gBAA0B,GAAKA,EAAK,gBAAgBU,WAC/EgiB,EAAQC,UAAY3iB,EAAK,cACzB0iB,EAAQE,YAAc9Z,IAAO9I,EAAK,kBAAkB6iB,IAAI,EAAG,QAC3DH,EAAQI,WAAaha,IAAO9I,EAAK,iBAAiB6iB,IAAI,EAAG,QACzDH,EAAQK,SAA4B,MAAjB/iB,EAAK+iB,SAAmB,KAAO/iB,EAAK+iB,SAASriB,WAChEgiB,EAAQM,WAAahjB,EAAKijB,SAC1BP,EAAQQ,QAAUljB,EAAK,eACvB0iB,EAAQS,UAAYnjB,EAAK,cACzB0iB,EAAQU,IAAMpjB,EAAKqjB,OACnBX,EAAQY,UAAYtjB,EAAKujB,MACzBb,EAAQc,SAAWxjB,EAAK,aACxB0iB,EAAQe,aAA6C,MAA9BzjB,EAAK,sBAAgC,EAAIA,EAAK,sBACrE0iB,EAAQgB,iBAAmB1jB,EAAK,wBAChC0iB,EAAQiB,UAAY3jB,EAAK2jB,UACzBjB,EAAQkB,cAA0C,MAA1B5jB,EAAK,kBAA4B,GAAKA,EAAK,kBAAkBU,WACrF+f,EAAWoD,KAAKnB,MAElBH,EAAQuB,OAASrD,GAIf8B,EAAQuB,QAAUvB,EAAQuB,OAAOxe,OACjCub,EAAW0B,IAEXpjB,MAAM,gBACNuhB,GAAc,SAAAD,GAAU,OAAIE,UAjDhB,+BAyDdD,GAAc,SAAAD,GAAU,OAAIE,KAzDd,6DAoEhBoD,CAAc3rB,EAAUwX,KAAKC,SAG7BkR,EAAU3oB,EAAUwX,KAAKC,QACzBmU,EAAS5rB,EAAUwX,KAAKC,YAG1B,CAACzX,EAAU4oB,SAGf,IAAMD,EAAY,SAAOlR,GAAP,mBAAA3R,EAAAC,OAAA,uDACZC,EAAMZ,GAAU,wCAA2CqS,EAAS,mBAC3D,OACTxR,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAVY,WAAAH,EAAA,MAaVS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEDA,EAAamR,WAAanR,EAAaoR,IAEvC8T,EAAoBllB,EAAaoR,KAEjCjR,IAAMC,MAAM,aAAcJ,EAAaK,YAI5CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MA3BK,6DA+BZ4kB,EAAW,SAAOnU,GAAP,mBAAA3R,EAAAC,OAAA,uDACXC,EAAMZ,GAAU,6BAAgCqS,EACvC,OACTxR,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAVW,WAAAH,EAAA,MAaTS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,GAAIA,EAAamR,WAAanR,EAAaoR,IAAI,CAG7C,IACI+T,EADgBnlB,EAAaoR,IACJgU,KAAI,SAASC,GACtC,IAAK,IAAIC,KAAOD,EACd,MAAO,CAAE/oB,MAAO+oB,EAAOE,UAAY,MAAQF,EAAOG,YAAavpB,MAAOopB,EAAOE,cAInFpE,EAAgBgE,QAGhBhlB,IAAMC,MAAM,aAAcJ,EAAaK,YAI5CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAnCI,6DAuCX6kB,EAAsB,SAACnkB,GAE3B,IAAI0kB,EAAsB,GACtB1kB,GAAQA,EAAKwF,QAEfxF,EAAK0iB,SAAQ,SAASxiB,EAAMyiB,GAC1B,IAAIgC,EAAO,GACP/B,EAAU,GACdA,EAAQgC,cAAgB1kB,EAAK0kB,cAC7BhC,EAAQjiB,GAAKT,EAAKS,GAClBiiB,EAAQiC,YAAc7b,IAAO9I,EAAI,aAAiB0F,OAAO,cACzDgd,EAAQkC,WAAa9b,IAAO9I,EAAI,YAAgB0F,OAAO,cACvDgd,EAAQmC,UAAY7kB,EAAK6kB,UACzBnC,EAAQoC,IAAM9kB,EAAK8kB,IACnBpC,EAAQqC,IAAM/kB,EAAK+kB,IACnBrC,EAAQvoB,KAAO6F,EAAKglB,SACpBtC,EAAQS,UAAYnjB,EAAKjG,UACzB2oB,EAAQuC,SAAWjlB,EAAKhG,SACxB0oB,EAAQU,IAAMpjB,EAAK+kB,IACnBrC,EAAQiB,UAAY3jB,EAAKklB,UACzBxC,EAAQyC,QAAUnlB,EAAKolB,QACvB1C,EAAQ2C,WAAarlB,EAAKslB,WAC1B5C,EAAQM,WAAahjB,EAAKulB,WAC1B7C,EAAQ8C,YAAcxlB,EAAKylB,YAC3B/C,EAAQgD,YAAc1lB,EAAK2lB,YAC3BjD,EAAQkD,UAAY5lB,EAAK6lB,UACzBnD,EAAQoD,WAAa9lB,EAAK+lB,WAC1BrD,EAAQsD,UAAYhmB,EAAKimB,UACzBvD,EAAQwD,OAASlmB,EAAKmmB,OACtBzD,EAAQ0D,OAASpmB,EAAKqmB,OACtB3D,EAAQ4D,UAAYtmB,EAAKumB,UACzB7D,EAAQ8D,gBAAkBxmB,EAAKymB,gBAC/B/D,EAAQgE,0BAA4B1mB,EAAK2mB,0BACzCjE,EAAQkE,aAAe5mB,EAAK4mB,aAC5BlE,EAAQmE,iBAAmB7mB,EAAK6mB,iBAChCnE,EAAQoC,IAAM9kB,EAAK8kB,IACnBpC,EAAQoE,WAAa9mB,EAAK8mB,WAC1BpE,EAAQqE,QAAU/mB,EAAK+mB,QACvBrE,EAAQzZ,OAASjJ,EAAKiJ,OACtByZ,EAAQ4B,UAAYtkB,EAAKskB,UACzB5B,EAAQsE,gBAAkBhnB,EAAKgnB,gBAC/BtE,EAAQuE,UAAYjnB,EAAKinB,UACzBvE,EAAQwE,aAAelnB,EAAKknB,aAC5BxE,EAAQyE,OAASnnB,EAAKmnB,OACtBzE,EAAQ0E,UAAYpnB,EAAKonB,UAEzB1E,EAAQ2E,kBAAoBrnB,EAAKqnB,kBAC7BrnB,EAAI,mBAAsB0iB,EAAQ4E,IAAMtW,SAAShR,EAAI,oBAErDA,EAAKklB,WAA+B,KAAlBllB,EAAKklB,WAAsC,OAAlBllB,EAAKklB,YAAoBT,EAAKZ,KAAK,cAC9E7jB,EAAI,kBAAsBykB,EAAKZ,KAAK7jB,EAAI,iBAAqBU,WAAa,SAC1EV,EAAI,aAAiBykB,EAAKZ,KAAK,gBAAkB7jB,EAAI,YAAgBU,YACrEV,EAAKulB,YAAYd,EAAKZ,KAAK,iBAAmB7jB,EAAKulB,WAAW7kB,YAC9DV,EAAI,cAAkBykB,EAAKZ,KAAK7jB,EAAI,aAAiBU,YACrDV,EAAKskB,WAAWG,EAAKZ,KAAK,eAAiB7jB,EAAKskB,UAAU5jB,YAE9DgiB,EAAQ+B,KAAOA,EACfD,EAAoBX,KAAKnB,MAK7BhC,GAAc,SAAAD,GAAU,OAAI+D,KAC5B5D,GAAiB,SAAAD,GAAa,OAAI6D,MAoC9BxE,EAA+B,SAAChgB,GACpCpC,EAAW0D,SAAS,MAAM,CAACimB,WAAYvnB,KAGnC6f,EAAiC,SAAC7f,GAEtCd,IAAMC,MAAM,SAAU,mCAAqCa,EAAK7F,KAAO,KACvE,CAAC,CAAE2H,KAAM,MAAOnH,QAAS,kBAxCD,SAAO8F,GAAP,mBAAAvC,EAAAC,OAAA,uDACpBC,EAAMZ,GAAU,gCAAmCiD,EAC1C,UACTpC,EAAU,IAAIC,SACVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OANS,SAOTL,YAToB,WAAAH,EAAA,MAYlBS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAamR,WAAanR,EAAaoR,KACvCuQ,GAAc,SAAAD,GAAU,OAAI,QAC5BM,EAAU3oB,EAAUwX,KAAKC,SAEzB3Q,IAAMC,MAAM,aAAcJ,EAAaK,YAG5CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAxBa,4DAwCOooB,CAAkBxnB,EAAK0kB,iBACtD,CAAE5iB,KAAM,KAAMnH,QAAS,aAAUjC,MAAO,WACxC,CAAE+uB,YAAY,KAOVC,GAAmB,SAAC1nB,GACrBmgB,IAAuBngB,EAAKS,GAE7B2f,EAAsBD,EAAqB,GAI3CC,EAAsBD,EAAqBngB,EAAKS,KA8BlD,OACE,kBAAChI,EAAA,EAAD,CAAM4rB,IAAKjsB,EAAUuvB,aAAcjvB,MAAOG,GAAOyG,YAC7B,IAAjBkgB,GACC,kBAAC/mB,EAAA,EAAD,CAAMC,MAAOG,GAAO+uB,aACpB,kBAACnvB,EAAA,EAAD,CAAMC,MAAOG,GAAO4Y,gBAClB,kBAAC,UAAD,CAAM/Y,MAAOG,GAAOgvB,UAAW1tB,KAAK,iBAAiBC,KAAM,GAAIC,MAAM,SACrE,kBAACuX,GAAA,EAAD,CAAWlZ,MAAOG,GAAOivB,OAEvB9sB,MAAOqlB,EACPvO,YAAY,SACZiW,sBAAsB,cACtB7V,aAAc,SAAClX,GAAD,OApCH,SAACA,GACtB,IAAIgtB,EAAexH,EAAezN,QAChC,SAAAjZ,GACE,IAAImuB,EAAiBnuB,EAAKK,KAAM+tB,cAE5BC,EAAsBntB,EAAMktB,cAEhC,OAAOD,EAAczvB,QAAQ2vB,IAAwB,KAGzD7H,EAAmBD,EAAkBrlB,GACrCulB,EAA2ByH,GAyBQI,CAAeptB,SAG5CylB,GAAchB,EACd,kBAAChnB,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,WAGhD,kBAACnI,EAAA,EAAD,CAAMC,MAASG,GAAOyG,WACC,IAAtBmhB,EAAWnb,OACZ,kBAAC7M,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACpD,kBAAC,IAAD,CAAM/D,MAAO,CAAC,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,aAAzC,qBAGJ,kBAAC,KAAD,CAAcld,MAAO,CAAC2D,UAAW,EAAG1D,KAAM,IACxC,kBAAC,IAAD,CAAMD,MAAO,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,UAAWzZ,UAAW,SAAUF,WAAY,SAAU7D,EAAUwX,KAAKrH,UAC7G,kBAAC1I,GAAA,EAAD,CACEnH,MAAOG,GAAOwvB,iBACdvoB,KAAM2gB,EAENjgB,aAAe,SAACR,GACd,OAAOA,EAAKS,GAAGC,YAEjBX,WAAY,YAAa,IAAXC,EAAU,EAAVA,KACR3F,EAAQ,UACRitB,EAAM,KACNgB,EAAS7uB,EAAQ,KA6BrB,OA5BIuG,EAAK+kB,MACyB,KAA1B/kB,EAAK+kB,IAAIwD,eACTluB,EAAQ,UAEJiuB,EADAtoB,EAAK8kB,KAAO9kB,EAAK8kB,KAAO,IAAM9kB,EAAK8kB,KAAO,GACjCrrB,EAAQ,KACVuG,EAAK8kB,KAAO9kB,EAAK8kB,KAAO,IAAM9kB,EAAK8kB,KAAO,GACxCrrB,EAAQ,KAERA,EAAQ,OAGrBY,EAAQ,UACJ2F,EAAK8kB,KAAO9kB,EAAK8kB,KAAO,IAAM9kB,EAAK8kB,KAAO,GAC1CwD,EAAS7uB,EAAQ,KACVuG,EAAK8kB,KAAO9kB,EAAK8kB,KAAO,IAAM9kB,EAAK8kB,KAAO,GACjDwD,EAAS7uB,EAAQ,MAEjB6uB,EAAS7uB,EAAQ,KACjBY,EAAQ,aAKhB2F,EAAKsnB,MAAIgB,EAAS7uB,EAAQ,MAC1BuG,EAAKsnB,MAAKA,EAAKtnB,EAAKsnB,IAAI5mB,WAAY,KAExCrG,EAAMrB,EAAOoC,KAGb,kBAACotB,GAAA,EAAD,CACEC,mBAAoB,kBAAM,kBAAC9I,EAAD,CAAa3f,KAAMA,KAC7C0oB,gBAAgB,GAElB,kBAACC,GAAA,EAAD,CAAoBC,cAAe,cAAevE,IAAKrkB,EAAKS,GAAI9F,QAAS,kBAAK+sB,GAAiB1nB,KAC7F,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOgwB,KAAO,CAAChtB,YAAYxB,EAAOmH,gBAAiBxI,EAAO0I,WACtE,kBAACjJ,EAAA,EAAD,CAAMC,MAAOG,GAAOiwB,aAClB,kBAACzvB,EAAA,EAAD,CAAOX,MAAO,CAACG,GAAOkwB,MAAOlwB,GAAOmwB,cAAe1vB,OAAQgvB,IAC3D,kBAAC7vB,EAAA,EAAD,CAAMC,MAAOG,GAAOowB,QAClB,kBAAC7vB,EAAA,EAAD,CAAkBV,MAAO,CAACQ,cAAe,OAAQyB,QAAS,kBAAM+sB,GAAiB1nB,KAC7E,kBAAC,IAAD,CAAMtH,MAAO,CAACG,GAAOsB,KAAM,CAACE,MAAO,aAAc2F,EAAK7F,SAc9D,kBAACf,EAAA,EAAD,CAAkBuB,QAAS,kBAAM+sB,GAAiB1nB,KAClD,kBAACvH,EAAA,EAAD,CAAMC,MAAOG,GAAOqwB,YAChB,kBAAC,IAAD,CAAMxwB,MAAO,CAACG,GAAOoX,KAAM,CAAC5V,MAAOrB,EAAOmwB,WAA1C,cACA,kBAAC,IAAD,CAAMzwB,MAAO,CAACG,GAAOoX,KAAM,CAAC5V,MAAOrB,EAAOmwB,WAA1C,aACA,kBAAC,IAAD,CAAMzwB,MAAO,CAACG,GAAOoX,KAAM,CAAC5V,MAAOrB,EAAOmwB,WAA1C,iBAEJ,kBAAC1wB,EAAA,EAAD,CAAMC,MAAOG,GAAOuwB,WAChB,kBAAC,IAAD,CAAM1wB,MAAO,CAACG,GAAOoX,KAAM,CAAC5V,MAAOrB,EAAOmwB,WAAYnpB,EAAK2kB,aAC3D,kBAAC,IAAD,CAAMjsB,MAAO,CAACG,GAAOoX,KAAM,CAAC3J,YAAY,GAAIjM,MAAOrB,EAAOmwB,WAAYnpB,EAAK4kB,YAC3E,kBAAC,IAAD,CAAMlsB,MAAO,CAACG,GAAOoX,KAAM,CAAC5T,UAAU,EAAEhC,MAAOrB,EAAOmwB,WAAYnpB,EAAK6kB,YAE3E,kBAACpsB,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACxBouB,EACD,kBAAC7uB,EAAA,EAAD,KACA,kBAAC,UAAD,CAAMC,MAAO,CAACG,GAAOwwB,MAAO,IAAKlvB,KAAK,QAAQC,KAAM,GAAIC,MAAM,YAC9D,kBAAC,IAAD,CAAM3B,MAAO,CAACG,GAAOyuB,IAAK,KAAMA,IAE9B,MAEN,kBAAC7uB,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC,IAAD,CAAMR,MAAO,CAACG,GAAOisB,IAAK,KAA1B,QAAqC9kB,EAAK8kB,MAE7C3E,IAAuBngB,EAAKS,IAC7B,kBAAChI,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOiwB,YAAajwB,GAAOywB,cA5HxC,SAACtpB,GAClB,OAAOA,EAAKykB,KAAKN,KAAI,SAACoF,EAAKlF,GACzB,OACE,kBAACjrB,EAAA,EAAD,CAAkBirB,IAAKA,EAAK3rB,MAAOG,GAAO2wB,SAAU7uB,QAAS,kBAAM+sB,GAAiB1nB,KAClF,kBAAC,IAAD,CAAMtH,MAAOG,GAAO0wB,KAAMA,OAyHbE,CAAWzpB,eAmB5BnH,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,WAEnBynB,OAAQ,CACNtwB,KAAM,EACNO,cAAe,MACfuD,WAAY,SACZtD,eAAgB,gBAChBkD,WAAW,IAEburB,YAAY,CACV1uB,cAAe,MACfmD,UAAW,GAEboV,eAAgB,CACd5P,kBAAmB,UACnBL,gBAAiB,UACjB7F,aAAa,GACbiG,kBAAmB,EACnBlG,OAAO,GACPxC,cAAe,MACfuD,WAAW,SACX9D,KAAK,EAEL0D,UAAW,GACXiK,WAAY,GACZlK,YAAa,IAEfhB,KAAK,CACHK,MAAM,GACNC,OAAO,IAETguB,cAAc,CACZ5tB,UAAU,UAEZgsB,OAAO,CACLpsB,OAAO,GACP4K,WAAW,GACXzE,kBAAmB,UACnBlJ,KAAK,GAEPkvB,UAAU,CACRvhB,WAAW,GACXnN,eAAgB,UAElBkvB,iBAAiB,CACfhsB,UAAW,EAGXmK,YAAa,GACbC,aAAc,IAEhBoiB,KAAM,CACJntB,OAAO,KACPgL,WAAW,GACXijB,cAAc,GACdttB,UAAU,EACVnD,cAAe,SACf4D,eAAe,GACfF,aAAa,GAEfksB,YAAY,CACV5vB,cAAc,MACdoN,WAAW,IAEb0iB,aAAa,CACX3sB,WAAW,IAEbitB,YAAY,CACVjtB,UAAU,GACVutB,SAAS,QAEXb,MAAM,CACJttB,MAAM,GACNC,OAAO,GACPC,aAAa,IAEfxB,KAAK,CACH6B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZqK,WAAW,GACXxK,UAAW,UAEbutB,MAAM,CACJ/iB,WAAW,GACXxK,UAAW,SACXO,WAAW,IAEbirB,IAAI,CACFtrB,SAAS,EACTC,WAAW,OACXqK,WAAW,GACXxK,UAAW,SACXO,WAAW,EACXhC,MAAO,WAETyqB,IAAI,CACF9oB,SAAU,EACVC,WAAW,OACXqK,WAAW,GACXxK,UAAW,SACXO,UAAWX,GAAS,KAAO,IAAM,GACjCrB,MAAO,WAET4V,KAAK,CACHjU,SAAUN,GAAS,IAAM,GAAK,GAC9BI,UAAW,UAEbytB,IAAI,CACFvtB,SAAUN,GAAS,IAAM,GAAK,GAC9BI,UAAW,UAEb0tB,SAAU,CACRhuB,QAAQ,EACRG,aAAa,GACbkuB,iBAAiB,EACjBroB,gBAAiB,OACjBnF,UAAU,GAEZ6sB,WAAY,CACVvwB,KAAM,EACNO,cAAe,MACfuD,WAAY,SACZtD,eAAgB,gBAChBqN,YAAY,GACZC,aAAc,GACdpK,WAAW,IAEb+sB,UAAW,CACTzwB,KAAM,EACNO,cAAe,MACfuD,WAAY,SACZtD,eAAgB,gBAChBqN,YAAY,GACZC,aAAc,IAEdmZ,aAAc,CACZpe,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,EACdP,UAAW,GAEb0jB,WAAY,CACVve,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,EACdP,UAAW,GAEbyjB,WAAY,CACVtkB,QAAS,M,qkBCjrBf,IAAM0H,GAAWzF,EAASqsB,KAC1B,GAAuBxsB,KAAWC,IAAI,UAA/B9B,GAAP,GAAOA,MAAMC,GAAb,GAAaA,OA2XEquB,GAzXc,SAAC,GAAoB,IAAlBnsB,EAAiB,EAAjBA,WACpB5E,EAAWhB,eAAXgB,OACR,EAAwBrB,IAAMM,WAAWP,GAAzC,yBAAWU,EAAX,KACA,EAAoCT,IAAMkG,SAAS,MAAnD,WAAKmsB,EAAL,KAAkBC,EAAlB,KACA,EAAoCtyB,IAAMkG,UAAS,GAAnD,WAAKqsB,EAAL,KAAkBC,EAAlB,KAEA,EAAgCxyB,IAAMkG,UAAS,GAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KACA,EAAgChM,IAAMkG,UAAS,GAA/C,WAAKusB,EAAL,KAAgBC,EAAhB,KACA,EAAwB1yB,IAAMkG,UAAS,GAAvC,WAAKysB,EAAL,KAAYC,EAAZ,KACA,EAA8B5yB,IAAMkG,UAAS,GAA7C,WAAK2sB,EAAL,KAAeC,EAAf,KACA,EAAgC9yB,IAAMkG,UAAS,GAA/C,WAAK6sB,EAAL,KAAgBC,EAAhB,KACA,EAA8BhzB,IAAMkG,UAAS,GAA7C,WAAK+sB,EAAL,KAAeC,EAAf,KACA,EAAsClzB,IAAMkG,UAAS,GAArD,WAAKitB,EAAL,KAAmBC,EAAnB,KACA,GAAoCpzB,IAAMkG,UAAS,GAAnD,aAAKmtB,GAAL,MAAkBC,GAAlB,MACA,GAAgCtzB,IAAMkG,UAAS,GAA/C,aAAKqtB,GAAL,MAAgBC,GAAhB,MACA,GAAkCxzB,IAAMkG,UAAS,GAAjD,aAAKutB,GAAL,MAAiBC,GAAjB,MACA,GAAkC1zB,IAAMkG,UAAS,GAAjD,aAAKytB,GAAL,MAAiBC,GAAjB,MACA,GAAwC5zB,IAAMkG,UAAS,GAAvD,aAAK2tB,GAAL,MAAoBC,GAApB,MACA,GAA4B9zB,IAAMkG,UAAS,GAA3C,aAAK6tB,GAAL,MAAcC,GAAd,MACA,GAA4Ch0B,IAAMkG,UAAS,GAA3D,aAAK+tB,GAAL,MAAsBC,GAAtB,MACA,GAAgCl0B,IAAMkG,UAAS,GAA/C,aAAKiuB,GAAL,MAAgBC,GAAhB,MACA,GAAsCp0B,IAAMkG,UAAS,GAArD,aAAKmuB,GAAL,MAAmBC,GAAnB,MACA,GAA4Bt0B,IAAMkG,UAAS,GAA3C,aAAKquB,GAAL,MAAcC,GAAd,MACA,GAA4Bx0B,IAAMkG,UAAS,GAA3C,aAAKuuB,GAAL,MAAcC,GAAd,MAsBMC,GAAY,WAChB,IAAInrB,EAAS,GAkBb,OAjBImpB,IAAOnpB,GAAU,qBACjBqpB,IAAUrpB,GAAU,2BACpBupB,IAAWvpB,GAAU,yBACrBypB,IAAUzpB,GAAU,uCACpB2pB,IAAc3pB,GAAU,qCACxB6pB,KAAa7pB,GAAU,mCACvB+pB,KAAW/pB,GAAU,8BACrBiqB,KAAYjqB,GAAU,4BACtBmqB,KAAYnqB,GAAU,oCACtBqqB,KAAerqB,GAAU,8BACzBuqB,KAASvqB,GAAU,oCACnByqB,KAAiBzqB,GAAU,yCAC3B2qB,KAAW3qB,GAAU,4BACrB6qB,KAAc7qB,GAAU,wCACxB+qB,KAAS/qB,GAAU,gDAEvBA,GAAU,gCASNorB,GAAY,kCAAAruB,EAAAC,OAAA,uDACZhE,EAAuB,OAAhB6vB,EAAuB,kBAAoBA,EAClD7oB,EAAS,UAAY/I,EAAUsX,aAAe,kCAClDvO,GAAU,mBAAqBmrB,KAC/BnrB,GAAU,gBAAkBhH,EAC5BwJ,GAAa,GAETvF,EAAM8E,GAAW,oBAAsB/B,EAC9B,OACT9C,EAAU,IAAIC,SAGVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OARS,MASTL,YAjBY,YAAAH,EAAA,MAoBVS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,EAAamR,WAEf+Z,EAAeD,EAAc,IAC7BpsB,EAAW0D,SAAS,gBAEpBpC,IAAMC,MAAM,aAAcJ,EAAaK,SAEzCuE,GAAa,MAEhB3E,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,SACtCuE,GAAa,IACN,MAnCK,8DAwClB,OACI,kBAAC/K,EAAA,EAAD,KACE,kBAAC6d,GAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbC,QAASsT,EACTrT,eAAgB,cAIhB,kBAAC8R,GAAA,EAAD,CAAoBC,cAAe,qBAAsBlwB,MAAOG,GAAO2zB,aAAc7xB,QAAS,WAAOwvB,GAAgBD,KACnH,kBAACzxB,EAAA,EAAD,CAAMC,MAAOG,GAAO4zB,WAClB,kBAACh0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WAC3B,kBAAC,IAAD,CAAMR,MAAK,SAAMG,GAAO6zB,WAAb,IAAwBzwB,WAAY,OAAQD,SAAU,MAAjE,WACA,kBAAC,IAAD,CAAMtD,MAAK,MAAMG,GAAO6zB,YAAxB,eACA,kBAAC9a,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,UACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,EAAOgZ,YAE3ChX,MAAOgvB,EAEP9X,aAAc,SAAC1B,GAAD,OAASyZ,EAAeD,EAAcxZ,MAEtD,kBAAC,IAAD,CAAM9X,MAAK,MAAMG,GAAO6zB,YAAxB,kDAEF,kBAACj0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOuD,WAAY,WAAatD,eAAgB,aAC3E,kBAACwvB,GAAA,EAAD,CAAoBC,cAAe,UACjClwB,MAAK,SAAOG,GAAO8zB,YAAd,IAA0BnrB,gBAAiB,UAAWpF,YAAa,IAAIzB,QAAS,WAxEnGwvB,GAAgBD,GAChBqC,OAyEc,kBAAC,IAAD,CAAM7zB,MAAOG,GAAOkO,WAApB,QAEF,kBAAC4hB,GAAA,EAAD,CAAoBC,cAAe,UACjClwB,MAAK,SAAOG,GAAO8zB,YAAd,IAA0BnrB,gBAAiB,YAAY7G,QAAS,WAAQwvB,GAAgBD,GAAaD,EAAeD,EAAc,MAEvI,kBAAC,IAAD,CAAMtxB,MAAOG,GAAOkO,WAApB,WAQV,kBAAChO,EAAA,EAAD,CACEC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAO+zB,eAEhB,kBAACn0B,EAAA,EAAD,CAAMC,MAAO,CAAEQ,cAAe,SAAUmD,UAAW,IACnD,kBAAC,IAAD,CAAM3D,MAAO,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,UAAW+T,cAAe,EAAGxtB,UAAW,SAAUF,WAAY,SAAU7D,EAAUwX,KAAKrH,UAC7H,kBAAC9P,EAAA,EAAD,CAAMC,MAAO,CAAC8I,gBAAiBxI,EAAO4W,KAAMpU,QAAS,GAAIsB,eAAgB,EAAGjB,YAAa,UACvF,kBAAC,IAAD,CAAMnD,MAAOG,GAAOwJ,QAApB,qBAEF,kBAAC5J,EAAA,EAAD,CAAOC,MAAO,CAAC8I,gBAAiB,QAAShG,QAAS,KAEhD,kBAAC/C,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAM0wB,SAAU,OAAOiD,WAAY,EAAE1zB,eAAgB,gBAAgByD,aAAc,KAC9G,kBAACxD,EAAA,EAAD,CAAkB2K,SAAYL,EAAWhL,MAAO,CAACG,GAAOi0B,gBAAgB,CAACtrB,gBAAiBxI,EAAOoC,OAAST,QAAS,kBAAMwvB,GAAgBD,KACvIxmB,EACA,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAM,UAEtC,kBAAC,IAAD,CAAM3B,MAAOG,GAAOk0B,SAApB,sBAWJ,kBAACt0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAM2C,YAAa,OAAO+F,kBAAmB,IAAIvF,UAAW,KACvF,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW0V,EAAWzV,QAAW,kBAlK/C0V,EAAaD,GAAaA,GAC1BG,EAASD,EAAQF,GACjBK,EAAYD,EAAWJ,GACvBO,EAAaD,EAAYN,GACzBS,EAAYD,EAAWR,GACvBW,EAAgBD,EAAeV,GAC/Ba,GAAeD,GAAcZ,GAC7Be,GAAaD,GAAYd,GACzBiB,GAAcD,GAAahB,GAC3BmB,GAAcD,GAAalB,GAC3BqB,GAAiBD,GAAgBpB,GACjCuB,GAAWD,GAAUtB,GACrByB,GAAmBD,GAAkBxB,GACrC2B,GAAaD,GAAY1B,GACzB6B,GAAgBD,GAAe5B,GAC/B+B,GAAWD,GAAU9B,QACrBiC,GAAWD,GAAUhC,MAmJP,kBAAC3xB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,iBAIN,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAAC2D,UAAW,IACzB,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW4V,EAAO3V,QAAW,WAAM4V,EAASD,GAASA,MACrD,kBAAC7xB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,iBAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW8V,EAAU7V,QAAW,WAAM8V,EAAYD,GAAYA,MAC9D,kBAAC/xB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,sCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWgW,EAAW/V,QAAW,WAAMgW,EAAaD,GAAaA,MACjE,kBAACjyB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,oBAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWkW,EAAUjW,QAAW,WAAMkW,EAAYD,GAAYA,MAC9D,kBAACnyB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,oCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWoW,EAAcnW,QAAW,WAAMoW,EAAgBD,GAAgBA,MAC1E,kBAACryB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,yBAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWsW,GAAarW,QAAW,WAAMsW,GAAeD,IAAeA,OACvE,kBAACvyB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,+BAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWwW,GAAWvW,QAAW,WAAMwW,GAAaD,IAAaA,OACjE,kBAACzyB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,wBAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW0W,GAAYzW,QAAW,WAAM0W,GAAcD,IAAcA,OACpE,kBAAC3yB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,+BAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW4W,GAAY3W,QAAW,WAAM4W,GAAcD,IAAcA,OACpE,kBAAC7yB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW8W,GAAe7W,QAAW,WAAM8W,GAAiBD,IAAiBA,OAC7E,kBAAC/yB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,4CAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWgX,GAAS/W,QAAW,WAAMgX,GAAWD,IAAWA,OAC3D,kBAACjzB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWkX,GAAiBjX,QAAW,WAAMkX,GAAmBD,IAAmBA,OACnF,kBAACnzB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uDAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWoX,GAAWnX,QAAW,WAAMoX,GAAaD,IAAaA,OACjE,kBAACrzB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uDAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWsX,GAAcrX,QAAW,WAAMsX,GAAgBD,IAAgBA,OAC1E,kBAACvzB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,mCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWwX,GAASvX,QAAW,WAAMwX,GAAWD,IAAWA,OAC3D,kBAACzzB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uCAIJ,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAAC,KAAD,CACAR,MAAOG,GAAOm0B,SACdxY,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAW0X,GAASzX,QAAW,WAAM0X,GAAWD,IAAWA,OAC3D,kBAAC3zB,EAAA,EAAD,CAAMC,MAAOG,GAAOo0B,gBAClB,kBAAC,IAAD,CAAMv0B,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,uBAYd7N,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAER0J,OAAQ,CACNrG,SAAUN,GAAS,IAAM,GAAK,GAC9BrB,MAAO,QACP4B,WAAY,QAEd2wB,cAAe,CACbj0B,KAAM,GAERs0B,eAAgB,CACdxxB,MAAO,MACPtC,eAAgB,SAChBwwB,cAAe,GAGjBqD,SAAU,CACRjrB,OAAQ,EACRvG,QAASE,GAAS,IAAM,IAAM,EAC9BvC,eAAgB,UAGlB4zB,QAAS,CACP/wB,SAAUN,GAAS,IAAM,GAAK,GAC9BS,UAAW,SACX9B,MAAO,QACP4B,WAAY,QAEd6wB,gBAAiB,CACfrxB,MAAO,MACPD,QAASE,GAAS,IAAM,EAAG,EAC3BC,aAAc,IAIlB6wB,aAAc,CACZ7zB,KAAM,EACN6I,gBAAiB,wBACjBrI,eAAgB,SAChBsD,WAAY,UAGdgwB,UAAW,CAEThxB,MAAOA,GAAQ,GACf+F,gBAAiB,QACjB7F,aAAc,EACdH,QAAS,GAET0xB,YAAa,OACbC,aAAc,CACZ1xB,MAAO,EACPC,OAAQ,GAEV0xB,cAAe,IACfC,aAAc,KACd5lB,UAAW,GAEbklB,WAAY,CACVnrB,gBAAiB,UACjB7F,aAAc,EACdH,QAAS,GACTiM,UAAW,GAEbV,UAAW,CACT1M,MAAO,QACP4B,WAAY,OACZE,UAAW,UAEbuwB,UAAW,CACT9vB,aAAc,GACdT,UAAW,QAEbmX,aAAc,CAEZ1W,aAAc,EACdgF,kBAAmB,EACnBC,kBAAmB,a,IC1cRvG,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,OACjB/E,WAAY,SACZtD,eAAgB,YCLPmC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,OACjB/E,WAAY,SACZtD,eAAgB,YCLPmC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,OACjB/E,WAAY,SACZtD,eAAgB,YCNPolB,e,QCCf,GAAuBjhB,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QACP8B,GAAUC,EAASC,OACrB4vB,GAAoB,SAAC,GACxB,IADyBttB,EAC1B,EAD0BA,KAAKmX,EAC/B,EAD+BA,MAE7B,OACE,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAACE,EAAA,EAAD,CAAmBV,MAAOG,GAAO00B,eAAgBxpB,SAA2B,aAAf/D,EAAKwtB,OAAuB7yB,QAAS,kBAAM8yB,eAAeztB,EAAKmX,KACxH,kBAAC,KAAD,CAAMze,MAAOG,GAAOinB,WAAY3lB,KAAK,WAAWC,KAAM,GAAIC,MAAM,aAgN3DqzB,GA3MU,SAAC,GAAqC,EAAnC9vB,WAAmC,EAAvB+vB,iBAAwB,IACpD30B,EAAWhB,eAAXgB,OACR,EAAwBrB,IAAMM,WAAWP,GAAzC,yBAAWU,EAAX,KACA,EAAoCT,IAAMkG,SAAS,MAAnD,WAAO+vB,EAAP,KAAmBC,EAAnB,KAEAl2B,IAAMqG,WAAU,WACZ6vB,GAAc,SAAAD,GAAU,OAAI,QAC5BE,EAAc11B,EAAUwX,KAAKC,UAC9B,CAACzX,EAAU21B,SAEd,IAqBQD,EAAgB,SAAOje,GAAP,mBAAA3R,EAAAC,OAAA,uDAChBC,EAAMZ,GAAU,8FAAiGqS,EACxG,OACTxR,EAAU,IAAIC,SAGVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OARS,MASTL,YAXgB,WAAAH,EAAA,MAcdS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,GAAIA,EAAamR,WAAanR,EAAaoR,IAAI,CAE7C,IAAIrQ,EAAO,GACXf,EAAaoR,IAAIqS,SAAQ,SAASxiB,EAAMyiB,GACtC,IAAIuL,EAAU,GACdA,EAAQvtB,GAAKT,EAAI,GACjBguB,EAAQR,OAASxtB,EAAI,kBACrBguB,EAAQle,KAAOhH,IAAO9I,EAAKiuB,aAAavoB,OAAO,uBAC/CsoB,EAAQE,IAAMluB,EAAI,WAAemuB,MAAM,KAAK7oB,OAC5C0oB,EAAQI,WAAapuB,EAAI,gBACzBF,EAAK+jB,KAAKmK,MAGZH,GAAc,SAAAD,GAAU,OAAI9tB,UAG5B+tB,GAAc,SAAAD,GAAU,MAAI,SAG/B5uB,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAtCS,6DAuFxB,OACI,kBAACrG,EAAA,EAAD,CACAC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAOyG,WAEdsuB,EAKA,kBAACn1B,EAAA,EAAD,CAAMC,MAASG,GAAOyG,WACG,IAAtBsuB,EAAWtoB,OACZ,kBAAC7M,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACpD,kBAAC,IAAD,CAAM2J,kBAAkB,EAAO1N,MAAO,CAAC,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,aAAlE,qBAGJ,kBAAChW,GAAA,EAAD,CAAclH,MAAO,CAAC2D,UAAW,EAAGO,aAAc,KAChD,kBAAC,IAAD,CAAMwJ,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACuB,SAAS,GAAI3B,MAAOA,KAAMub,UAAW+T,cAAe,KAAMvxB,EAAUwX,KAAKrH,UAChI,kBAAC1I,GAAA,EAAD,CACEC,KAAM8tB,EAEN7tB,WAAY,gBAAGC,EAAH,EAAGA,KAAKmX,EAAR,EAAQA,MAAR,OAAoB,kBAAClX,EAAD,CAAMkX,MAAOA,EAAOnX,KAAMA,KAC1DQ,aAAc,SAAAR,GAAI,OAAIA,EAAKS,GAAGC,gBAhBlC,kBAACjI,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,YAwBtD,SAASX,EAAT,GAA+B,IAAfkX,EAAc,EAAdA,MAAMnX,EAAQ,EAARA,KACdquB,EAAaruB,EAAKouB,WAEtB,OAEE,kBAAC31B,EAAA,EAAD,CAAMC,MAAOG,GAAOy1B,eAClB,kBAAC9F,GAAA,EAAD,CACEzkB,SAAkC,KAAtB/D,EAAKuuB,cACjB9F,mBAAoB,kBAAM,kBAAC,GAAD,CAAmBzoB,KAAMA,EAAMmX,MAAOA,EAAQ,KACxEuR,gBAAgB,GAGlB,kBAACC,GAAA,EAAD,CAAoBC,cAAe,cAAevE,IAAKlN,EAAOpT,SAAkC,KAAtB/D,EAAKuuB,cAAsB5zB,QAAS,cAC5G,kBAAClC,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOmH,KAAK,CAACnD,eAAgB7D,EAAOoC,KAAMyG,kBAAmB7I,EAAOoC,QAEhF,kBAAC3C,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4I,cAAe,CAACD,gBAAiBxI,EAAO0I,WACzC,KAAf2sB,GAAsC,WAAhBruB,EAAKwtB,QAC5B,kBAAC/0B,EAAA,EAAD,KACE,kBAACkI,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAOoC,QAGhC,OAAfizB,GACD,kBAAC51B,EAAA,EAAD,CAAMC,MAAO,CAACS,eAAgB,aAAeD,cAAe,MAAOsN,YAAa,EAAGmjB,cAAe,IAChG,kBAAC,IAAD,CAAMvjB,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACuB,SAAUN,GAAS,IAAM,GAAK,GAAIrB,MAAOrB,EAAOw1B,UAAWC,UAAW,YAA6B,WAAhBzuB,EAAKwtB,OAAqBxtB,EAAKouB,WAAY,kBAGrL,kBAAC31B,EAAA,EAAD,CAAMC,MAAO,CAACS,eAAgB,eAAiBD,cAAe,QAC1D,kBAACT,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,MACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcrX,EAAQ,IAEhG,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,UACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcxuB,EAAKwtB,SAE7F,kBAAC/0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,YACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcxuB,EAAK8P,OAE7F,kBAACrX,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,WACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcxuB,EAAKkuB,cAe/Gr1B,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,GAER21B,cAAe,CACbzE,iBAAkB,IAEpB7pB,KAAM,CACJpD,aAAc,EAGdE,eAAgB,EAChB8E,kBAAmB,GAErBH,cAAe,CACbhG,MAAO,OACPD,QAAS,GAETrC,eAAgB,SAChB4C,aAAc,UAEhBtB,MAAO,CACL0B,UAAW,SACXF,WAAY,OACZD,SAAUN,GAAS,IAAM,GAAK,IAGhCmH,SAAU,CACR1G,UAAW,SACXH,SAAUN,GAAS,IAAM,GAAK,IAGhC6xB,eAAgB,CACd/rB,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,GAGhBkjB,WAAY,CACVtkB,QAAS,M,qkBClQb,OAAuB8B,KAAWC,IAAI,UAA/B9B,GAAP,GAAOA,MAAMC,GAAb,GAAaA,OACP8B,GAAUC,EAASC,OACnBwF,GAAWzF,EAASqsB,KA8UX4E,GAzUS,SAAC,GAAuE,EAArE9wB,WAAqE,EAAzD+vB,iBAA0D,IAAxCgB,EAAuC,EAAvCA,eAAeC,EAAwB,EAAxBA,kBAClEC,EAAuB,SAAC,GAC3B,IAD4B7uB,EAC7B,EAD6BA,KAC7B,EADkCmX,MAEhC,OACE,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACF,MAAvB8G,EAAKuuB,cACP,kBAACn1B,EAAA,EAAD,CAAmBV,MAAOG,GAAO00B,eAAgB5yB,QAAS,kBAAMm0B,EAAe9uB,KAC3E,kBAAC,KAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,WAAWC,KAAM,GAAIC,MAAM,WAElE,OAKErB,EAAWhB,eAAXgB,OACR,EAAwBrB,IAAMM,WAAWP,GAAzC,yBAAWU,EAAX,KAEA,EAA0CT,IAAMkG,SAAS,MAAzD,WAAKkxB,EAAL,KAAqBC,EAArB,KACA,EAAwCr3B,IAAMkG,SAAS,MAAvD,WAAKoxB,EAAL,KAAoBC,EAApB,KAkBE,EAA0Cv3B,IAAMkG,SAAS,MAAzD,WAAOsxB,EAAP,KAAsBC,EAAtB,KAGMN,EAAiB,SAAO9uB,GAAP,eAAA9B,EAAAC,OAAA,uDAErBkxB,GADIA,EAAarvB,EAAKsvB,iBAAiBC,QAAQ,iBAAiB,eACxCA,QAAQ,MAAO,UAAY,sBAAwBn3B,EAAUuM,UAAU4qB,QAAQ,SAAU,IAAItuB,OAFhG,WAAA/C,EAAA,MAIFmD,IAA4BguB,IAJ1B,2EAQvB13B,IAAMqG,WAAU,YACc,OAAxB5F,EAAUo3B,WAAuBp3B,EAAUo3B,WAA0C,cAA7Bp3B,EAAUo3B,UAAU11B,QAC9Es1B,GAAiB,SAAAD,GAAa,OAAI,QAE9B/2B,EAAUo3B,WAA4C,cAA/Bp3B,EAAUo3B,UAAU1O,OAE7C2O,EAAcr3B,EAAUwX,KAAKC,QAE7B6f,EAAkBt3B,EAAUwX,KAAKC,WAIpC,CAACzX,EAAUo3B,YAGd,IAaMC,EAAgB,SAAO5f,GAAP,mBAAA3R,EAAAC,OAAA,uDAEhBC,EAAM8E,GAAW,gCAAkC2M,EAAS,iBADnC,OAAlBof,EAAyB,wBAA0BA,GAEjD,OACT5wB,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAXgB,WAAAH,EAAA,MAcdS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACCA,EAAamR,UAEfgf,EAAiBD,EAAgB,IAEjC/vB,IAAMC,MAAM,aAAcJ,EAAaK,SAEzCuW,YAAW,WACT+Z,EAAkB7f,KACjB,QAEN7Q,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,SACtCswB,EAAkB7f,IACX,MA9BS,6DAkChB6f,EAAoB,SAAO7f,GAAP,mBAAA3R,EAAAC,OAAA,uDACpBC,EAAMZ,GAAU,8CAAiDqS,EACxD,OACTxR,EAAU,IAAIC,SAGVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OARS,MASTL,YAXoB,WAAAH,EAAA,MAclBS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAamR,WAAanR,EAAaoR,IAEzCif,GAAiB,SAAAD,GAAa,OAAIpwB,EAAaoR,OAK/Cif,GAAiB,SAAAD,GAAa,MAAI,SAGrCnwB,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MA7Ba,6DA4E5B,OADEuwB,QAAQC,IAAI,wBAAsBT,GAEhC,kBAACp2B,EAAA,EAAD,CACAC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAOyG,WAEhB,kBAACmX,GAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbC,QAAS+X,EACT9X,eAAgB,cAIhB,kBAAC8R,GAAA,EAAD,CAAoBC,cAAe,qBAAsBlwB,MAAOG,GAAO2zB,aAAc7xB,QAAS,WAAOi0B,GAAmBD,KACtH,kBAACl2B,EAAA,EAAD,CAAMC,MAAOG,GAAO4zB,WAClB,kBAACh0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WAC3B,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAK,SAAMG,GAAO6zB,WAAb,IAAwBzwB,WAAY,OAAQD,SAAU,MAA1F,aACA,kBAAC,IAAD,CAAMoK,kBAAkB,EAAO1N,MAAK,MAAMG,GAAO6zB,YAAjD,eACA,kBAAC9a,GAAA,EAAD,CACEC,qBAAuB,qBACvBC,YAAY,UACZpZ,MAAO,CAACG,GAAOya,aAAa,CAACjZ,MAAOrB,EAAOgZ,YAE3ChX,MAAOi0B,EAEP/c,aAAc,SAAC1B,GAAD,OAAS0e,EAAiBD,EAAgBze,MAE1D,kBAAC,IAAD,CAAMpK,kBAAkB,EAAO1N,MAAK,MAAMG,GAAO6zB,YAAjD,6CAEF,kBAACj0B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOuD,WAAY,WAAatD,eAAgB,aAC3E,kBAACwvB,GAAA,EAAD,CAAoBC,cAAe,UACjClwB,MAAK,SAAOG,GAAO8zB,YAAd,IAA0BnrB,gBAAiB,UAAWpF,YAAa,IAAIzB,QAAS,WAlJ/Fi0B,GAAmBD,GACnBc,EAAcr3B,EAAUwX,KAAKC,UAmJnB,kBAAC,IAAD,CAAMzJ,kBAAkB,EAAO1N,MAAOG,GAAOkO,WAA7C,QAEF,kBAAC4hB,GAAA,EAAD,CAAoBC,cAAe,UACjClwB,MAAK,SAAOG,GAAO8zB,YAAd,IAA0BnrB,gBAAiB,YAAY7G,QAAS,WAAQi0B,GAAmBD,GAAgBO,EAAiBD,EAAgB,MAEjJ,kBAAC,IAAD,CAAM7oB,kBAAkB,EAAO1N,MAAOG,GAAOkO,WAA7C,WAORooB,EAKA,kBAAC12B,EAAA,EAAD,CAAMC,MAASG,GAAOyG,WACM,IAAzB6vB,EAAc7pB,OACf,kBAAC7M,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACpD,kBAAC,IAAD,CAAM2J,kBAAkB,EAAO1N,MAAO,CAAC,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,aAAlE,qBAGJ,kBAAChW,GAAA,EAAD,CAAclH,MAAO,CAAC2D,UAAW,EAAGO,aAAc,KAClD,kBAAC,IAAD,CAAMwJ,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACuB,SAAS,GAAI3B,MAAOA,KAAMub,UAAW+T,cAAe,KAAMvxB,EAAUwX,KAAKrH,UAC9H,kBAAC1I,GAAA,EAAD,CACEC,KAAMqvB,EAENpvB,WAAY,gBAAGC,EAAH,EAAGA,KAAKmX,EAAR,EAAQA,MAAR,OAAoB,kBAAClX,EAAD,CAAMkX,MAAOA,EAAOnX,KAAMA,KAC1DQ,aAAc,SAAAR,GAAI,OAAIA,EAAKS,GAAGC,gBAhBlC,kBAACjI,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,YAyBtD,SAASX,EAAT,GAA+B,IAAfkX,EAAc,EAAdA,MAAMnX,EAAQ,EAARA,KACdiuB,EAAcnlB,IAAO9I,EAAKiuB,aAAavoB,OAAO,uBAE9C2oB,EAAaruB,EAAKquB,WAClBwB,GAAa,EAWjB,OARA7vB,EAAK8vB,UAAU3L,KAAI,SAACC,GAEN,iBADDA,EAAO2L,aAEdF,GAAa,MAIQ,MAAvB7vB,EAAKuuB,eAA0CzlB,IAAO9I,EAAKgwB,kBAAkBtqB,OAAO,uBAEtF,kBAACjN,EAAA,EAAD,CAAMC,MAAOG,GAAOy1B,eAClB,kBAAC9F,GAAA,EAAD,CACEC,mBAAoB,kBAAM,kBAACoG,EAAD,CAAsB7uB,KAAMA,EAAMmX,MAAOA,EAAQ,KAC3EuR,gBAAgB,GAGlB,kBAACC,GAAA,EAAD,CAAoBC,cAAe,cAAe7kB,SAAkC,KAAtB/D,EAAKuuB,cAAsBlK,IAAKlN,EAAOxc,QAAS,kBAzI5F,SAACqF,EAAKmX,GAG5B6X,EAAkBD,EAAiB5X,GAsIqF8Y,CAAgBjwB,EAAKmX,KACvI,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOmH,KAAK,CAACnD,eAAgB7D,EAAOoC,KAAMyG,kBAAmB7I,EAAOoC,QAChF,kBAAC3C,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4I,cAAe,CAACD,gBAAiBxI,EAAO0I,WACzC,OAAf2sB,GACD,kBAAC51B,EAAA,EAAD,CAAMC,MAAO,CAACS,eAAgB,aAAeD,cAAe,MAAOsN,YAAa,EAAGmjB,cAAe,IAChG,kBAAC,IAAD,CAAMvjB,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACuB,SAAUN,GAAS,IAAM,GAAK,GAAIrB,MAAOrB,EAAOw1B,UAAWC,UAAW,YAAazuB,EAAKquB,aAG/H,OAAfA,GAA8C,MAAvBruB,EAAKuuB,eAC7B,kBAAC91B,EAAA,EAAD,KACE,kBAACkI,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAOoC,QAGhD,kBAAC3C,EAAA,EAAD,CAAMC,MAAO,CAACS,eAAgB,eAAiBD,cAAe,QAC1D,kBAACT,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,MACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcrX,EAAQ,IAEhG,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,UACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcxuB,EAAKkwB,oBAE7F,kBAACz3B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,YACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAcP,IAExF,kBAACx1B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,WACzB,kBAAC,IAAD,CAAMkN,kBAAkB,EAAO1N,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAOw1B,aAAnE,WACA,kBAAC,IAAD,CAAMpoB,kBAAkB,EAAO1N,MAAO,CAACG,GAAOgK,SAAS,CAACxI,MAAOrB,EAAOw1B,aAAtE,QAKY,OAAnBxuB,EAAK8vB,WAAsBf,IAAmB5X,GAC7C,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAAE8N,YAAa,GAAInK,UAAW,KAnK9C,SAAC8zB,EAAON,GAGnB,OAAOM,EAAMhM,KAAI,SAACnkB,GAEhB,IAAIS,EAAKT,EAAK+vB,WACVjuB,EAAO9B,EAAKowB,aAAab,QAAQ,MAAO,MACxCv0B,EAAQgF,EAAKqwB,YAWnB,MAVgB,SAAVr1B,GAA2B,wBAAPyF,IAA+C,IAAfovB,EACtD70B,EAAQ,kBAAC,KAAD,CAAMb,KAAK,QAAQC,KAAM,GAAIC,MAAOrB,EAAOs3B,OAA3C,KAES,SAAVt1B,EACPA,EAAQ,kBAAC,KAAD,CAAMb,KAAK,QAAQC,KAAM,GAAIC,MAAM,UAE1B,UAAVW,IACPA,EAAQ,kBAAC,KAAD,CAAMb,KAAK,eAAeC,KAAM,GAAIC,MAAM,SAIpD,CAAC,kBAAC5B,EAAA,EAAD,CAAM4rB,IAAK,EAAG3rB,MAAO,CAACC,KAAK,EAAEO,cAAe,MAAOC,eAAgB,gBAAiBsD,WAAY,WACrF,iBAAPgE,EACG,kBAAC,IAAD,CAAM2F,kBAAkB,EAAOie,IAAK5jB,EAAI/H,MAAO,CAACG,GAAO03B,SAAS,CAACl2B,MAAOrB,EAAOs3B,MAAMt0B,SAAU,GAAIsK,WAAY,MAAOxE,GAEtH,kBAAC,IAAD,CAAMsE,kBAAkB,EAAOie,IAAK5jB,EAAI/H,MAAO,CAACG,GAAO03B,SAAS,CAACl2B,MAAOrB,EAAOw1B,aAAc1sB,GAGtF,MAAV9G,GACC,kBAAC,IAAD,CAAMoL,kBAAkB,EAAO1N,MAAO,CAACG,GAAO03B,SAAS,CAACl2B,MAAOrB,EAAOw1B,aAAcxzB,QAyI3E8E,CAAKE,EAAK8vB,UAAWD,WAiBxCh3B,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,GAER21B,cAAe,CACbzE,iBAAkB,IAEpB7pB,KAAM,CACJpD,aAAc,EAGdE,eAAgB,EAChB8E,kBAAmB,GAErBH,cAAe,CACbhG,MAAO,OACPD,QAAS,IAKX+0B,SAAU,CACRp0B,UAAW,OAEXH,SAAU,GACVR,QAAS,GAEXf,MAAO,CACL0B,UAAW,SACXF,WAAY,OACZD,SAAUN,GAAS,IAAM,GAAK,IAGhCmH,SAAU,CACR1G,UAAW,SACXH,SAAUN,GAAS,IAAM,GAAK,IAGhC6xB,eAAgB,CACd/rB,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,GAGhBmjB,WAAY,CACVve,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,GAGhBkjB,WAAY,CACVtkB,QAAS,IAIXgxB,aAAc,CACZ7zB,KAAM,EACN6I,gBAAiB,wBACjBrI,eAAgB,SAChBsD,WAAY,UAGdgwB,UAAW,CAEThxB,MAAOA,GAAQ,GACf+F,gBAAiB,QACjB7F,aAAc,EACdH,QAAS,GAET0xB,YAAa,OACbC,aAAc,CACZ1xB,MAAO,EACPC,OAAQ,GAEV0xB,cAAe,IACfC,aAAc,KACd5lB,UAAW,GAEbklB,WAAY,CACVnrB,gBAAiB,UACjB7F,aAAc,EACdH,QAAS,GACTiM,UAAW,GAEbV,UAAW,CACT1M,MAAO,QACP4B,WAAY,OACZE,UAAW,UAEbuwB,UAAW,CACT9vB,aAAc,GACdT,UAAW,QAEbmX,aAAc,CAEZ1W,aAAc,EACdgF,kBAAmB,EACnBC,kBAAmB,aCxbvB,GAAuBvE,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QACP8B,GAAUC,EAASC,OAErBiiB,GAAc,SAAC,GAClB,IADmB3f,EACpB,EADoBA,KAElB,OACE,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACR,MAAnB8G,EAAKskB,WAAwC,MAAnBtkB,EAAKskB,WAAwC,MAAnBtkB,EAAKskB,UAAoB,KAC/E,kBAAClrB,EAAA,EAAD,CAAmBV,MAAOG,GAAO+mB,aAAcjlB,QAAS,kBAAO61B,gCAAgCxwB,KAC3F,kBAAC,KAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,SAASC,KAAM,GAAIC,MAAM,WAGlE,kBAACjB,EAAA,EAAD,CAAkBV,MAAOG,GAAOknB,WAAYplB,QAAS,kBAAM81B,yBAAyBzwB,KAChF,kBAAC,KAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,iBAAiBC,KAAM,GAAIC,MAAM,aAkP/Dq2B,GA7OO,SAAC,GAAoB,IAAlB9yB,EAAiB,EAAjBA,WACb5E,EAAWhB,eAAXgB,OACR,EAAsCrB,IAAMM,WAAWP,GAAvD,WAAQwoB,EAAR,KAAQA,gBAAiB9nB,EAAzB,KACAA,EAAUu4B,QAEV,IAqDE,EAAkCh5B,IAAMkG,SAAS,MAAjD,WAAO+yB,EAAP,KAAkBC,EAAlB,KAEAz4B,EAAUw4B,UAAYA,EAEtBj5B,IAAMqG,WAAU,YAIY,OAAtB5F,EAAUu4B,SAAqBv4B,EAAUu4B,SAAsC,YAA3Bv4B,EAAUu4B,QAAQ72B,QACxE+2B,GAAa,SAAAD,GAAS,OAAI,QAE1B5M,EAAS5rB,EAAUwX,KAAKC,WAIzB,CAACzX,EAAUu4B,UAEd,IAAM3M,EAAW,SAAOnU,GAAP,mBAAA3R,EAAAC,OAAA,uDACXC,EAAMZ,GAAU,6BAAgCqS,EACvC,OACTxR,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAVW,WAAAH,EAAA,MAaTS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,GAAIA,EAAamR,WAAanR,EAAaoR,IAAI,CAE7C0gB,GAAa,SAAAD,GAAS,OAAI7xB,EAAaoR,OACvC,IACI+T,EADgBnlB,EAAaoR,IACJgU,KAAI,SAASC,GACtC,IAAK,IAAIC,KAAOD,EACd,MAAO,CAAE/oB,MAAO+oB,EAAOE,UAAY,MAAQF,EAAOG,YAAavpB,MAAOopB,EAAOE,cAInFpE,EAAgBgE,QAGhBhlB,IAAMC,MAAM,aAAcJ,EAAaK,SACvCgR,aAAY,SAAAC,GAAQ,MAAI,SAG7BrR,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAnCI,6DAgGnB,OACI,kBAACrG,EAAA,EAAD,CACAC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAOyG,WAEZsxB,EAKF,kBAAC,KAAD,CAAcl4B,MAAO,CAAC2D,UAAW,EAAG1D,KAAM,IAExC,kBAAC,IAAD,CAAMD,MAAO,CAACG,GAAO4B,MAAM,CAACuB,SAAU,GAAI3B,MAAOA,KAAMub,UAAW+T,cAAe,EAAGxtB,UAAW,YAAa/D,EAAUwX,KAAKrH,UAC3H,kBAAC1I,GAAA,EAAD,CACEC,KAAM8wB,EAEN7wB,WAAY,gBAAGC,EAAH,EAAGA,KAAKmX,EAAR,EAAQA,MAAR,OAAoB,kBAAClX,EAAD,CAAMkX,MAAOA,EAAOnX,KAAMA,KAC1DQ,aAAc,SAAAR,GAAI,OAAIA,EAAK+mB,QAAQrmB,eAXvC,kBAACjI,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,YAkBtD,SAASX,EAAT,GAAgC,IAAhBkX,EAAe,EAAfA,MAAOnX,EAAQ,EAARA,KAEnB,OAEE,kBAACvH,EAAA,EAAD,CAAMC,MAAOG,GAAOy1B,eACpB,kBAAC9F,GAAA,EAAD,CACAC,mBAAoB,kBAAM,kBAAC,GAAD,CAAazoB,KAAMA,KAC7C0oB,gBAAgB,GAGd,kBAACC,GAAA,EAAD,CAAoBC,cAAe,cAAevE,IAAKlN,EAAOxc,QAAS,kBA5EzD,SAACqF,GAEnBpC,EAAW0D,SAAS,qBAAqB,CAACwvB,KAAM9wB,IA0EiC+wB,CAAY/wB,KACvF,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOmH,KAAK,CAACnD,eAAgB7D,EAAOoC,QAEhD,kBAAC3C,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOm4B,eAAgB,CAACxvB,gBAAiBxI,EAAOoC,QAC1D,kBAAC,IAAD,CAAM1C,MAAO,CAACG,GAAOo4B,MAAM,CAAC52B,MAAOrB,EAAOk4B,aAAclxB,EAAKskB,YAEjE,kBAAC7rB,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4I,cAAe,CAACD,gBAAiBxI,EAAO0I,WAC3D,kBAAC,IAAD,CAAMhJ,MAAO,CAACG,GAAO4B,MAAM,CAACJ,MAAOrB,EAAO2I,aAAc3B,EAAKukB,aAC7D,kBAAC9rB,EAAA,EAAD,CAAMC,MAAO,CAACkJ,kBAAmB,EAAEC,kBAAmB7I,EAAO8I,KAAKlF,aAAc,EAAEP,UAAW,KAC7F,kBAAC,IAAD,CAAM3D,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO8I,QAAS9B,EAAKmxB,sBAC/D,kBAAC14B,EAAA,EAAD,CAAMC,MAAO,CAAEkJ,kBAAmB,EAAEC,kBAAmB7I,EAAO8I,KAAKlF,aAAc,EAAEP,UAAW,KAE9F,kBAAC5D,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOC,eAAgB,iBAClD,kBAACV,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,SAASmD,UAAW,IAC7C,kBAAC,IAAD,CAAM3D,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO2I,aAAjD,gBACA,kBAAC,IAAD,CAAMjJ,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO8I,QAAS9B,EAAKoxB,QAASpxB,EAAKqxB,cAEjF,kBAAC54B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,SAASmD,UAAW,IAC7C,kBAAC,IAAD,CAAM3D,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO2I,aAAjD,iBACA,kBAAC,IAAD,CAAMjJ,MAAO,CAACG,GAAOsH,YAAY,CAAE9F,MAAOrB,EAAO8I,QAAS9B,EAAKsxB,QAAStxB,EAAKuxB,sBAc/F14B,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAKR21B,cAAe,CACbzE,iBAAkB,IAGpB7pB,KAAM,CACF9G,cAAe,MACf0D,aAAc,EACdP,UAAW,EAGXS,eAAgB,GAEpBk0B,eAAgB,CACZv1B,MAAO,MAGPwG,uBAAwB,GAExB9I,eAAgB,SAChB4C,aAAc,UAGlB0F,cAAe,CACXhG,MAAO,MACPD,QAAS,GAETrC,eAAgB,SAChB4C,aAAc,UAGlBtB,MAAO,CAEH0B,UAAW,OACXF,WAAY,OACZD,SAAUN,GAAS,IAAM,GAAI,IAGjCu1B,MAAO,CACH90B,UAAW,SACXF,WAAY,OACZD,SAAU,IAGdmE,YAAa,CACThE,UAAW,OACXH,SAAUN,GAAS,IAAM,GAAI,IAEjCkkB,aAAc,CACZpe,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,EACdP,UAAW,GAEb0jB,WAAY,CACVve,gBAAiB,UACjBrI,eAAgB,SAGhByD,aAAc,EACdP,UAAW,GAEbyjB,WAAY,CACVtkB,QAAS,M,8kBCzUf,OAAuB8B,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAgUE81B,GA9TK,SAAC,GAA0B,IAAD,wBAAvB5zB,EAAuB,EAAvBA,WAAW+J,EAAY,EAAZA,MAC9B,EAAsChQ,IAAMM,WAAWP,GAAvD,WAAQ+5B,EAAR,KAAQA,eAAiBr5B,EAAzB,KACA,EAAgCT,IAAMkG,UAAS,GAA/C,WAAK6zB,EAAL,KACA,GADA,KACgC/5B,IAAMkG,UAAS,IAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KAEIguB,GADiBv5B,EAAUw4B,UACnBx4B,EAAUuM,WAElBkL,EAASzX,EAAUsX,aAMf1W,EAAWhB,eAAXgB,OAEJ44B,EAAM,SAAGjqB,EAAMxG,aAAT,EAAG,EAAc2vB,KACvBe,EAAgB,KAIpB,GAA2B,YAAxB,SAAAlqB,EAAMxG,aAAN,IAAc2wB,OACjB,CACI,IAAIC,EAAiBH,EAAOT,qBAAqBlwB,OAC3B,sCAAnB8wB,EAECF,EAAgB,EAEO,mEAAnBE,EAEJF,EAAgB,EAEO,gCAAnBE,IAEJF,EAAgB,GAMxB,MAA4Bl6B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,KAAOF,EAAO7K,SAA5F,WAAKA,EAAL,KACA,GADA,KACgCpvB,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,KAAOF,EAAOtN,YAAhG,WAAK0N,EAAL,KAAgBC,EAAhB,KACA,EAA8Bt6B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,KAAOF,EAAOrN,aAA9F,WAAK2N,EAAL,KAAeC,EAAf,KACA,GAAkCx6B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,EAAID,GAAxF,aAAKO,GAAL,MAAiBC,GAAjB,MACA,GAAoC16B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,KAAOF,EAAOR,SAApG,aAAKkB,GAAL,MAAkBC,GAAlB,MACA,GAA4B56B,IAAMkG,SAAkC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,IAAMF,EAAOP,aAA5F,aAAKmB,GAAL,MAAcC,GAAd,MACA,GAAwC96B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,KAAOF,EAAON,SAAxG,aAAKoB,GAAL,MAAoBC,GAApB,MACA,GAAgCh7B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,OAAqB,IAAMF,EAAOL,aAA/F,aAAKqB,GAAL,MAAgBC,GAAhB,MAGMC,GAAgBn7B,IAAM0M,SAC5B,GAAkC1M,IAAMkG,SAAwB,IAAfu0B,IAAmC,IAAfA,IAArE,aAAKW,GAAL,MAAiBC,GAAjB,MACA,GAAwCr7B,IAAMkG,SAAwB,IAAfu0B,IAAmC,IAAfA,IAA3E,aAAKa,GAAL,MAAoBC,GAApB,MACA,GAA8Cv7B,IAAMkG,SAAS,GAA7D,aAAKs1B,GAAL,MAAuBC,GAAvB,MACA,GAA8Dz7B,IAAMkG,UAAS,GAA7E,aAAKw1B,GAAL,MAA+BC,GAA/B,MAEA,GAA0C37B,IAAMkG,SAAiC,YAAxB,SAAA8J,EAAMxG,aAAN,IAAc2wB,UAA4BF,EAAOtN,WAAmC,MAArBsN,EAAOtN,WAA0C,MAArBsN,EAAOtN,WAA0C,MAArBsN,EAAOtN,YAAvL,aAAKiP,GAAL,MAEIC,IAFJ,MAEyB,MACnBC,GAA2B,SAACD,GAEJ,IAAvBA,IAECJ,GAAoBD,GAAmB,KACvCG,GAA4BD,IAA2B,KAkBzDK,GAAY,SAAC91B,EAAW8zB,EAAWiC,EAAcC,EAAgBjC,GACnE,IAAI7tB,GAAW,EA8Bf,GA3BkB,OAAdkuB,EAAmC,KAAdA,IAErBruB,EAAaD,GAAY,GACzBI,GAAW,EACX5E,IAAMC,MAAM,SAAU,gCAGT,OAAb+yB,EAAiC,KAAbA,IAEpBvuB,EAAaD,GAAY,GACzBI,GAAW,EACX5E,IAAMC,MAAM,SAAU,uCAgBtBmzB,IAAeuB,MAAMvB,IAAc,CAEnC3uB,EAAaD,GAAY,GACzBI,GAAW,EAGX5E,IAAMC,MAAM,SAFF,+BAOd,GAAIuzB,IAAiBmB,MAAMnB,IAAgB,CAEvC/uB,EAAaD,GAAY,GACzBI,GAAW,EAGX5E,IAAMC,MAAM,SAFF,kCAKd,IAAK2E,EAAU,CAAC,IAAD,EACPgwB,EAAe,YACfC,EAAa,CACbC,OAAQnkB,EACR8S,UAAWqP,EACX7xB,YAA0B,OAAb+xB,EAAoB,GAAKA,EAASjxB,OAC/CgzB,iBAAkB7B,GAClB8B,QAAyB,OAAhB5B,IAAwC,KAAhBA,GAAqB,IAAMA,GAC5D6B,YAAa3B,GACb4B,QAA2B,OAAlB1B,IAA4C,KAAlBA,GAAuB,IAAMA,GAChE2B,YAAazB,IAIW,YAAxB,SAAAjrB,EAAMxG,aAAN,IAAc2wB,OACdgC,EAAe,WAEfC,EAAWhN,QAAUA,EAEzBpR,YAAW,WAGP8b,EAAe7zB,EAAYm2B,EAAYD,EAAcnC,EAAOhuB,EAAeD,KAC5E,OAUP4wB,GAAM,CACN,CAACj5B,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,MAIxB,OAEI,kBAACu5B,GAAA,EAAD,CAAsBC,SAA0B,QAAhBt3B,IAASC,GAAe,UAAY,SAAUzE,MAAQG,GAAOyG,YAC9E,IAAdoyB,EACC,kBAACj5B,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,WAG9C,kBAAChI,EAAA,EAAD,CAAY8Y,IAAKohB,GAAep6B,MAAQG,GAAO47B,QAE3C,kBAAC,IAAD,CAAM/7B,MAAOG,GAAO67B,aAApB,cAA2D,OAAd1C,EAAmC,KAAdA,EAAoB,kBAAC,IAAD,CAAMt5B,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MACzH,kBAACuX,GAAA,EAAD,CACQC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExCM,SAAUihB,GACVv4B,MAAOg3B,EACP/f,aAAa,UACbC,aAAc,SAAC1B,GAASyhB,EAAaD,EAAYxhB,MAE7D,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,qBACI,kBAAC9iB,GAAA,EAAD,CACIO,WAAW,EACXC,cAAe1W,GAAS,IAAM,EAAI,EAClCmW,qBAAuB,qBACvBC,YAAY,cACZpZ,MAAO,CAACG,GAAOwZ,SAAS,CAAChY,MAAOrB,EAAOgZ,YAEvChX,MAAOk3B,EACPjgB,aAAa,UACbC,aAAc,SAAC1B,GAAS2hB,EAAYD,EAAW1hB,MAEvD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,qBAEI,kBAAC,KAAD,CACQnhB,MA/CL,CACf,CAAClY,MAAO,oCAAqCL,MAAO,GACpD,CAACK,MAAO,iEAAkEL,MAAO,GACjF,CAACK,MAAO,8BAA+BL,MAAO,IA6C1B4I,UAAWyvB,GACX9e,aAAc,EACdf,aAAc4e,GACdhf,OAAQ,EAERQ,UAAW,CAACza,eAAgB,cAC5Bsa,iBAAkB,CAACpZ,MAAOrB,EAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,EAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAG0D,UAAW,EAAGO,aAAcu2B,IACnEpf,WAAW,qBACXG,OAAQ,iBAAM,CAACsf,GAAqB,EAAEC,GAAyBD,MAC/Dlf,QAAS,WAAQgf,GAA4BD,IAA2B,GAAOD,GAAoBD,GAAmB,IACtHnf,aAAc,SAAAhU,GA5JnB,IAACS,EA4J4B4xB,GAAcD,GAAapyB,EAAKhF,OA3JlE,KADMyF,EA4J+ET,EAAKhF,QA3J9E,IAAPyF,GAEXuyB,GAAcD,IAAa,GAC3BG,GAAiBD,IAAgB,KAIjCD,GAAcD,IAAa,GAC3BG,GAAiBD,IAAgB,OAsJ7B,kBAAC,IAAD,CAAMv6B,MAAOG,GAAO67B,aAApB,oBAEI,kBAACj8B,EAAA,EAAD,CAAOC,MAAK,MAAuB,YAAhBwE,IAASC,GAAkB,CAACiW,OAAQ,GAAGla,cAAe,OAAS,CAACA,cAAe,SAC9F,kBAAC0Y,GAAA,EAAD,CACQC,sBAA0C,IAAlBohB,GAA0B,YAAa,qBAC/DnhB,YAAY,WACZQ,SAAU2gB,GACVv6B,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,OAAyB,IAAlB44B,GAA0B,YAAcj6B,EAAOgZ,UAAWnQ,mBAAqC,IAAlBoxB,GAA0B,YAAc,YAEtJj4B,MAAuB,OAAhBs3B,GAAuBA,GAAY5xB,WAAa,KACvDuR,aAAa,UACbC,aAAc,SAAC1B,GAAS+hB,GAAeD,GAAc9hB,MAG7D,kBAAC,KAAD,CACQ+C,MAAO+gB,GACP/f,aAAc,EACdf,aAAcgf,GACdpf,OAAQ,EACRrP,SAAUgvB,GAEVtf,iBAAkB,CAACpZ,MAAOrB,EAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,EAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAGD,MAAO,GAAIY,UAAW,EAAEiK,WAAY,IACjEyN,WAAW,qBACXC,aAAc,SAAAhU,GAASyyB,GAAWD,GAAUxyB,EAAKhF,WAGjE,kBAAC,IAAD,CAAMtC,MAAOG,GAAO67B,aAApB,sBAEI,kBAACj8B,EAAA,EAAD,CAAOC,MAAK,MAAuB,YAAhBwE,IAASC,GAAkB,CAACiW,OAAQ,EAAEla,cAAe,OAAS,CAACA,cAAe,SAC7F,kBAAC0Y,GAAA,EAAD,CACQC,qBAAuB,qBACvBC,YAAY,aACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAyB,OAAlB03B,GAAyBA,GAAchyB,WAAa,KAC3DuR,aAAa,UACbC,aAAc,SAAC1B,GAASmiB,GAAiBD,GAAgBliB,MAGjE,kBAAC,KAAD,CACQ+C,MAAO+gB,GACP/f,aAAc,EACdf,aAAcof,GACdxf,OAAQ,EAERK,iBAAkB,CAACpZ,MAAOrB,EAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,EAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAGD,MAAO,GAAIY,UAAW,EAAEiK,WAAY,IACjEyN,WAAW,qBACXC,aAAc,SAAAhU,GAAS6yB,GAAaD,GAAY5yB,EAAKhF,WAIrE,kBAACvC,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QACpB,kBAAC,IAAD,CAAMpK,MAAO,CAAC2B,MAAO,OAAO2B,SAAU,GAAIY,aAAc,KAAxD,uIACI,kBAACxD,EAAA,EAAD,CAAkBV,MAAOG,GAAOkK,OAAQgB,SAAUL,EAAW/I,QAAS,WAA2CgJ,EAAaD,GAAY,GAAOgwB,GAAU91B,EAAW8zB,EAAWiC,EAAcC,EAAgBjC,KAC3M,kBAAC54B,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAAOG,GAAOkK,OACd4xB,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAEvBlxB,EACG,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO2I,YAE9C,kBAAC,IAAD,CAAMjJ,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAM,UAAmC,YAAxB,SAAAsN,EAAMxG,aAAN,IAAc2wB,OAAqB,WAAa,YAK7G,kBAAC14B,EAAA,EAAD,CAAkBuB,QAAS,kBAAMiD,EAAWi3B,UAAUn8B,MAAO,CAACG,GAAOkK,OAAQ,CAAClH,YAAa,UAAWD,YAAa,IAAIS,UAAW,GAAGO,aAAc,MAC/I,kBAAC,IAAD,CAAMlE,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAO,aAAvC,eAclBxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,SAGnBizB,OAAQ,CACJp4B,UAAW,GACXO,aAAc,GACdI,kBAAmB,IAEvBqF,OAAQ,CACJhI,MAAO,UACP2B,SAAU,GACVC,WAAY,OACZI,UAAW,IAEfq4B,YAAa,CACT14B,SAAUN,GAAS,IAAM,GAAK,GAC9BW,UAAWX,GAAS,IAAM,GAAK,EAC/BkB,aAAclB,GAAS,IAAM,GAAK,EAClCO,WAAY,QAEhBoW,SAAU,CACN1Z,KAAM,EACNkd,kBAAmB,MACnBra,QAAS,EACTG,aAAc,EACdC,YAAa,IACbC,YAAa,WAEjBkW,UAAW,CACPpZ,KAAM,EACN+C,OAAQ,GACRkG,kBAAmB,KAIvBkB,OAAQ,CACJrG,WAAY,SACZJ,UAAWX,GAAS,IAAM,GAAK,IAEnCqH,OAAQ,CACJtH,MAAO,OACPY,UAAWX,GAAS,IAAM,GAAK,EAC/BA,OAAQ,GACRvC,eAAgB,SAChBsD,WAAY,SACZd,aAAc,IAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,U,UCpXpB,GAAuBqB,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QACP8B,GAAUC,EAASC,OAiYVo3B,GA/XI,SAAC,GAAqC,IAAD,EAAlCl3B,EAAkC,EAAlCA,WAAW+J,EAAuB,EAAvBA,MAAMotB,EAAiB,EAAjBA,WAEjCpV,EAAc,SAAC,GAClB,IADmB3f,EACpB,EADoBA,KAAKmX,EACzB,EADyBA,MAEvB,OACE,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAACE,EAAA,EAAD,CAAmBV,MAAOG,GAAO+mB,aAAcjlB,QAAS,kBAAMq6B,EAAyBh1B,EAAKmX,KACxF,kBAAC,KAAD,CAAMze,MAAOG,GAAOinB,WAAY3lB,KAAK,SAASC,KAAM,GAAIC,MAAM,WAElE,kBAACjB,EAAA,EAAD,CAAkBV,MAAOG,GAAOknB,WAAYplB,QAAS,kBAAMs6B,EAAuBj1B,KAChF,kBAAC,KAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,iBAAiBC,KAAM,GAAIC,MAAM,WAGxE,kBAACjB,EAAA,EAAD,CAAmBV,MAAOG,GAAOq8B,WAAYv6B,QAAS,kBAAMw6B,EAAuBn1B,KAC/E,kBAAC,KAAD,CAAMtH,MAAOG,GAAOinB,WAAY3lB,KAAK,eAAeC,KAAM,GAAIC,MAAM,aAQ9E,EAA8E1C,IAAMM,WAAWP,GAA/F,kBAAQ09B,EAAR,EAAQA,eAAuBC,GAA/B,EAAwBC,OAAxB,EAA+BD,WAAWE,EAA1C,EAA0CA,WAAYtV,EAAtD,EAAsDA,UAAW7nB,EAAjE,KAEIo9B,EAAcp9B,EAAUwX,KAI5B,EAAgCjY,IAAMkG,SAAS,MAA/C,WAAK43B,EAAL,KAAgBC,EAAhB,KAEQ18B,EAAWhB,eAAXgB,QAEsB,IAA3BZ,EAAUu9B,eAGXv9B,EAAUu9B,cAAe,GAO3B,MAAgCh+B,IAAMkG,SAAS,MAA/C,WAAOwS,EAAP,KAAiBD,EAAjB,KAEA,EAA8BzY,IAAMkG,SAASwS,GAA7C,WAAKulB,EAAL,KAAeC,EAAf,KAEIC,EAA+B,OAAzB19B,EAAU29B,WAAsB,EAAI39B,EAAU29B,WACxD,EAAsCp+B,IAAMkG,SAASi4B,GAArD,WAAKE,EAAL,KAAmBC,EAAnB,KACA,EAAgCt+B,IAAMkG,UAAS,GAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KAEA3F,qBAAU,WAIRoS,GAAY,SAAAC,GAAQ,OAAI,QACxB6lB,EAAY99B,EAAU+9B,eACrB,CAAC/9B,EAAU+9B,YAAa/9B,EAAU,eAGrC,IA+BM89B,EAAc,SAAOE,GAAP,qBAAAl4B,EAAAC,OAAA,gDACbi4B,IAAcA,EAAe,eAC9BrjB,EAAS,IAFK,KAGVqjB,EAHU,OAIX,gBAJW,OAOX,gBAPW,OAUX,cAVW,OAaX,eAbW,+BAKdrjB,EAAS,IALK,mCAQdA,EAAS,IARK,mCAWdA,EAAS,IAXK,oCAcdA,EAAS,IAdK,6BAiBdA,EAAS,KAjBK,eAoBd3U,EAAMZ,GAAU,qCAAuCuV,EAAS,mBAAqB3a,EAAU8B,SAAW,eAChG,OAAX6Y,IAED3U,EAAMZ,GAAU,qCAAuCuV,EAAS,mBAAqB3a,EAAU8B,UAGpF,OACTmE,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAlCc,YAAAH,EAAA,MAqCZS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAGCA,EAAaoR,KAAQpR,EAAaoR,IAAI7K,QAGxCiwB,EAAWx2B,EAAaoR,IAAI,GAAGN,QAC/BulB,EAAer2B,EAAaoR,KAC5B8lB,EAAgBD,EAAej3B,EAAaoR,IAAI,GAAGN,QAEnDO,GAAY,SAAAC,GAAQ,OAAItR,EAAaoR,OACrC0lB,GAAY,SAAAD,GAAQ,OAAI72B,EAAaoR,QAE5BpR,EAAaoR,KAAoC,IAA5BpR,EAAaoR,IAAI7K,QAE/ClN,EAAUsX,aAAe,KACzBU,GAAY,SAAAC,GAAQ,MAAI,QAExBnR,IAAMC,MAAM,aAAcJ,EAAaK,SACvCgR,GAAY,SAAAC,GAAQ,MAAI,OAEtB3M,GAAWC,EAAaD,GAAY,MAE3C1E,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,SAClCsE,GAAWC,EAAaD,GAAY,IACjC,MAjEO,+DAqEU,KAA3B,SAAAiE,EAAMxG,aAAN,IAAck1B,YACbjmB,GAAY,SAAAC,GAAQ,OAAI,QACxB6lB,EAAY99B,EAAU+9B,aACtBxuB,EAAMxG,OAAOk1B,SAAW,MAI5B,IAAMrB,EAA2B,SAACh1B,EAAKmX,GACrCjY,IAAMC,MAAM,cAAe,6CAC3B,CAAC,CAAE2C,KAAM,MAAOnH,QAAS,kBA7GR,SAAOkV,GAAP,mBAAA3R,EAAAC,OAAA,uDACbC,EAAMZ,GAAU,kBAAqBqS,EAC5B,SACTxR,EAAU,IAAIC,QAClBqF,EAAaD,GAAY,GACzBrF,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAEtCnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,SAQTL,YAVa,WAAAH,EAAA,MAaXS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAamR,WAAanR,EAAaoR,KACvC8P,EAAU,CAACnmB,KAAM,eAAgBgnB,OAAQ1oB,EAAUsX,eACnDwmB,EAAY99B,EAAU+9B,eAEtBj3B,IAAMC,MAAM,aAAcJ,EAAaK,SACvCuE,EAAaD,GAAY,OAG9B1E,OAAM,SAACC,GAGJ,OAFAC,IAAMC,MAAM,mBAAoBF,EAAMG,SACtCuE,EAAaD,GAAY,IAClB,MA3BM,4DA6Gc4yB,CAAWt2B,EAAK6P,UAC/C,CAAE/N,KAAM,KAAMnH,QAAS,aAAUjC,MAAO,WACxC,CAAE+uB,YAAY,KAGV0N,EAAyB,SAACn1B,GAC9BpC,EAAW0D,SAAS,aAAc,CAACi1B,SAAUv2B,KAGzCi1B,EAAyB,SAACj1B,GAC9Bw1B,EAAY3lB,OAAS7P,EAAK6P,OAC1B2lB,EAAYgB,aAAex2B,EAAKw2B,aAChCP,EAAgBD,EAAeh2B,EAAK6P,QACpCjS,EAAW0D,SAAS,eAAe,CAACJ,OAAQ,UAAWC,OAAQ,CAACC,UAAW,SAiD7E,OACE,kBAAC3I,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAM,KACD,IAAfo8B,GACE,kBAACt8B,EAAA,EAAD,CAAMC,MAAOG,GAAO+uB,aAClB,kBAACnvB,EAAA,EAAD,CAAMC,MAAOG,GAAO4Y,gBAClB,kBAAC,KAAD,CAAM/Y,MAAOG,GAAOgvB,UAAW1tB,KAAK,iBAAiBC,KAAM,GAAIC,MAAM,SACrE,kBAACuX,GAAA,EAAD,CAAWlZ,MAAOG,GAAOivB,OAEvB9sB,MAAOy6B,EACP3jB,YAAY,SACZiW,sBAAsB,cACtB7V,aAAc,SAAClX,GAAD,OA1BX,SAACA,GAChB,IAAIgtB,EAAe4N,EAAS7iB,QAC1B,SAAAjZ,GACE,IAAImuB,GAAiBnuB,EAAKyO,SAAW,IAAMzO,EAAK08B,cAActO,cAE1DC,EAAsBntB,EAAMktB,cAEhC,OAAOD,EAAczvB,QAAQ2vB,IAAwB,KAGzDuN,EAAaD,EAAYz6B,GACzBoV,GAAY,SAAAC,GAAQ,OAAI2X,KAeayO,CAASz7B,QAG9C,kBAACjC,EAAA,EAAD,CACEC,OAAQ,CAACA,EAAOyG,YAAYzG,EAAO0G,YACnChH,MAASG,GAAOyG,YAGf+Q,GAAY3M,EACX,kBAACjL,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO4H,WAGhD,kBAACnI,EAAA,EAAD,CAAMC,MAASG,GAAOyG,WACD,IAApB+Q,EAAS/K,OACV,kBAAC7M,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACpD,kBAAC,IAAD,CAAM/D,MAAO,CAAC,CAACsD,SAAS,GAAI3B,MAAOA,KAAMub,aAAzC,oBAAwExd,EAAU+9B,YAAc/9B,EAAU+9B,YAAc,gBAG5H,kBAACv2B,GAAA,EAAD,CAAclH,MAAO,CAACC,KAAM,IAC1B,kBAACkH,GAAA,EAAD,CAEEC,KAAMuQ,EACNqmB,UAAWlB,EACXz1B,WAAY,gBAAGC,EAAH,EAAGA,KAAKmX,EAAR,EAAQA,MAAR,OAAoB,kBAAClX,GAAD,CAAMhG,MAAO+F,EAAKswB,MAAOqG,QAAS32B,EAAKuI,SAAUquB,OAAQ52B,EAAKiJ,OAAQ4tB,cAAe72B,EAAK6I,YAAaiuB,WAAY92B,EAAK+2B,YACxJC,IAAKh3B,EAAKi3B,OAAQn9B,KAAMkG,EAAKw2B,aAAcU,SAAUl3B,EAAK8M,WAAYqK,MAAOA,EAAOnX,KAAMA,KAC1FQ,aAAc,SAAAR,GAAI,OAAIA,EAAK6P,OAAOnP,kBAW5C,SAAST,GAAT,GAAiG,IAAjFhG,EAAgF,EAAhFA,MAAM08B,EAA0E,EAA1EA,QAAQC,EAAkE,EAAlEA,OAAOC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,WAAWE,EAAiC,EAAjCA,IAAIl9B,EAA6B,EAA7BA,KAAKo9B,EAAwB,EAAxBA,SAAS/f,EAAe,EAAfA,MAAMnX,EAAS,EAATA,KAEjFm3B,GADS19B,EAAQ,KACNK,EAAKq0B,MAAM,KAAKhK,KAAI,SAACiT,GAAD,OAAKA,EAAE,MAAIC,KAAK,KACnDP,EAAahuB,IAAOguB,GAAYpxB,OAAO,cACvCmxB,EAAgB/tB,IAAO+tB,GAAenxB,OAAO,cACzCzL,EAAMqL,QAAU,KAAIrL,EAAQA,EAAMq9B,UAAU,EAAE,IAAM,OAExD,IAAIh/B,EAAW,KAgBf,MAfgB,MAAZ6+B,IAAkB7+B,EAAW,wDAI9B09B,IAAiBh2B,EAAK6P,SAEvBzX,EAAUsX,aAAe1P,EAAK6P,OAC9B2lB,EAAY3lB,OAAS7P,EAAK6P,OAC1B2lB,EAAYgB,aAAex2B,EAAKw2B,aAChChB,EAAYjtB,SAAWvI,EAAKuI,UAO5B,kBAAC9P,EAAA,EAAD,CAAMC,MAAOG,GAAO+zB,eACpB,kBAACpE,GAAA,EAAD,CACEC,mBAAoB,kBAAM,kBAAC9I,EAAD,CAAa3f,KAAMA,EAAMmX,MAAOA,KAC1DuR,gBAAgB,GAElB,kBAACC,GAAA,EAAD,CAAoBC,cAAe,cAAevE,IAAKlN,EAAOxc,QAAS,kBAxHxD,SAACqF,GAAU,IAAD,EAC3B,GAA+B,YAA5B,SAAA2H,EAAMxG,aAAN,IAAco2B,YAA0BvB,IAAiBh2B,EAAK6P,OAG/DzX,EAAUsX,aAAe1P,EAAK6P,OAC9BlI,EAAMxG,OAAOo2B,UAAY,KACzB35B,EAAW0D,SAAS,eAAe,CAACJ,OAAQ,UAAWC,OAAQ,CAACC,UAAW,iBAExE,GAAG40B,IAAiBh2B,EAAK6P,OAK5BzX,EAAUsX,aAAe1P,EAAK6P,OAC9BjS,EAAW0D,SAAS,eAAe,CAACJ,OAAQ,UAAWC,OAAQ,CAACC,UAAW,YAGzE,CACF,IAAI4yB,EAASh0B,EAAK6P,OAClBwlB,EAAUrB,EAAQh0B,EAAKuI,UACvB0tB,EAAgBD,EAAeh2B,EAAK6P,QACpC2lB,EAAY3lB,OAAS7P,EAAK6P,OAC1B2lB,EAAYgB,aAAex2B,EAAKw2B,cAkG4CgB,CAAWx3B,KAEnF,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOgwB,KAAM,CAAChtB,YAAa7C,EAAOoC,KAAMoG,gBAAiBxI,EAAOy+B,cAE5E,kBAACh/B,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO6+B,eAAe,CAACl2B,gBAAiBw0B,IAAiBh2B,EAAK6P,OAAS7W,EAAOoC,KAAOpC,EAAOyG,eACxG,kBAAChH,EAAA,EAAD,CAAMC,MAAOG,GAAO8+B,cAClB,kBAACl/B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAc,MAAOwN,WAAY,EAAGvN,eAAgB,eAClE,kBAAC,KAAD,CAAMgB,KAAK,gBAAgBC,KAAMsB,GAAS,IAAM,GAAI,GAAIrB,MAAO27B,IAAiBh2B,EAAK6P,OAAS7W,EAAO4+B,UAAY5+B,EAAO6+B,YACxH,kBAACp/B,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOi/B,SAAS,CAACz7B,WAAY,EAAGiK,YAAY,EAAEzK,YAAcm6B,IAAiBh2B,EAAK6P,OAAS7W,EAAO6+B,UAAY7+B,EAAO4+B,UAAWp2B,gBAAiBw0B,IAAiBh2B,EAAK6P,OAAS7W,EAAO4+B,UAAW5+B,EAAO6+B,aACvN,kBAAC,IAAD,CAAMn/B,MAAO,CAACG,GAAO0wB,IAAI,CAAClvB,MAAQ27B,IAAiBh2B,EAAK6P,OAAS7W,EAAO6+B,UAAY7+B,EAAO4+B,aAAcZ,KAIzG,kBAACv+B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAc,MAAOwN,WAAY,IAC/C,kBAAC,KAAD,CAAMvM,KAAK,gBAAgBC,KAAMsB,GAAS,IAAM,GAAK,GAAIrB,MAAO27B,IAAiBh2B,EAAK6P,OAAS7W,EAAO4+B,UAAY5+B,EAAO6+B,YACzH,kBAAC,IAAD,CAAMn/B,MAAO,CAACG,GAAOisB,IAAI,CAACxe,YAAY,EAAGjM,MAAO27B,IAAiBh2B,EAAK6P,OAAS7W,EAAO4+B,UAAY5+B,EAAO6+B,aAAcjB,MAK3H,kBAACn+B,EAAA,EAAD,CAAMC,MAAOG,GAAO4I,eAClB,kBAAChJ,EAAA,EAAD,CAAMC,MAAO,CAACgD,OAAO,KACjB,kBAAC,IAAD,CAAMhD,MAAO,CAACG,GAAOk/B,QAAS,CAACvxB,YAAa,GAAInM,MAAOrB,EAAO6+B,aAAclB,GAC5E,kBAAC,IAAD,CAAMj+B,MAAO,CAACG,GAAOm/B,SAAU,CAACxxB,YAAa,GAAInM,MAAOrB,EAAOw1B,aAAc0I,IAGhFlB,IAAiBh2B,EAAK6P,QACvB,kBAACpX,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAc,QAGzBZ,EACD,kBAAC,KAAD,CACE8B,KAAMsB,GAAS,IAAM,GAAK,GAC1Bu8B,sBAAuB,CAACr8B,YAAY,EAAGC,YAAa7C,EAAOk/B,UAAW12B,gBAAiBxI,EAAOm/B,eAC9FC,SAAO,EACP39B,MAAO08B,EACP79B,OAAQ,CAAEC,IAAKjB,GAEfwb,eAAgBjb,GAAOmwB,eAGzB,kBAAC,KAAD,CACE5uB,KAAMsB,GAAS,IAAM,GAAK,GAC1Bu8B,sBAAuB,CAACr8B,YAAY,EAAGC,YAAa7C,EAAOk/B,UAAW12B,gBAAiBxI,EAAOm/B,eAC9FC,SAAO,EACP39B,MAAO08B,EACPrjB,eAAgBjb,GAAOmwB,eAIzB,kBAACvwB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,MAAO,CAACG,GAAOsB,KAAM,CAACE,MAAOrB,EAAOw1B,aAAc10B,GACxD,kBAAC,IAAD,CAAMpB,MAAO,CAACG,GAAOy3B,MAAO,CAACj2B,MAAOrB,EAAOs3B,SAAUr2B,KAGxD+7B,IAAiBh2B,EAAK6P,QACvB,kBAACpX,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAc,MAAQC,eAAgB,gBAAiBwwB,cAAc,KAC/E,kBAAClxB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,MAAO,CAACG,GAAOw/B,UAAW,CAAC7xB,YAAa,GAAInM,MAAOrB,EAAO6+B,aAAhE,kBACA,kBAAC,IAAD,CAAMn/B,MAAO,CAACG,GAAOuwB,UAAW,CAAC5iB,YAAa,GAAInM,MAAOrB,EAAOw1B,aAAcqI,IAGhF,kBAACp+B,EAAA,EAAD,CAAMC,MAAO,CAAC0D,aAAa,KACzB,kBAAC,IAAD,CAAM1D,MAAO,CAACG,GAAOw/B,UAAW,CAACh+B,MAAOrB,EAAO6+B,aAA/C,gBACA,kBAAC,IAAD,CAAMn/B,MAAO,CAACG,GAAOuwB,UAAW,CAAC/uB,MAAOrB,EAAOw1B,aAAcsI,YAc3Ej+B,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,GAERi0B,cAAe,CACb1wB,eAAgB,EAChB2tB,iBAAiB,IAGnBjC,YAAY,CACV1uB,cAAe,MACfmD,UAAW,GAEboV,eAAgB,CAEdjQ,gBAAiB,UACjB7F,aAAa,GAEbD,OAAO,GACPxC,cAAe,MACfuD,WAAW,SACX9D,KAAK,EACLoJ,OAAO,IAET+lB,OAAO,CACLpsB,OAAO,GACP4K,WAAW,GACXzE,kBAAmB,UACnBlJ,KAAK,GAEPkvB,UAAU,CACRvhB,WAAW,GACXnN,eAAgB,UAIlB0vB,KAAK,CACHqE,YAAa,YACbC,aAAc,CACZ1xB,MAAO,EACPC,OAAQ,GAEV0xB,cAAe,IACfC,aAAc,KACd5lB,UAAW,GAEX6wB,UAAW,OACX98B,QAAS,EACTtC,cAAc,MACd0wB,SAAU,OACV2O,gBAAgB,GAGlBb,eAAgB,CACdj8B,MAAO,MACPuG,oBAAqB,EACrBC,uBAAwB,EACxBlG,aAAc,cAGhB0F,cAAe,CACbhG,MAAO,MACPyG,qBAAsB,EACtBC,wBAAyB,GAG3Bw1B,aAAc,CACZz+B,cAAe,SACfC,eAAgB,UAElB4+B,QAAS,CACP/7B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZI,UAAU,EACVhC,MAAO,WAGT29B,SAAU,CACRh8B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZI,UAAU,EACVhC,MAAM,WAERF,KAAM,CACJ6B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZuK,YAAY,EACZnK,UAAU,GACVhC,MAAM,WAERi2B,MAAO,CACLt0B,SAAUN,GAAS,IAAM,GAAK,GAE9B8K,YAAY,EACZnK,UAAU,EACVhC,MAAO,WAETg+B,UAAW,CACTr8B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZuK,YAAY,EACZnK,UAAU,GACVhC,MAAO,WAET+uB,UAAW,CACTptB,SAAUN,GAAS,IAAM,GAAI,GAC7BO,WAAY,OACZuK,YAAY,EACZnM,MAAM,UACNgC,UAAW,GAGbm8B,UAAU,CACRx8B,SAAS,GACTC,WAAW,OACXuK,YAAa,EACbnM,MAAO,WAETyqB,IAAI,CACF9oB,SAAUN,GAAS,IAAM,GAAI,GAC7BO,WAAW,OACXuK,YAAa,EACbnM,MAAO,WAET2uB,aAAa,CACX3sB,UAAU,GACViK,WAAW,GACXlK,YAAY,GAEd2sB,MAAM,CACJttB,MAAM,GACNC,OAAO,GACPC,aAAa,GACbC,YAAY,GAEdgkB,aAAc,CACZpe,gBAAiB,UACjBrI,eAAgB,UAElB+7B,WAAY,CACV1zB,gBAAiB,UACjBrI,eAAgB,UAElB4mB,WAAY,CACVve,gBAAiB,UACjBrI,eAAgB,UAElB2mB,WAAY,CACVtkB,QAAS,IAEX+tB,IAAI,CACFvtB,SAAUN,GAAS,IAAM,GAAI,GAC7BO,WAAW,OACXH,UAAW,UAEbg8B,SAAU,CACRt8B,QAAQ,EACRG,aAAa,GACbkuB,iBAAiB,EACjBxtB,UAAW,EACXT,YAAY,GAEf0tB,YAAY,CACTjtB,UAAU,GACVutB,SAAS,UCziBE6O,GARa,WACxB,OACE,kBAAChgC,EAAA,EAAD,CAAMC,MAAOG,GAAOyG,WAClB,kBAAC,IAAD,gCAOFzG,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN8D,WAAY,SACZtD,eAAgB,YCNLu/B,GARS,WACpB,OACE,kBAACjgC,EAAA,EAAD,CAAMC,MAAOG,GAAOyG,WAClB,kBAAC,IAAD,4BAOFzG,GAASyC,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN8D,WAAY,SACZtD,eAAgB,YCLpB,GAAuBmE,KAAWC,IAAI,UAu8BvBo7B,IAv8Bf,GAAOl9B,MAAP,GAAaC,OAEI,SAAC,GAA0B,IAAD,IAAvBkC,EAAuB,EAAvBA,WAAW+J,EAAY,EAAZA,MAGrB3O,EAAWhB,eAAXgB,OACN,EAAsCrB,IAAMM,WAAWP,GAAvD,WAAQkhC,EAAR,KAAQA,gBAAiBxgC,EAAzB,KAGIygC,EAAczgC,EAAUuM,UACxBm0B,EAAe1gC,EAAUsX,aACzBqpB,EAAS,SAAGpxB,EAAMxG,aAAT,EAAG,EAAc2wB,MAC1BkH,EAAY,SAAGrxB,EAAMxG,aAAT,EAAG,EAAcomB,WAC7B0R,GAAc,IAAInpB,MAAOopB,cAE7B,EAAgCvhC,IAAMkG,UAAS,GAA/C,WAAKs7B,EAAL,KAAgBC,EAAhB,KACA,EAA8BzhC,IAAMkG,UAAS,GAA7C,WAAKw7B,EAAL,KAAeC,EAAf,KACA,EAAsC3hC,IAAMkG,UAAS,GAArD,WAAK07B,EAAL,KAAmBC,EAAnB,KACA,EAAgC7hC,IAAMkG,UAAS,GAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KAKA,EAAwBhM,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAatU,eAAzF,WAAK+U,EAAL,KACA,GADA,KACwB9hC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAa7V,YAAzF,WAAKuW,EAAL,KAAYC,EAAZ,KACA,EAAwBhiC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAa/T,UAAzF,WAAK2U,EAAL,KAAYC,EAAZ,KACA,EAAoBliC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa5V,KAAtF,YAAK2B,GAAL,MAAU+U,GAAV,MACA,GAA8BniC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,EAAgC,IAA3BC,EAAarV,UAAkB,EAAI,GAArH,aAAKoW,GAAL,MAAeC,GAAf,MACA,GAAwBriC,IAAMkG,SAAuB,kBAAdk7B,GAA8D,IAAzBC,EAAa7T,QAAlB,EAAsC,GAA7G,aAAK8U,GAAL,MAAYC,GAAZ,MACA,GAAkCviC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa3T,YAApG,aAAK8U,GAAL,MAAiBC,GAAjB,MACA,GAAgCziC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAarU,aAAjG,aAAK0V,GAAL,MAAgBC,GAAhB,MACA,GAA8B3iC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAapU,YAA/F,aAAK2V,GAAL,MAAeC,GAAf,MACA,GAAgC7iC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,OAAUC,EAAanU,UAAamU,EAAanU,UAAUnkB,WAAa,KAAvJ,aAAK+5B,GAAL,MAAgBC,GAAhB,MACA,GAAoC/iC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAOC,EAAaxT,YAAewT,EAAaxT,YAAY9kB,WAAa,KAA5J,aAAKi6B,GAAL,MAAkBC,GAAlB,MACA,GAA0CjjC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAOC,EAAapS,aAAgBoS,EAAapS,aAAalmB,WAAa,KAApK,aAAKm6B,GAAL,MAAqBC,GAArB,MACA,GAAkCnjC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAahW,WAAWtiB,YAA9G,aAAKq6B,GAAL,MAAiBC,GAAjB,MACA,GAA4BrjC,IAAMkG,SAAuB,kBAAdk7B,GAAiE,IAA5BC,EAAalT,WAAlB,EAAyC,GAApH,aAAKmV,GAAL,MAAcC,GAAd,MACA,GAAgCvjC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa1U,WAAlG,aAAK6W,GAAL,MAAgBC,GAAhB,MACA,GAA8BzjC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAaxS,iBAA/F,aAAK6U,GAAL,MAAeC,GAAf,MACA,GAA0C3jC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAapT,WAA5G,aAAK2V,GAAL,MAAqBC,GAArB,MACA,GAA8C7jC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAahT,WAA/G,aAAKyV,GAAL,MAAuBC,GAAvB,MACA,GAAgD/jC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa9S,QAAlH,aAAKyV,GAAL,MAAwBC,GAAxB,MACA,GAAkDjkC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAa1S,WAAnH,aAAKuV,GAAL,MAAyBC,GAAzB,MACA,GAAoDnkC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa5S,QAAtH,aAAK2V,GAAL,MAA0BC,GAA1B,MACA,GAA0DrkC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAa9R,cAA3H,aAAK+U,GAAL,MAA6BC,GAA7B,MACA,GAA4DvkC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa/R,WAA9H,aAAKkV,GAAL,MAA8BC,GAA9B,MACA,GAA0DzkC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAa5R,WAA3H,aAAKiV,GAAL,MAA6BC,GAA7B,MACA,GAA4D3kC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,IAAMC,EAAa7R,QAA9H,aAAKoV,GAAL,MAA8BC,GAA9B,MACA,GAAgC7kC,IAAMkG,SAAuB,kBAAdk7B,IAAqE,IAA7BC,EAAatT,YAArB,KAAmF,IAA5BsT,EAAalS,WAAoB,IAAM,KAA7K,aAAK2V,GAAL,MAAgBC,GAAhB,MACA,GAAwC/kC,IAAMkG,SAAuB,kBAAdk7B,GAAwCC,EAAatS,2BAA5G,aAAKiW,GAAL,MAAoBC,GAApB,MACA,GAA8CjlC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAMC,EAAanS,iBAAoBmS,EAAanS,iBAAiBnmB,WAAa,IAA/K,aAAKmmB,GAAL,MAAuBgW,GAAvB,MACA,GAAoBllC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,EAAIC,EAAalU,KAApF,aAAKA,GAAL,MACA,IADA,MACkCntB,IAAMkG,SAAuB,kBAAdk7B,EAAgC,EAAIC,EAAalS,aAAlG,aACA,IADA,YAC4BnvB,IAAMkG,SAAuB,kBAAdk7B,EAAgC,GAAKC,EAAajS,UAA7F,aAAKA,GAAL,MACA,IADA,MAC0BpvB,IAAMkG,SAAuB,kBAAdk7B,EAAgC,EAAIC,EAAa/vB,SAA1F,aAAKA,GAAL,MACA,IADA,MAC4CtR,IAAMkG,SAAuB,kBAAdk7B,GAAuE,OAAjCC,EAAahS,gBAAnB,GAAmDgS,EAAahS,kBAA3J,aAAK8V,GAAL,MAAsBC,GAAtB,MACA,GAAgDplC,IAAMkG,SAAuB,kBAAdk7B,EAAgC,OAASE,EAAcnwB,IAAOkwB,EAAa3R,mBAAmB3hB,OAAO,eAApK,aAAK2hB,GAAL,MAAwB2V,GAAxB,MAIMC,GAAqBtlC,IAAM0M,SACjC,GAA8C1M,IAAMkG,SAAS,GAA7D,aAAKq/B,GAAL,MAAuBC,GAAvB,MACA,GAA4CxlC,IAAMkG,SAAS,GAA3D,aAAKu/B,GAAL,MAAsBC,GAAtB,MAEA,GAAkD1lC,IAAMkG,UAAS,GAAjE,aAAKy/B,GAAL,MAAyBC,GAAzB,MACA,GAAgD5lC,IAAMkG,UAAS,GAA/D,aAAK2/B,GAAL,MAAwBC,GAAxB,MAEIC,GAAqB,KA6BnBC,GAA2B,SAACD,GACN,IAAvBA,GAEDP,GAAoBD,GAAmB,KACvCK,GAAsBD,IAAqB,GAE3CD,GAAmBD,GAAkB,GACrCK,GAAqBD,IAAoB,IAEZ,IAAvBE,IAENP,GAAoBD,GAAmB,GACvCK,GAAsBD,IAAqB,GAE3CD,GAAmBD,GAAkB,KACrCK,GAAqBD,IAAoB,KAOvCI,GAAgB,SAAChgC,EAAWi7B,GAC9B,IAAIgF,GAAiB,EAoHrB,GAjHc,OAAVnE,EAA2B,KAAVA,IAEjB/1B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,gCAIZ,OAAVy6B,EAA2B,KAAVA,IAEjBj2B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,+BAIR,OAAdk7B,GAAmC,KAAdA,KAErB12B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,mCAIT,OAAbo7B,GAAiC,KAAbA,KAEpB52B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,kCAIP,OAAf47B,GAAqC,KAAfA,KAEtBp3B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,kCAKvB00B,MAAMkH,MAELp3B,EAAaD,GAAY,GACzBxE,IAAMC,MAAM,cAAe,wCAC3B0+B,GAAiB,GAGG,OAApBf,IAAgD,KAApBA,KAA2BjJ,MAAMiJ,MAE7Dn5B,EAAaD,GAAY,GACzBxE,IAAMC,MAAM,cAAe,6CAC3B0+B,GAAiB,GAGD,OAAhBlD,GAAuC,KAAhBA,KAEvBh3B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,kCAGH,OAAnB07B,GAA6C,KAAnBA,KAE1Bl3B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,qCAKrB,mBAAmB2+B,KAAKjD,MAEzBl3B,EAAaD,GAAY,GACxBxE,IAAMC,MAAM,cAAe,2CAC3B0+B,GAAiB,GAII,OAArBhX,GAAsC,IAAVoT,GAAqC,KAArBpT,GAAoC,IAAVoT,KAEvEt2B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,uCAGJ,MAAnBo8B,KAA4BF,GAAW,GAAKA,GAAW,OACtD13B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,0DAED,MAAtBw8B,KAA+BF,GAAmB,GAAKA,GAAmB,OACzE93B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,8DAEC,MAAxB48B,KAAiCF,GAAqB,GAAKA,GAAqB,OAC/El4B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,gEAEK,MAA5Bg9B,KAAqCF,GAAyB,GAAKA,GAAyB,OAC3Ft4B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,oEAEK,MAA5Bo9B,KAAqCF,GAAyB,GAAKA,GAAyB,OAC3F14B,EAAaD,GAAY,GACzBm6B,GAAiB,EACjB3+B,IAAMC,MAAM,SAAU,sEAIrB0+B,EAAgB,CAAC,IAAD,EACbE,EAAc,iBACU,mBAAxB,SAAAp2B,EAAMxG,aAAN,IAAc2wB,SAA2BiM,EAAc,iBAE3D,IAAIC,EAAY,CACZhK,OAAQ8E,EACRmF,UAAWvE,EAAMz4B,OACjBuiB,SAAUoW,EAAM34B,OAChB0iB,UAAyB,IAAboW,GAAiB,EAAI,EACjC3W,IAAK2B,GACLI,QAAoB,IAAV8U,GAAc,EAAI,EAC5B5U,WAAY8U,GACZvX,YAAayX,GACbvX,WAAYyX,GACZjX,UAAWmX,GAEXjV,YAAamV,GACblX,aAAcoX,GACd7X,WAAY+X,GACZ3e,QAAsB,IAAZ6e,GAAgB,EAAI,EAK9BtY,UAAWwY,GACX+C,sBAAuB7C,GACvB8C,qBAAsB5C,GACtB6C,gBAAiB3C,GACjB4C,eAAgB1C,GAChB2C,gBAAiBzC,GACjB0C,eAAgBxC,GAChByC,mBAAoBvC,GACpBwC,kBAAmBtC,GACnBuC,gBAAiBrC,GACjBsC,eAAgBpC,GAEhBqC,0BAA2BjC,GAC3BkC,YAAa7tB,SAASyrB,GAAW,KAAO,EACxC/Y,iBAAuC,KAArBmD,GAA0B,EAAIA,GAChDiY,IAAKha,GACLia,WAAa/tB,SAASyrB,GAAW,KAAO,GAAmB,MAAdA,GAAqB,EAAI,EACtEuC,QAASjY,GACT7d,OAAQD,GACRg2B,kBAAmB5X,GACnBL,gBAAiB8V,IAGD,mBAAhBiB,IAAkCC,EAAUkB,cAAgBzF,GAChEb,EAAgBh7B,EAAWogC,EAAUD,EAAYlF,EAAYl1B,EAAaD,KAyC9Ey7B,GAAS,CACT,CACI1+B,GAAI,EACJpF,MAAO,OAEX,CACIoF,GAAI,EAEJpF,MAAO,OA2BX+jC,GAAQ,CACR,CACI3+B,GAAI,IACJpF,MAAO,KAEX,CACIoF,GAAI,IACJpF,MAAO,MAIf,OAEI,kBAAC5C,EAAA,EAAD,CAAMC,MAAQG,GAAOyG,WACjB,kBAAC1G,EAAA,EAAD,CAAY8Y,IAAKurB,GAAoBvkC,MAAQG,GAAO47B,QAEhD,kBAAC,IAAD,CAAM/7B,MAAOG,GAAOwJ,QAApB,gBAGA,kBAAC5J,EAAA,EAAD,CAAMC,MAAOG,GAAOwmC,YAChB,kBAAC,IAAD,CAAM3mC,MAAOG,GAAO67B,aAApB,cAAuD,OAAVgF,EAA2B,KAAVA,EAAgB,kBAAC,IAAD,CAAMhhC,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MAEjH,kBAACuX,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,aACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO0+B,EACPznB,aAAa,UACbC,aAAc,SAAC1B,GAASmpB,EAASD,EAAQlpB,MAGjD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,cAAuD,OAAVkF,EAA2B,KAAVA,EAAgB,kBAAC,IAAD,CAAMlhC,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MAEjH,kBAACuX,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,YACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO4+B,EACP3nB,aAAa,UACbC,aAAc,SAAC1B,GAASqpB,EAASD,EAAQppB,MAGjD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,OACI,kBAAC5f,GAAA,EAAD,CACIhV,KA7Fd,CACN,CACIW,GAAI,IAEJpF,MAAO,QAEX,CACIoF,GAAI,IAEJpF,MAAO,WAqFS0Z,cAAe,EACfC,QAAiB,MAAR+P,GAAc,EAAI,EAC3B9P,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOykB,GAAO/U,GAAM1P,EAAE5U,KACnC6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAcnB,kBAAC,IAAD,CAAM/c,MAAOG,GAAO67B,aAApB,cAEI,kBAAC5f,GAAA,EAAD,CACIhV,KAAMq/B,GACNpqB,cAAe,EACfC,QAAS+kB,GACT9kB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO2kB,GAAYD,GAAW1kB,EAAE5U,KAC7C6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAenB,kBAAC,IAAD,CAAM/c,MAAOG,GAAO67B,aAApB,UACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAS,CAAEQ,cAAe,QAC5B,kBAAC4b,GAAA,EAAD,CACIhV,KAAMq/B,GACNpqB,cAAe,EACfC,QAASilB,GACThlB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO6kB,GAASD,GAAQ5kB,EAAE5U,KACvC6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAER,IAAVwkB,IACG,kBAACroB,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,UACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO6rB,GACP5U,aAAa,UACbC,aAAc,SAAC1B,GAASqsB,GAAoBhW,GAAmBrW,OAgB3E,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,eACI,kBAAC,KAAD,CACInhB,MAAO,CACH,CAAClY,MAAO,MAAOL,MAAO,KACtB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,KACpB,CAACK,MAAO,IAAKL,MAAO,MAExB4I,UAAW05B,GACX/oB,aAAc,EACdf,aAAc2mB,GACd/mB,OAAQ,EAERK,iBAAkB,CAACpZ,MAAOrB,EAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,EAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBgY,UAAW,CAACza,eAAgB,cAC5B0a,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAG0D,UAAW,EAAGO,aAAcsgC,IACnEnpB,WAAW,qBACXG,OAAQ,iBAAM,CAACwpB,GAAqB,EAAEC,GAAyBD,IAAoBT,GAAmB9oB,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,MACjJC,QAAS,WAAQipB,GAAsBD,IAAqB,GAAOH,GAAoBD,GAAmB,IAC1GlpB,aAAc,SAAAhU,GAASo6B,GAAcD,GAAan6B,EAAKhF,UAG/D,kBAAC,IAAD,CAAMtC,MAAOG,GAAO67B,aAApB,iBAA8D,OAAd2F,GAAmC,KAAdA,GAAoB,kBAAC,IAAD,CAAM3hC,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MAChI,kBAAC5B,EAAA,EAAD,CAAMC,MAAS,CAAEQ,cAAe,QAC5B,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,gBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOq/B,GACPpoB,aAAa,UACbK,UAAU,EACVJ,aAAc,SAAC1B,GAAS8pB,GAAaD,GAAY7pB,MAErD,kBAACpX,EAAA,EAAD,CAAkBuB,QAAS,kBAAMy+B,EAAaD,GAAaA,KACvD,kBAAC5mB,GAAA,EAAD,CAAS7Z,MAAO,CAAE4N,WAAY,GAC1BnM,KAAK,WACLE,MAAM,OACND,KAAM,OAIb++B,GACG,kBAAC,KAAD,CACAv1B,UAAWu1B,EACX3mB,KAAK,OACLvC,KAAOoqB,GAAa,IAAIvqB,KAAKuqB,IAAY,IAAIvqB,KAC7C2C,UAAW,SAACjC,GAAD,OAhRH,SAAC8uB,GAC7B,IAAIC,EAAmBD,EACvBC,EAAmBz2B,IAAOy2B,GAAkB75B,OAAO,cAEnD0zB,EAAaD,GAAaA,GAC1BmB,GAAaD,GAAYkF,GA2QeC,CAAyBhvB,IAC7C2C,SAAU,kBAAMimB,EAAaD,GAAaA,MAGlD,kBAAC,IAAD,CAAMzgC,MAAOG,GAAO67B,aAApB,gBAA4D,OAAb6F,GAAiC,KAAbA,GAAmB,kBAAC,IAAD,CAAM7hC,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MAC7H,kBAAC5B,EAAA,EAAD,CAAMC,MAAS,CAAEQ,cAAe,QACxB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,eACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOu/B,GACPtoB,aAAa,UACbK,UAAU,EACVJ,aAAc,SAAC1B,GAASgqB,GAAYD,GAAW/pB,MAEtD,kBAACpX,EAAA,EAAD,CAAkBuB,QAAS,kBAAM2+B,EAAYD,GAAYA,KACtD,kBAAC9mB,GAAA,EAAD,CAAS7Z,MAAO,CAAE4N,WAAY,GAC9BnM,KAAK,WACLE,MAAM,OACND,KAAM,OAITi/B,GACG,kBAAC,KAAD,CACAz1B,UAAWy1B,EACX7mB,KAAK,OACLvC,KAAOsqB,GAAY,IAAIzqB,KAAKyqB,IAAW,IAAIzqB,KAC3C2C,UAAW,SAACjC,GAAD,OAtSJ,SAACivB,GAC5B,IAAIC,EAAkBD,EACtBC,EAAkB52B,IAAO42B,GAAiBh6B,OAAO,cAEjD4zB,EAAYD,GAAYA,GACxBmB,GAAYD,GAAWmF,GAiSiBC,CAAwBnvB,IAC5C2C,SAAU,kBAAMmmB,EAAYD,GAAYA,MAGhD,kBAAC,IAAD,CAAM3gC,MAAOG,GAAO67B,aAApB,gBACI,kBAAC9iB,GAAA,EAAD,CACIC,qBAAuB,qBAEvBnZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOy/B,GACPxoB,aAAa,UACbC,aAAc,SAAC1B,GAASkqB,GAAaD,GAAYjqB,MAEzD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,gBACI,kBAAC9iB,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,UACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO2/B,GACP1oB,aAAa,UACbC,aAAc,SAAC1B,GAASoqB,GAAeD,GAAcnqB,MAE7D,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,mBACI,kBAAC9iB,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,eACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO6/B,GACP5oB,aAAa,UACbC,aAAc,SAAC1B,GAASsqB,GAAkBD,GAAiBrqB,MAEnE,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,gBAA8D,OAAfqG,GAAqC,KAAfA,GAAqB,kBAAC,IAAD,CAAMriC,MAAO,CAAC2B,MAAM,QAApB,KAAuC,MAC7H,kBAACuX,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,WACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO+/B,GACP9oB,aAAa,UACbC,aAAc,SAAC1B,GAASwqB,GAAcD,GAAavqB,MAE3D,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,YAEI,kBAAC5f,GAAA,EAAD,CACIhV,KA7SJ,CAChB,CACIW,GAAI,EACJpF,MAAO,OAEX,CACIoF,GAAI,EACJpF,MAAO,OAuSS0Z,cAAe,EACfC,QAASimB,GACThmB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO6lB,GAAWD,GAAU5lB,EAAE5U,KAC3C6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAanB,kBAAC,IAAD,CAAM/c,MAAOG,GAAO67B,aAApB,cACI,kBAAC,KAAD,CACInhB,MAAOnb,EAAUwnC,mBACjBh8B,UAAW45B,GACXjpB,aAAc,EACdf,aArlBD,SAACqsB,GAGpB,IAFA,IAAIC,EAAM1nC,EAAUwnC,mBAEXG,EAAI,EAAGA,EAAID,EAAIx6B,OAAQy6B,IAE5B,GAAGD,EAAIC,GAAG/kC,OAAS6kC,EAGf,OADA1E,GAAY2E,EAAIC,GAAG/kC,MACZ6kC,EAGf,OAAGC,EAAIx6B,OAAS,GACZ61B,GAAY2E,EAAI,GAAG9kC,MACZ8kC,EAAI,GAAG9kC,QAUlBmgC,GAAY2E,EAAI,GAAG9kC,MACZ8kC,EAAI,GAAG9kC,OA6jBoBglC,CAAe7E,IAC7B/nB,OAAQ,EACRQ,UAAW,CAACza,eAAgB,cAE5Bsa,iBAAkB,CAACpZ,MAAOrB,EAAOgZ,WACjC0B,iBAAkB,CAACrZ,MAAO,SAC1BsZ,WAAY,CAACtZ,MAAOrB,EAAOgZ,WAC3BtZ,MAAO,CAACkD,YAAa,GACrBiY,cAAe,CAACrS,gBAAiB,UAAU5F,YAAa,GACxDkY,eAAgB,CAAEpY,OAAQ,GAAI/C,KAAM,EAAG0D,UAAW,EAAGO,aAAcwgC,IACnErpB,WAAW,qBACXG,OAAQ,iBAAM,CAACwpB,GAAqB,EAAEC,GAAyBD,IAAoBT,GAAmB9oB,QAAQC,SAAS,CAAEhD,EAAG,EAAGC,EAAG,IAAKgD,UAAU,MACjJC,QAAS,WAAQmpB,GAAqBD,IAAoB,GAAOH,GAAmBD,GAAkB,IACtGppB,aAAc,SAAAhU,GAASo7B,GAAaD,GAAYn7B,EAAKhF,WAIjE,kBAAC,IAAD,CAAMtC,MAAOG,GAAOwJ,QAApB,aAEA,kBAAC5J,EAAA,EAAD,CAAMC,MAAOG,GAAOwmC,YAChB,kBAAC,IAAD,CAAM3mC,MAAOG,GAAO67B,aAApB,YACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,WACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOqgC,GACPppB,aAAa,UACbC,aAAc,SAAC1B,GAAS8qB,GAAYD,GAAW7qB,MAElD,kBAACsE,GAAA,EAAD,CACGhV,KAAMs/B,GACNrqB,cAAe,EACfC,QAA4B,MAAnBumB,GAAyB,EAAI,EACtCtmB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOmmB,GAAkBD,GAAiBlmB,EAAE5U,KACzD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAcC,MAAnB8lB,KAA4BF,GAAW,GAAKA,GAAW,MACpD,kBAAC,IAAD,CAAM3iC,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,gDAER,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,gBACK,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC1B,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,UACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOygC,GACPxpB,aAAa,UACbC,aAAc,SAAC1B,GAASkrB,GAAoBD,GAAmBjrB,MAElE,kBAACsE,GAAA,EAAD,CACGhV,KAAMs/B,GACNrqB,cAAe,EACfC,QAA+B,MAAtB2mB,GAA4B,EAAI,EACzC1mB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOumB,GAAqBD,GAAoBtmB,EAAE5U,KAC/D6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAcI,MAAtBkmB,KAA+BF,GAAmB,GAAKA,GAAmB,MACvE,kBAAC,IAAD,CAAM/iC,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,gDAER,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,kBACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,SACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO6gC,GACP5pB,aAAa,UACbC,aAAc,SAAC1B,GAASsrB,GAAsBD,GAAqBrrB,MAEvE,kBAACsE,GAAA,EAAD,CACIhV,KAAMs/B,GACNrqB,cAAe,EACfC,QAAiC,MAAxB+mB,GAA8B,EAAI,EAC3C9mB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO2mB,GAAuBD,GAAsB1mB,EAAE5U,KACnE6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAGM,MAAxBsmB,KAAiCF,GAAqB,GAAKA,GAAqB,MAC7E,kBAAC,IAAD,CAAMnjC,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,gDAER,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,sBACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,qBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOihC,GACPhqB,aAAa,UACbC,aAAc,SAAC1B,GAAS0rB,GAA0BD,GAAyBzrB,MAE/E,kBAACsE,GAAA,EAAD,CACIhV,KAAMs/B,GACNrqB,cAAe,EACfC,QAAqC,MAA5BmnB,GAAkC,EAAI,EAC/ClnB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAO+mB,GAA2BD,GAA0B9mB,EAAE5U,KAC3E6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAGU,MAA5B0mB,KAAqCF,GAAyB,GAAKA,GAAyB,MACzF,kBAAC,IAAD,CAAMvjC,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,gDAER,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,uBACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,sBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOqhC,GACPpqB,aAAa,UACbC,aAAc,SAAC1B,GAAS8rB,GAA0BD,GAAyB7rB,MAE/E,kBAACsE,GAAA,EAAD,CACIhV,KAAMs/B,GACNrqB,cAAe,EACfC,QAAqC,MAA5BunB,GAAkC,EAAI,EAC/CtnB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOmnB,GAA2BD,GAA0BlnB,EAAE5U,KAC3E6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAGU,MAA5B8mB,KAAqCF,GAAyB,GAAKA,GAAyB,MACzF,kBAAC,IAAD,CAAM3jC,MAAO,CAAC2B,MAAO,MAAOiM,WAAY,IAAKlK,YAAa,IAAKC,UAAW,EAAGO,aAAc,GAAIZ,SAAU,KAAzG,gDAER,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,YACI,kBAACj8B,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QACzB,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,oBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO8hC,GAAgBp8B,WACvBuR,aAAa,UACbC,aAAc,SAAC1B,GAASusB,GAAmBD,GAAkBtsB,MAEjE,kBAAC,IAAD,CAAM9X,MAAO,CAAC4N,WAAY,IAAKlK,YAAa,IAAKJ,SAAU,KAA3D,MAGR,kBAAC,IAAD,CAAMtD,MAAOG,GAAO67B,aAApB,iBACI,kBAAC5f,GAAA,EAAD,CACIhV,KAjhBd,CACN,CACIW,GAAI,KACJpF,MAAO,OAEX,CACIoF,GAAI,IACJpF,MAAO,OAEX,CACIoF,GAAI,IACJpF,MAAO,OAugBS0Z,cAAe,EACfC,QAAuB,OAAdynB,GAAqB,EAAmB,MAAdA,GAAoB,EAAI,EAC3DxnB,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAD,OAAOqnB,GAAaD,GAAYpnB,EAAE5U,KAC/C6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,YAanB,kBAAC,IAAD,CAAM/c,MAAOG,GAAO67B,aAApB,yBAEI,kBAACj8B,EAAA,EAAD,CAAMC,MAAS,CAAEQ,cAAe,QAC5B,kBAAC0Y,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,gBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAOqsB,GACPpV,aAAa,UACbK,UAAU,EACVJ,aAAc,SAAC1B,GAASwsB,GAAqB3V,GAAoB7W,MAErE,kBAACpX,EAAA,EAAD,CAAkB2K,UAA4B,IAAlB44B,GAAuChiC,QAAS,kBAAM6+B,EAAgBD,GAAgBA,KAC9G,kBAAChnB,GAAA,EAAD,CAAS7Z,MAAO,CAAE4N,WAAY,GAC1BnM,KAAK,WACLE,MAAM,OACND,KAAM,OAKjBm/B,GACG,kBAAC,KAAD,CACI31B,UAAW21B,EACX/mB,KAAK,OACLvC,KAAOoX,GAAqB,IAAIvX,KAAKuX,IAAqB,IAAIvX,KAC9D2C,UAAW,SAACjC,GAAD,OA/mBH,SAACyvB,GACjC,IAAIC,EAAsBD,EAC1BC,EAAsBp3B,IAAOo3B,GAAqBx6B,OAAO,cAEzD8zB,EAAgBD,GAAgBA,GAChCyD,GAAqB3V,GAAoB6Y,GA0mBGC,CAA4B3vB,IAChD2C,SAAU,kBAAMqmB,EAAgBD,GAAgBA,MAG5D,kBAAC9gC,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,MAAOmD,UAAW,IAC3C,kBAAC,KAAD,CACI3D,MAAO,CAAC+N,aAAc,GACtB+N,qBAAwB,UACxBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWioB,GAAehoB,QAAW,kBAAKioB,GAAiBD,IAAiBA,OAChF,kBAAC,IAAD,CAAMjkC,MAAS,CAAC2B,MAAOrB,EAAOgZ,UAAUtL,WAAY,MAApD,iCAIR,kBAACjO,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QAChB,kBAAC1J,EAAA,EAAD,CAAkBV,MAAOG,GAAOkK,OAAQgB,SAAUL,EAAW/I,QAAS,WAAQgJ,EAAaD,GAAY,GAAOk6B,GAAchgC,EAAWi7B,KACnI,kBAAC9/B,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAAOG,GAAOkK,OACd4xB,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAEtBlxB,EACE,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO2I,YAE9C,kBAAC,IAAD,CAAMjJ,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAM,UAAyB,kBAAd0+B,EAAgC,WAAa,YAK1G,kBAAC3/B,EAAA,EAAD,CAAkBuB,QAAS,kBAAMiD,EAAWi3B,UAAUn8B,MAAO,CAACG,GAAOkK,OAAQ,CAAClH,YAAa,UAAWD,YAAa,IAAIS,UAAW,GAAGO,aAAc,MAC/I,kBAAC,IAAD,CAAMlE,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAO,aAAvC,gBAalBxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,EAEN6I,gBAAiB,SAInBizB,OAAQ,CACJp4B,UAAW,GACXO,aAAc,GACdI,kBAAmB,IAEvBqF,OAAQ,CACJhI,MAAO,UACP2B,SAAU,GACVC,WAAY,OACZI,UAAW,IAEfq4B,YAAa,CACTr4B,UAAW,GACXO,aAAc,GAElBmV,UAAW,CACPpZ,KAAM,EACNiJ,kBAAmB,IACnBC,kBAAmB,WAGvBw9B,WAAY,CACR/4B,WAAY,IAEhBxD,OAAQ,CACJrG,WAAY,SACZJ,UAAW,IAGf0G,OAAQ,CACJtH,MAAO,OACPC,OAAQ,GACRvC,eAAgB,SAChBsD,WAAY,SACZd,aAAc,IAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,UCr6BLmkC,GAxFE,SAAC,GAAwB,IAAD,EAAtBxiC,EAAsB,EAAtBA,WAAW+J,EAAW,EAAXA,MAC1B,EAAsChQ,IAAMM,WAAWP,GAAvD,WAEQsB,GAFR,KAAQy4B,eAAR,KAEmBz5B,eAAXgB,QACJqnC,EAAI,SAAG14B,EAAMxG,aAAT,EAAG,EAAco1B,SAWzB,OACE,kBAAC99B,EAAA,EAAD,CAAMC,MAAOG,GAAOyG,WAClB,kBAAC1G,EAAA,EAAD,CAAYF,MAAOG,GAAO47B,QACtB,kBAAC,IAAD,CAAM/7B,MAAOG,GAAOynC,WAApB,iBACA,kBAAC7nC,EAAA,EAAD,CAAMC,MAAOG,GAAO0nC,sBAChB,kBAAC,IAAD,CAAMC,cAAc,OAAOpuB,cAAe,EAAG1Z,MAAOG,GAAO67B,aAA3D,eAAoF,kBAAC,IAAD,CAAMh8B,MAAOG,GAAO4nC,UAAWJ,EAAK93B,WAExH,kBAAC,IAAD,CAAMi4B,cAAc,OAAOpuB,cAAe,EAAG1Z,MAAOG,GAAO67B,aAA3D,qBAA0F,kBAAC,IAAD,CAAMh8B,MAAOG,GAAO4nC,UAApB,qCAC1F,kBAAC,IAAD,CAAMD,cAAc,OAAOpuB,cAAe,EAAG1Z,MAAOG,GAAO67B,aAA3D,aAAkF,kBAAC,IAAD,CAAMh8B,MAAOG,GAAO4nC,UAAWJ,EAAK/P,QACtH,kBAAC,IAAD,CAAM53B,MAAOG,GAAO67B,aAApB,yBACI,kBAAC5f,GAAA,EAAD,CACIhV,KArBP,CACT,CACEW,GAAI,EACJpF,MAAO,OAER,CACCoF,GAAI,EACJpF,MAAO,OAeO0Z,cAAe,EACfC,QAAS,EACTC,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,KACdC,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAGvB,kBAAC,IAAD,CAAM/c,MAAOG,GAAOynC,WAApB,YACA,kBAAC7nC,EAAA,EAAD,CAAMC,MAAOG,GAAO0nC,sBAChB,kBAAC,IAAD,CAAM7nC,MAAOG,GAAO67B,aAApB,aACA,kBAAC9iB,GAAA,EAAD,CACIC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO,KACPiX,aAAa,UACbC,aAAc,SAAC1B,OAEnB,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,oBACA,kBAAC9iB,GAAA,EAAD,CACIO,WAAW,EACXC,cAAe,EACfP,qBAAuB,qBACvBC,YAAY,cACZpZ,MAAO,CAACG,GAAOwZ,SAAS,CAAChY,MAAOrB,EAAOgZ,YAEvChX,MAAO,KACPiX,aAAa,UACbC,aAAc,SAAC1B,OAEnB,kBAAC,IAAD,CAAMgwB,cAAc,OAAOpuB,cAAe,EAAG1Z,MAAOG,GAAO67B,aAA3D,YAAiF,kBAAC,IAAD,CAAMh8B,MAAOG,GAAO4nC,UAAWJ,EAAK/P,SAGzH,kBAAC73B,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QAChB,kBAAC1J,EAAA,EAAD,CAAkBV,MAAO,CAACG,GAAOkK,OAAO,CAAC3G,YAAa,IAAKQ,aAAc,KAAMjC,QAAS,cACpF,kBAAC5B,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAAOG,GAAOkK,OACd4xB,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAExB,kBAAC,IAAD,CAAMl8B,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAM,UAAtC,UAIR,kBAACjB,EAAA,EAAD,CAAkBuB,QAAS,kBAAMiD,EAAWi3B,UAAUn8B,MAAO,CAACG,GAAOkK,OAAQ,CAAClH,YAAa,UAAWD,YAAa,IAAI0K,WAAY,OAC/H,kBAAC,IAAD,CAAM5N,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAO,aAAvC,eAUdxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACP3G,KAAM,EACN6I,gBAAiB,SAIrBizB,OAAQ,CACJp4B,UAAW,EACXO,aAAc,GAGlB0jC,UAAW,CACP9kC,QAAS,IACTwB,kBAAmB,GACnB3C,MAAO,OACP2B,SAAU,GACVC,WAAY,OACZI,UAAW,GACXmF,gBAAiB,aAErB++B,qBAAsB,CAClBvjC,kBAAmB,IAEvBqV,SAAU,CACN1Z,KAAM,EACNkd,kBAAmB,MACnBra,QAAS,EACTG,aAAc,EACdC,YAAa,IACbC,YAAa,WAGjB64B,YAAa,CAETr4B,UAAW,EACXO,aAAc,EACdX,WAAY,OACZD,SAAU,IAEdykC,SAAU,CAENpkC,UAAW,EACXiK,WAAY,EACZ1J,aAAc,EACdX,WAAY,UAEhB8V,UAAW,CACPpZ,KAAM,EACN+C,OAAQ,GACRkG,kBAAmB,IACnBC,kBAAmB,UACnBjF,aAAc,GAElBkG,OAAQ,CAGJf,OAAQ,GACR7I,cAAe,UAGnB6J,OAAQ,CACJpK,KAAM,EAEN+C,OAAQ,GACRvC,eAAgB,SAEhBwC,aAAc,GAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,OACZE,UAAW,YCnKbqB,GAAUC,EAASC,OAEzB,GAAuBJ,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAgMEglC,GA9LG,SAAC,GAA0B,IAAD,EAAvB9iC,EAAuB,EAAvBA,WAAW+J,EAAY,EAAZA,MAC5B,EAAuBhQ,IAAMM,WAAWP,GAAxC,yBAAUU,EAAV,KACIioC,EAAI,SAAG14B,EAAMxG,aAAT,EAAG,EAAco1B,SAEzB,EAAgC5+B,IAAMkG,UAAS,GAA/C,WAAK6F,EAAL,KAAgBC,EAAhB,KAEQ3K,EAAWhB,eAAXgB,OAER,EAA0BrB,IAAMkG,SAASwiC,EAAKxwB,QAA9C,WAAK8wB,EAAL,KACA,GADA,KAC8BhpC,IAAMkG,SAAS,KAA7C,WAAK0K,EAAL,KAAeE,EAAf,KACA,EAA8B9Q,IAAMkG,SAASwiC,EAAK33B,iBAAlD,WAAKk4B,EAAL,KAAeC,EAAf,KACA,EAA8BlpC,IAAMkG,SAASzF,EAAU8B,UAAvD,WAAKA,EAAL,KACA,GADA,KACwCvC,IAAMkG,UAAS,IAAvD,WAAKijC,EAAL,KAAoBC,EAApB,KACA,EAAkCppC,IAAMkG,SAASwiC,EAAKW,YAAtD,WAAKA,EAAL,KACA,GADA,KACgCrpC,IAAMkG,SAASzF,EAAU6oC,gBAAzD,WAAKC,EAAL,KAiBMC,GAjBN,KAiBgB,gCAAAjjC,EAAAC,OAAA,mDACK,GAAZoK,EADO,uBAER5E,EAAaD,GAAY,GACzBxE,IAAMC,MAAM,oBAAqB,mCAAoC,CACjE,CAAC2C,KAAM,QAJH,iCASR1D,EAAMZ,GAAU,kBACP,OACTa,EAAU,IAAIC,QACdkG,EAAO,CAAC,OAASm8B,EACrB,SAAWp4B,EACX,SAAWq4B,EACX,SAAW1mC,EACX,cAAiC,GAAjB4mC,EAChB,WAAaE,EACb,UAAYE,GAGZ7iC,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBnG,EAAUuM,WAI1CH,EAAOC,KAAKC,UAAUF,GAClBhG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAlBS,OAmBTL,UACAmG,SA9BQ,YAAAtG,EAAA,MAiCNS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAECA,EAAamR,UAEbhR,IAAMC,MAAM,YAAa,sBAAuB,CAC5C,CAAC2C,KAAM,KAAOnH,QAAS,WACnBiD,EAAW0D,SAAS,iBAAkB,CAACJ,OAAQ,YAAaC,OAAQ,CAACk1B,UAAU,SAIvFn3B,IAAMC,MAAM,aAAcJ,EAAaK,YAG9CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAlDC,+DAuDhB,OAEI,kBAACqX,GAAA,EAAD,CACIpC,UAAU,EAEVqC,cAAc,OACdC,aAAa,EACbC,SAAS,EACTC,eAAgB,cAGpB,kBAACpe,EAAA,EAAD,CAAMC,MAAQG,GAAOie,iBACjB,kBAACre,EAAA,EAAD,CAAMC,MAAQG,GAAOke,gBAEjB,kBAACte,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOuoC,eAAgB,CAAC5/B,gBAAiBxI,EAAOoC,QAC1D,kBAAC3C,EAAA,EAAD,CAAMC,MAAOG,GAAOoe,iBAChB,kBAAC,IAAD,CAAMve,MAAO,CAACG,GAAOwJ,OAAO,CAAC7G,QAAS,KAAtC,oBACA,kBAACpC,EAAA,EAAD,CAAkBV,MAAO,CAAE8C,QAAS,EAAGG,aAAc,IAAKhB,QAAS,WAAOiD,EAAWi3B,WACjF,kBAAC,IAAD,CAAMn8B,MAAOG,GAAOwJ,QAApB,QAIZ,kBAACkyB,GAAA,EAAD,CAAsB77B,MAAO,CAAEC,KAAM,EAAGO,cAAe,SAASC,eAAgB,UAAYq7B,SAAS,UAAU6M,uBAAwB,KACnI,kBAACzoC,EAAA,EAAD,CAAYF,MAAOG,GAAO47B,QACtB,kBAAC,IAAD,CAAM/7B,MAAOG,GAAOynC,WAApB,iBACA,kBAAC7nC,EAAA,EAAD,CAAMC,MAAOG,GAAO0nC,sBAChB,kBAAC,IAAD,CAAM7nC,MAAOG,GAAO67B,aAApB,cAA6C2L,EAAK93B,UAElD,kBAAC,IAAD,CAAM7P,MAAOG,GAAO67B,aAApB,qBAAoD2L,EAAK33B,iBACzD,kBAAC,IAAD,CAAMhQ,MAAOG,GAAO67B,aAApB,YAA2C2L,EAAK/P,OAEhD,kBAAC,IAAD,CAAM53B,MAAOG,GAAO67B,aAApB,yBACI,kBAAC5f,GAAA,EAAD,CACIhV,KAtGnB,CACT,CACEW,GAAI,EACJpF,MAAO,OAER,CACCoF,GAAI,EACJpF,MAAO,OAgGmB0Z,cAAe,EACfC,QAAS,EACTC,eAAgB,CAAC,SACjBvc,MAAO,CAAC8N,YAAa,GAAGtN,cAAe,OACvC6N,UAAW,CAACP,YAAa,IACzB0O,SAAU,CAACzZ,MAAO,IAClB0Z,KAAK,EACLC,YAAa,SAACC,GAAO0rB,EAAiBD,EAAgBzrB,EAAE5U,KACxD6U,WAAY,GACZC,YAAa,UACbC,cAAe,OACfC,UAAW,aAGvB,kBAAC,IAAD,CAAM/c,MAAOG,GAAOynC,WAApB,YACA,kBAAC7nC,EAAA,EAAD,CAAMC,MAAOG,GAAO0nC,sBAChB,kBAAC,IAAD,CAAM7nC,MAAOG,GAAO67B,aAApB,aACA,kBAAC9iB,GAAA,EAAD,CACQC,qBAAuB,qBACvBC,YAAY,OACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO,KACPiX,aAAa,UACbC,aAAc,SAAC1B,GAAS/H,EAAYF,EAAWiI,MAEvD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,oBACA,kBAAC9iB,GAAA,EAAD,CACQC,qBAAuB,qBACvBC,YAAY,cACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YAExChX,MAAO4lC,EACP3uB,aAAa,UACbC,aAAc,SAAC1B,GAASqwB,EAAYD,EAAWpwB,MAEvD,kBAAC,IAAD,CAAM9X,MAAOG,GAAO67B,aAApB,YAA2C2L,EAAK/P,QAIpD,kBAAC73B,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QAEhB,kBAAC1J,EAAA,EAAD,CAAkBV,MAAO,CAACG,GAAOkK,OAAO,CAAC3G,YAAa,MAAO2H,SAAUL,EAAW/I,QAAS,WAAQgJ,EAAaD,GAAY,GAAOy9B,MAC/H,kBAACpoC,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAAOG,GAAOkK,OACd4xB,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAEvBlxB,EACG,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO2I,YAE9C,kBAAC,IAAD,CAAMjJ,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAM,UAAtC,UAKZ,kBAACjB,EAAA,EAAD,CAAkBuB,QAAS,kBAAMiD,EAAWi3B,UAAUn8B,MAAO,CAACG,GAAOkK,OAAQ,CAAClH,YAAa,UAAWD,YAAa,IAAI0K,WAAY,OAC/H,kBAAC,IAAD,CAAM5N,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAO,aAAvC,kBAe1BxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAERme,gBAAiB,CACbne,KAAM,EACN6I,gBAAiB,uBAErBuV,eAAgB,CAEZrb,OAAQA,GAAO,IAIfU,YAAa,GACbkK,WAAY,GACZmR,IAAK,MAGLjW,gBAAiB,SAGrB4/B,eAAgB,CACZ5lC,QAAS,EAGTW,UAAW,UAGf8a,gBAAiB,CACb3Q,WAAY,EACZlK,YAAa,EACblD,cAAe,MACfC,eAAgB,iBAGpBkJ,OAAQ,CACJrG,SAAU,GACV3B,MAAO,QACP4B,WAAY,OACZF,aAAc,UAElB04B,OAAQ,CAEJ73B,aAAc,GAGlBmV,UAAW,CACPpZ,KAAM,EACN+C,OAAQ,GACRkG,kBAAmB,IACnBC,kBAAmB,WAEvBy+B,UAAW,CACP9kC,QAAS,IACTwB,kBAAmB,GACnB3C,MAAO,OACP2B,SAAU,GACVC,WAAY,OACZI,UAAW,GACXmF,gBAAiB,aAErB++B,qBAAsB,CAClBvjC,kBAAmB,IAGvB03B,YAAa,CAETr4B,UAAW,EACXO,aAAc,EACdX,WAAY,QAEhBwkC,SAAU,CAENpkC,UAAW,EACXiK,WAAY,EACZ1J,aAAc,GAGlBkG,OAAQ,CAGJf,OAAQ,GACR7I,cAAe,OAGnB6J,OAAQ,CACJpK,KAAM,EAEN+C,OAAQ,GACRvC,eAAgB,SAEhBwC,aAAc,GAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,OACZE,UAAW,YCtSnB,GAAuBmB,KAAWC,IAAI,UAA/B9B,GAAP,GAAOA,MAAMC,GAAb,GAAaA,OAuDE4lC,GArDI,SAAC,GAAoB,IAAlB1jC,EAAiB,EAAjBA,WAIpB,GADmB5F,eAAXgB,OACwBrB,IAAMM,WAAWP,IAAjD,WAAQuoB,EAAR,KAAQA,UAAR,KAGE,OAEI,kBAACxJ,GAAA,EAAD,CACIpC,UAAU,EAEVqC,cAAc,OACdC,aAAa,EACbC,SAAS,EACTC,eAAgB,cAGpB,kBAACpe,EAAA,EAAD,CAAMC,MAAQG,GAAOie,iBACjB,kBAACre,EAAA,EAAD,CAAMC,MAAQG,GAAOke,gBAGjB,kBAACte,EAAA,EAAD,CAAMC,MAAOG,GAAOoe,iBAChB,kBAAC,IAAD,CAAMve,MAAO,CAACG,GAAOwJ,OAAO,CAAC7G,QAAS,KAAtC,iBACA,kBAAC,IAAD,CAAM9C,MAAO,CAACG,GAAOuG,QAAQ,CAAC5D,QAAS,KAAvC,gDAIJ,kBAAC/C,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QAEhB,kBAAC1J,EAAA,EAAD,CAAkBV,MAAO,CAACG,GAAOkK,OAAO,CAAC3G,YAAa,MAAOzB,QAAS,WAAQiD,EAAWi3B,SACrFlf,YAAW,WACPsK,EAAU,CAACnmB,KAAM,SAAUgnB,OAAQ,oBACpC,OAEH,kBAACroB,EAAA,EAAD,CAAMC,MAAOG,GAAOkK,QAChB,kBAAC,IAAD,CAAMrK,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAM,aAAtC,SAIR,kBAACjB,EAAA,EAAD,CAAkBuB,QAAS,kBAAMiD,EAAWi3B,UAAUn8B,MAAO,CAACG,GAAOkK,OAAQ,CAACuD,WAAY,OACtF,kBAAC,IAAD,CAAM5N,MAAO,CAACG,GAAOmK,SAAU,CAAC3I,MAAO,aAAvC,YAclBxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAERme,gBAAiB,CACbne,KAAM,EACN6I,gBAAiB,sBACjBrI,eAAgB,SAChBsD,WAAY,UAEhBsa,eAAgB,CAEZrb,OAAQA,GAAO,EACfD,MAAOA,GAAM,IACbE,aAAc,EAQd6F,gBAAiB,SAGrByV,gBAAiB,CACb3Q,WAAY,EACZlK,YAAa,EACblD,cAAe,SACfsC,QAAS,EACTW,UAAW,UAEfkG,OAAQ,CACJrG,SAAU,GACV3B,MAAO,OACP4B,WAAY,OACZF,aAAc,UAElBqD,QAAS,CACLpD,SAAU,GACV3B,MAAO,OAEP0B,aAAc,UAElBukC,UAAW,CACP9kC,QAAS,IACTwB,kBAAmB,GACnB3C,MAAO,OACP2B,SAAU,GACVC,WAAY,OACZI,UAAW,GACXmF,gBAAiB,aAGrBi/B,SAAU,CAENpkC,UAAW,EACXiK,WAAY,EACZ1J,aAAc,GAGlBkG,OAAQ,CAEJnK,KAAM,EACNoJ,OAAQ,GACR7I,cAAe,MACfuD,WAAY,SACZtD,eAAgB,YAEpB4J,OAAQ,CAEJtH,MAAO,GACPC,OAAQ,GACRvC,eAAgB,SAEhBwC,aAAc,GAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,OACZE,UAAW,Y,UC3InB,GAAuBmB,KAAWC,IAAI,UAAzB7B,IAAb,GAAOD,MAAP,GAAaC,QAkEE6lC,GAhEG,SAAC,GAAoB,IAAlB3jC,EAAiB,EAAjBA,WAEnB,GADmB5F,eAAXgB,OACyBrB,IAAMM,WAAWP,IAAlD,WAAQ8pC,EAAR,KAAQA,WAAYppC,EAApB,KACA,EAA8BT,IAAMkG,UAAS,GAA7C,WAAK4jC,EAAL,KAAeC,EAAf,KAsBE,OAEI,kBAACjrB,GAAA,EAAD,CACEE,aAAa,EACbC,QAAS6qB,EACT/qB,cAAe,QAEjB,kBAACiS,GAAA,EAAD,CAAoBC,cAAe,cAAelwB,MAAO,CAACC,KAAK,GAAIgC,QAAS,kBAAMiD,EAAWi3B,WAC3F,kBAACp8B,EAAA,EAAD,CAAMC,MAAOG,GAAOke,gBAElB,kBAAClX,GAAA,EAAD,CACIC,KA/BC,CACT,CAACW,GAAI,IAAIkhC,KAAM,eACf,CAAClhC,GAAI,IAAIkhC,KAAM,eACf,CAAClhC,GAAI,IAAIkhC,KAAM,aACf,CAAClhC,GAAI,IAAIkhC,KAAM,cA4BP5hC,WAAY,gBAAGC,EAAH,EAAGA,KAAKmX,EAAR,EAAQA,MAAR,OAAoB,kBAAClX,EAAD,CAAMQ,GAAIT,EAAKS,GAAImhC,KAAM5hC,EAAK2hC,KAAM3hC,KAAMA,EAAMmX,MAAOA,KACvF3W,aAAc,SAAAR,GAAI,OAAIA,EAAKS,SAQvC,SAASR,EAAT,GAAsC,EAAtBQ,GAAuB,IAApBmhC,EAAmB,EAAnBA,KAAK5hC,EAAc,EAAdA,KAAKmX,EAAS,EAATA,MAC3B,OAEE,kBAAC1e,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAe,QAC3B,kBAACyvB,GAAA,EAAD,CAAoBtE,IAAKlN,EAAOyR,cAAe,cAAelwB,MAAOG,GAAOmH,KAAMrF,QAAS,iBAAM,CAAC+mC,EAAYD,GAAW,GAAOD,EAAWxhC,EAAKmX,EAAMvZ,MACpJ,kBAAC,IAAD,CAAMlF,MAAO,CAAC2B,MAAM,UAAWunC,IAEhCxpC,EAAUypC,WAAa1qB,GACxB,kBAAC1e,EAAA,EAAD,CAAMC,MAAOG,GAAOuC,MAClB,kBAAC,KAAD,CAASjB,KAAK,QAAQC,KAAM,GAAIC,MAAM,cAW5CxB,GAASyC,IAAWC,OAAO,CAE7Bwb,eAAgB,CACdvV,gBAAgB,QAChB7F,aAAc,EACdwxB,aAAc,CAAE1xB,MAAO,EAAGC,OAAQ,GAClCwxB,YAAa,QACbE,cAAe,GACf3lB,UAAW,EACXq6B,SAAS,WACTrqB,IAAqB,QAAhBva,IAASC,GAAe,GAAK,GAClC4kC,MAAM,EACNtmC,MAAOC,GAAS,IAAM,IAAM,KAE9BN,KAAM,CAEJW,aAAc,SACd5C,eAAgB,UAElB6G,KAAM,CAEJxE,QAAS,M,UCnDTwmC,IAHUvkC,EAASC,OAGPukC,eAGZC,IAFeD,cAETE,eACNC,GAAUD,cAGVE,GAAc,SAACC,EAAM1kC,EAAYsjB,EAAMrR,EAAQtH,EAAU5D,EAAWq8B,EAAYC,EAAehiC,GAEnG,IAAa,IAAVA,EAEDE,MAAM,+FAGR,CAEE,IAAIojC,EAAM,yCACN1yB,IAAQ0yB,EAAM,4CAA8Ch6B,EAAW,UACvEA,EACFrJ,IAAMC,MAAM,YAAaojC,EACzB,CAAC,CAAEzgC,KAAM,MAAOnH,QAAS,kBAAM2nC,EAAK1kC,EAAYsjB,EAAMrR,EAAQlL,EAAWq8B,EAAYC,KACrF,CAAEn/B,KAAM,KAAMnH,QAAS,aAAUjC,MAAO,WACxC,CAAE+uB,YAAY,IAEdtoB,MAAM,kCA6BZ,SAASqjC,GAAe76B,GAAQ,IAAD,EAK7B,OAHe,SAAG86B,uCAA6B96B,IAAhC,EAA0C,QAIvD,IAAK,OACH,MAAO,OACT,IAAK,UACH,MAAO,aACT,IAAK,UACH,MAAO,cACT,IAAK,QACH,MAAO,QACT,IAAK,OACH,MAAO,OACT,IAAK,iBACH,MAAO,aAKb,SAAS+6B,GAAmB/6B,EAAOsY,EAAW7nB,GAAY,IAAD,MAEjDuqC,EAAS,SAAGF,uCAA6B96B,IAAhC,EAA0C,YAEnDmZ,EAAS,OAUf,OAToB,iBAAd6hB,GAAyD,kBAAzB,SAAAh7B,EAAMxG,aAAN,IAAcD,UAChD4f,EAAS,YAGN1oB,EAAUuqC,GAEJvqC,EAAUuqC,IAAcvqC,EAAUuqC,GAAW3O,QAAU57B,EAAUwX,KAAKC,QAC9C,aAA7BzX,EAAUuqC,GAAW7oC,MAAoD,UAA7B1B,EAAUuqC,GAAW7oC,MAAiBmmB,EAAU,CAACnmB,KAAM6oC,EAAW7hB,WAFlHb,EAAU,CAACnmB,KAAM6oC,EAAW7hB,WAIxB6hB,GACN,IAAK,YACH,MAAO,YACT,IAAK,eACH,MAA4B,kBAAzB,SAAAh7B,EAAMxG,aAAN,IAAcD,QAAkC,WAC5C,eACT,IAAK,UACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,IAAK,SACH,MAAO,UACT,IAAK,YACH,MAAO,aAIb,SAAS0hC,GAAkBj7B,EAAM/J,EAAW5E,EAA6BspC,EAAKlqC,EAAU4oB,EAAQ6hB,EAAUC,EAAMC,EAAS9iB,EAAU+iB,EAAKC,EAAcC,EAAgBC,EAAiBC,EAAmBnkC,GAAQ,IAAD,IA0C/M,OAFe,SAAGwjC,uCAA6B96B,IAAhC,EAA0C,aAGvD,IAAK,YACH,MAAO,CAAC,kBAAC,IAAK6P,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,aAAaC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,iBAAM,CAACooC,EAAQD,GAAQA,OAC/J,kBAAC,IAAKtrB,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,UAAUC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,iBAAM,CAACvC,EAAUsX,aAAa,KAAK9R,EAAW0D,SAAS,iBAAkB,CAACJ,OAAQ,eAAgBC,OAAQ,CAACD,OAAQ,UAAWC,OAAQ,CAACC,UAAW,UAAW6e,EAAU,CAACnmB,KAAM,eAAgBgnB,OAAQ,YAC3U,kBAAC,KAAMtJ,OAAP,CAAc6M,IAAK,EAAGlqB,KAAK,SAASC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMiD,EAAW0D,SAAS,YACzK,IAAK,eACD,MAA6B,kBAAzB,SAAAqG,EAAMxG,aAAN,IAAcD,QAAkC,CAAC,kBAAC,IAAKsW,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,WAAWC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAM0nC,GAAYC,EAAM1kC,EAAW,UAAW,KAAMxF,EAAUkQ,QAAQC,SAAUnQ,EAAUuM,UAAWvM,EAAU4oC,WAAY5oC,EAAU6oC,cAAchiC,MAC9U,kBAAC,IAAKuY,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,mBAAmBC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMiD,EAAW0D,SAAS,iBAAkB,CAACJ,OAAQ,YAAaC,OAAQ,CAACo2B,UAAW,gBAC7N,kBAAC,IAAK/f,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,WAAWC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAO0nC,GAAYC,EAAM1kC,EAAW,OAAQxF,EAAUsX,aAActX,EAAUkQ,QAAQC,SAAUnQ,EAAUuM,UAAWvM,EAAU4oC,WAAY5oC,EAAU6oC,cAAehiC,MACrT,IAAK,UACH,OAAO,kBAAC,IAAKuY,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,UAAUC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMiD,EAAW0D,SAAS,qBAAqB,CAACwwB,MAAO,cACnM,IAAK,SACH,MAAO,CAEP,kBAACr5B,EAAA,EAAD,CAAM4rB,IAAK,EAAG3rB,MAAO,CAAEC,KAAM,EAAG8D,WAAY,SAAUtD,eAAgB,WACpE,kBAAC,KAAD,CACEuY,IAAKsxB,EACLlgC,OAAQ,kBAAC,IAAK0U,OAAN,CAAard,KAAK,kBAAkBC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBArBhIqoC,EAAK7uB,QAAQpE,WAwB1B,kBAAC,KAAD,CAAUpV,QA5DA,WAElBqoC,EAAK7uB,QAAQovB,MAAK,WAChB3lC,EAAW0D,SAAS,kBAEtB4hC,EAA+B,8BAuDU,kBAAC,IAAD,CAAM/oC,KAAK,eAAeC,KAAM,IAAhC,SAAjC,KACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAUO,QAnDC,WAEnBqoC,EAAK7uB,QAAQovB,MAAK,WAEd3lC,EAAW0D,SAAS,kBAGxB4hC,EAA+B,uEA4CU,kBAAC,IAAD,CAAM/oC,KAAK,cAAcC,KAAM,IAA/B,aAGrC,kBAAC,IAAKod,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,UAAUC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMiD,EAAW0D,SAAS,MAAM,CAACwwB,MAAO,sBAC/K,IAAK,SACH,OAAO,kBAAC,UAAMta,OAAP,CAAc6M,IAAK,EAAGlqB,KAAK,uBAAuBC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMiD,EAAW0D,SAAS,kBACtL,IAAK,YACT,MAAO,CAAC,kBAAC,KAAMkW,OAAP,CAAc6M,IAAK,EAAGlqB,KAAK,UAAUC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMslB,EAAU,CAACnmB,KAAM,YAAagnB,OAAQ,eAClL,kBAAC,IAAKtJ,OAAN,CAAa6M,IAAK,EAAGlqB,KAAK,iBAAiBC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASgoB,cAAe,OAAOjuB,QAAS,kBAAMyoC,GAAqC,QAOjM,IAAMI,GAAgB,SAAC,GAAyB,IAAxB5lC,EAAuB,EAAvBA,WAAY+J,EAAW,EAAXA,MAClChQ,IAAM8rC,iBAAgB,WACpB7lC,EAAW8lC,WAAW,CAAEC,YAAanB,GAAe76B,OACnD,CAAC/J,EAAY+J,IAEhB,IAAQ3O,EAAWhB,eAAXgB,OACR,OACE,kBAACkpC,GAAIxjB,UAAL,CACEklB,iBAAiB,OACjBruB,YAAY,QAEZ,kBAAC2sB,GAAI3hC,OAAL,CACEpG,KAAK,OACLglB,UAAWxhB,GACXkmC,QAAS,CACPC,YAAa,OACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,IAAD,CAAMF,KAAK,WAAWE,MAAOA,EAAOD,KAAM,SAIhD,kBAAC8nC,GAAI3hC,OAAL,CACEpG,KAAK,UACLglB,UAAW/b,GACXygC,QAAS,CACPC,YAAa,UACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,IAAD,CAAMF,KAAK,aAAaE,MAAOA,EAAOD,KAAM,SAIlD,kBAAC8nC,GAAI3hC,OAAL,CACEpG,KAAK,UACLglB,UAAW8kB,GACXJ,QAAS,CACPC,YAAa,WACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,UAAD,CAAOF,KAAK,WAAWE,MAAOA,EAAOD,KAAM,WAyCjD8pC,GAAgB,SAAC,GAAyB,IAAxBtmC,EAAuB,EAAvBA,WAAY+J,EAAW,EAAXA,MAC1B3O,EAAWhB,eAAXgB,OACR,EAAqDrB,IAAMM,WAAWP,GAAtE,kBAAQ4qC,EAAR,EAAQA,KAAqBriB,GAA7B,EAAcS,cAAd,EAA6BT,WAAW7nB,EAAxC,KAEA,EAAsBT,IAAMkG,UAAS,GAArC,WAAKilC,EAAL,KAAWC,EAAX,KACA,EAA0BprC,IAAMkG,UAAS,GAAzC,WACA,GADA,UAC4ClG,IAAMkG,UAAS,IAA3D,WAAKslC,EAAL,KAAsBC,EAAtB,KACA,EAAyBzrC,IAAMkG,UAAS,GAAxC,WAAKoB,EAAL,KAAYwf,EAAZ,KAEA,EAAsC9mB,IAAMkG,SAAS,OAArD,WAAKolC,EAAL,KAAmBC,EAAnB,KACMF,EAAO3+B,mBA8Db,OA7DA1M,IAAM8rC,iBAAgB,WACpB7lC,EAAW8lC,WAAW,CAAEC,YAAajB,GAAmB/6B,EAAOsY,EAAW7nB,GACxE+rC,YAAa,kBACX,kBAAC1rC,EAAA,EAAD,CAAMC,MAAO,CAACQ,cAAc,QACzB0pC,GAAkBj7B,EAAM/J,EAAW5E,EAA6BspC,EAAKlqC,EAAU4oB,EAAQ6hB,EAAUC,EAAMC,EAAS9iB,EAAU+iB,EAAKC,EAAcC,EAAgBC,EAAiBC,EAAmBnkC,KAItMmlC,WAAY,SAACtsC,GAAD,OACV,kBAACusC,EAAA,EAAD,OACMvsC,EADN,CAEE6C,QAAS,WAAO,IAAD,EACe,kBAAzB,SAAAgN,EAAMxG,aAAN,IAAcD,QAEfhC,IAAMC,MAAM,UAAW,oCACvB,CAAC,CAAE2C,KAAM,SAAUnH,QAAS,aAAUjC,MAAO,UAC7C,CAAEoJ,KAAM,UAAWnH,QAAS,kBAAMiD,EAAWi3B,YAC7C,CAAEpN,YAAY,IAGd7pB,EAAWi3B,kBAOpB,CAACj3B,EAAY+J,EAAO1I,IAEvBjB,qBAAU,WAAO,IAAD,EAEd,GAA4B,kBAAzB,SAAA2J,EAAMxG,aAAN,IAAcD,QACjB,CACE,IAAMojC,EAAkB,WAYtB,OAXAplC,IAAMC,MACF,UACA,oCACA,CACI,CACI2C,KAAM,SACNnH,QAAS,WAAOg1B,QAAQC,IAAI,mBAAsBl3B,MAAO,UAE7D,CAAEoJ,KAAM,UAAWnH,QAAS,kBAAMiD,EAAWi3B,YACjD,CAAEpN,YAAY,KAEX,GAKT,OAFA8c,IAAYC,iBAAiB,oBAAoBF,GAE1C,WAELC,IAAYE,oBAAoB,oBAAoBH,OAKvD,IAKD,kBAAClC,GAAQ1jB,UAAT,CACEklB,iBAAiB,OACjBruB,YAAY,QAEZ,kBAAC6sB,GAAQ7hC,OAAT,CACEpG,KAAK,YAEL0pC,QAAS,CACPC,YAAa,YACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,IAAD,CAAMF,KAAK,oBAAoBE,MAAOA,EAAOD,KAAM,OAGvD4kB,UAAW,0BAAU,CACnBC,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,cAEvDwP,EAAMG,sBAMV,SAAAvnB,GAAK,OAAI,kBAAC4sC,GAAD,OAAoB5sC,EAApB,CAA2Bi9B,WAAY+N,QAGpD,kBAACV,GAAQ7hC,OAAT,CACEpG,KAAK,eAEL0pC,QAAS,CACPC,YAAa,kBAAC,IAAD,CAAMprC,MAAO,CAAEsD,SAAU,OAAzB,gBACb+nC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,KAAD,CAAOF,KAAK,iBAAiBE,MAAOA,EAAOD,KAAM,OAGrD4kB,UAAW,gBAAGphB,EAAH,EAAGA,WAAH,MAAqB,CAC9BqhB,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,aAIvD9R,EAAW0D,SAAS,eAAgB,CAACJ,OAAQ,YAF7Cge,EAAMG,sBASP,SAAAvnB,GAAK,OAAI,kBAAC6sC,GAAD,OAAuB7sC,EAAvB,CAA8BmH,MAAOA,EAAOwf,UAAWA,QAGvE,kBAAC2jB,GAAQ7hC,OAAT,CACEpG,KAAK,UACLglB,UAAWwR,GACXkT,QAAS,CACPC,YAAa,UACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,UAAD,CAAOF,KAAK,uBAAuBE,MAAOA,EAAOD,KAAM,OAG3D4kB,UAAW,0BAAU,CACnBC,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,cAEvDwP,EAAMG,sBAOd,kBAAC+iB,GAAQ7hC,OAAT,CACEpG,KAAK,SAEL0pC,QAAS,CACPC,YAAa,SACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,IAAD,CAAMF,KAAK,aAAaE,MAAOA,EAAOD,KAAM,OAGhD4kB,UAAW,0BAAU,CACnBC,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,cAEvDwP,EAAMG,sBAMV,SAAAvnB,GAAK,OAAI,kBAAC,GAAD,OAAkBA,EAAlB,CAAyB4nB,aAAcujB,QAGpD,kBAACb,GAAQ7hC,OAAT,CACEpG,KAAK,YAEL0pC,QAAS,CACPC,YAAa,YACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,UAAD,CAAOF,KAAK,qBAAqBE,MAAOA,EAAOD,KAAM,OAGzD4kB,UAAW,0BAAU,CACnBC,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,cAEvDwP,EAAMG,sBAMX,SAAAvnB,GAAK,OAAI,kBAAC,GAAD,OAAqBA,EAArB,CAA4B62B,eAAgBwU,EAAiBvU,kBAAmBwU,QAG5F,kBAAChB,GAAQ7hC,OAAT,CACEpG,KAAK,SACLglB,UAAWylB,GACXf,QAAS,CACPC,YAAa,SACbC,YAAa/qC,EAAO4H,QACpBojC,WAAY,gBAAG3pC,EAAH,EAAGA,MAAH,OACV,kBAAC,UAAD,CAAOF,KAAK,aAAaE,MAAOA,EAAOD,KAAM,OAGjD4kB,UAAW,0BAAU,CACnBC,SAAU,SAAAC,GAAU,IAAD,EACW,kBAAzB,SAAAvX,EAAMxG,aAAN,IAAcD,SAA8B9I,EAAUsX,cAEvDwP,EAAMG,wBAkGLwlB,GArFS,SAAC,GAAkB,IAAjBjnC,EAAgB,EAAhBA,WACxB,EAAsBjG,IAAMM,WAAWP,GAA/BuoB,EAAR,YAAQA,UACAjnB,EAAWhB,eAAXgB,OACR,OACA,kBAACgpC,GAAUtjB,UAAX,CAAqBomB,WAAW,SAASC,cAAe,CAChDC,YAAa,CACXxjC,gBAAiBxI,EAAO4H,SAK1BqkC,wBAAyB,cACzBC,gBAAiB,gBAAGC,EAAH,EAAGA,UAAH,OAAkB,kBAACC,GAAA,EAAD,CAAQjrC,KAAK,eAAeC,KAAM,GAAIC,MAAO8qC,KAChFE,iBAAkB,SAClBC,wBAAwB,EAExBC,gBAAiB,OACjBC,iBAAkB,CAClBvpC,WAAY,UAGZ,kBAAC+lC,GAAUzhC,OAAX,CAAkBpG,KAAK,OAAOglB,UAAWqkB,GAAeK,QAAS,CAC/DO,WAAY,kBACR,kBAAC,IAAK5sB,OAAN,CAAard,KAAK,WAAWC,KAAM,GAAIoH,gBAAkBxI,EAAO4H,QAASjG,QAAS,kBAAMiD,EAAW6nC,oBAGzG,kBAACzD,GAAUzhC,OAAX,CAAkBpG,KAAK,iBAAiBglB,UAAW+kB,GAAeL,QAAS,CACzEmB,YAAa,CACXxjC,gBAAiBxI,EAAO4H,YAK5B,kBAACohC,GAAUzhC,OAAX,CAAkBpG,KAAK,OAAOglB,UAAWoiB,GAAYsC,QAAS,CAC1D6B,aAAa,EACbC,kBAAkB,EAClBC,UAAW,CACTpkC,gBAAiB,kBAIvB,kBAACwgC,GAAUzhC,OAAX,CAAkBpG,KAAK,iBAAiBglB,UAAW0mB,KACnD,kBAAC7D,GAAUzhC,OAAX,CAAkBpG,KAAK,aAAaglB,UAAWuZ,KAC/C,kBAACsJ,GAAUzhC,OAAX,CAAkBpG,KAAK,MAAMglB,UAAWwZ,GAAUkL,QAAS,CACvDppC,MAAO,uBACP6qC,wBAAwB,EACxBL,wBAAyB,WAE1B,kBAACjD,GAAUzhC,OAAX,CAAkBpG,KAAK,aAAaglB,UAAWuhB,GAAYmD,QAAS,CACnE6B,aAAa,EACbC,kBAAkB,EAClBC,UAAW,CACTpkC,gBAAiB,kBAGvB,kBAACwgC,GAAUzhC,OAAX,CAAkBpG,KAAK,cAAcglB,UAAWmiB,GAAauC,QAAS,CAClE6B,aAAa,EACbC,kBAAkB,EAElBC,UAAW,CACTpkC,gBAAiB,kBAIvB,kBAACwgC,GAAUzhC,OAAX,CAAkBpG,KAAK,qBAAqBglB,UAAW2mB,GAAejC,QAAS,CAC3EyB,wBAAwB,EACxBL,wBAAyB,WAE7B,kBAACjD,GAAUzhC,OAAX,CAAkBpG,KAAK,mBAAmBglB,UAAWihB,GAAUyD,QAAS,CACpEyB,wBAAwB,EACxBL,wBAAyB,WAG/B,kBAACjD,GAAUzhC,OAAX,CAAkBpG,KAAK,cAAcglB,UAAW4mB,GAAYlC,QAAS,CAC/DyB,wBAAwB,EACxBL,wBAAyB,QACzBd,YAAa,kBACX,kBAAC,KAAM3sB,OAAP,CAAcrd,KAAK,UAAUC,KAAM,GAAIipC,UAAW,CAACC,KAAM,GAAI9hC,gBAAkBxI,EAAO4H,QAASjG,QAAS,kBAAMslB,EAAU,CAACnmB,KAAM,SAAUgnB,OAAQ,qBCnlB3JklB,ICFUvoC,EAASC,OAENukC,cDFHxkC,EAASC,OAEJukC,eA6BNgE,GA3BY,SAAC,GAAkB,IAAjBroC,EAAgB,EAAhBA,WAEnB5E,EAAWhB,eAAXgB,OACR,OACE,kBAACgtC,GAAatnB,UAAd,CAAwBomB,WAAW,SAASC,cAAe,CACnDC,YAAa,CACTxjC,gBAAiBxI,EAAO4H,SAE5BqkC,wBAAyB,cACzBC,gBAAiB,gBAAGC,EAAH,EAAGA,UAAH,OAAkB,kBAACC,GAAA,EAAD,CAAQjrC,KAAK,eAAeC,KAAM,GAAIC,MAAO8qC,KAChFE,iBAAkB,SAClBC,wBAAwB,EACxBC,gBAAiB,OACjBC,iBAAkB,CACdvpC,WAAY,UAGhB,kBAAC+pC,GAAazlC,OAAd,CAAqBpG,KAAK,aAAaglB,UAAW+mB,GAAerC,QAAS,CACtEO,WAAY,kBACR,kBAAC,IAAK5sB,OAAN,CAAard,KAAK,WAAWC,KAAM,GAAIoH,gBAAkBxI,EAAO4H,QAASjG,QAAS,kBAAMiD,EAAW6nC,sBErBjHU,IAFU1oC,EAASC,OAEJukC,eA6BNmE,GA3BY,SAAC,GAAkB,IAAjBxoC,EAAgB,EAAhBA,WAEnB5E,EAAWhB,eAAXgB,OACR,OACE,kBAACmtC,GAAaznB,UAAd,CAAwBomB,WAAW,SAASC,cAAe,CACnDC,YAAa,CACTxjC,gBAAiBxI,EAAO4H,SAE5BqkC,wBAAyB,cACzBC,gBAAiB,gBAAGC,EAAH,EAAGA,UAAH,OAAkB,kBAACC,GAAA,EAAD,CAAQjrC,KAAK,eAAeC,KAAM,GAAIC,MAAO8qC,KAChFE,iBAAkB,SAClBC,wBAAwB,EACxBC,gBAAiB,OACjBC,iBAAkB,CACdvpC,WAAY,UAGhB,kBAACkqC,GAAa5lC,OAAd,CAAqBpG,KAAK,aAAaglB,UAAW/b,GAAeygC,QAAS,CACtEO,WAAY,kBACR,kBAAC,IAAK5sB,OAAN,CAAard,KAAK,WAAWC,KAAM,GAAIoH,gBAAkBxI,EAAO4H,QAASjG,QAAS,kBAAMiD,EAAW6nC,sB,SC8BjHY,I,OAAuB,IADZ/oC,KAAWC,IAAI,UAAzB7B,Q,IAGQJ,IAAWC,OAAO,CAC/B+D,UAAW,CACT3G,KAAM,EACN6I,gBAAiB,WAEnBa,OAAQ,CACJ1J,KAAM,EACNQ,eAAgB,SAChBsD,WAAY,UAEhB6pC,OAAQ,CACJ3tC,KAAM,EACN6I,gBAAiB,OACjBQ,oBAAqB,GACrBE,qBAAsB,GACtBnF,gBAAiB,GACjBC,kBAAmB,IAEvBrD,KAAM,CACF8B,MAAO4qC,GACP3qC,OAAQ2qC,IAEZ5rC,MAAO,CACHJ,MAAO,UACP2B,SAAU,GACVC,WAAY,QAEhB6F,KAAM,CACFzH,MAAO,OACPgC,UAAU,GAEdyG,OAAQ,CACJrG,WAAY,WACZJ,UAAW,IAEf0G,OAAQ,CACJtH,MAAO,IACPC,OAAQ,GACRvC,eAAgB,SAChBsD,WAAY,SACZd,aAAc,GACdzC,cAAe,OAEnB8J,SAAU,CACN3I,MAAO,QACP4B,WAAY,U,wlBChFlB,OAAuBqB,KAAWC,IAAI,UAA/B9B,GAAP,GAAOA,MAAMC,GAAb,GAAaA,OAGPwH,IADUzF,EAAS8oC,KACR9oC,EAAS0F,MACpBqjC,GAAW/oC,EAASC,OACpB+oC,GAAMhpC,EAASipC,QAEfC,GAAU,CACdC,KAAM,CACJ3pC,UAAW,CAAC,CAAEI,OAAQ,MACtB5B,MAAOA,GACPC,OAAQA,GAAO,KAEjBmrC,GAAI,CACD5pC,UAAW,CAAC,CAAEI,OAAQ,IACvB5B,MAAOA,GACPC,OAAe,KAAPA,KAydGorC,GArdM,SAAC,GAAiB,EAAhBlpC,WAAiB,IAEpC,EAAwBjG,IAAMkG,SAAS,CACnCkpC,SAAU,GACVC,SAAU,GACVC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjB1jC,WAAW,IAPf,WAAO5D,EAAP,KAAasE,EAAb,KAUA,EAAgCzM,IAAMkG,UAAS,GAA/C,WAAK6W,EAAL,KAAgB2yB,EAAhB,KAEQruC,EAAWhB,cAAXgB,OAER,EAAqBrB,IAAMM,WAAWP,GAA7BqL,EAAT,YAASA,OAELukC,EAAgB3vC,IAAM4vC,YA0DpBC,EAAc,SAAOttC,EAAU8sC,GAAjB,qBAAA9oC,EAAAC,OAAA,mDAGa,GAAxB2B,EAAKinC,SAASzhC,QAAuC,GAAxBxF,EAAKknC,SAAS1hC,OAHhC,uBAIZpG,IAAMC,MAAM,eAAgB,8CAA+C,CACvE,CAAC2C,KAAM,UALC,iCAUhBsC,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAEzBtF,EAAM8E,GAAW,+CACR,OACT7E,EAAU,IAAIC,QACd6E,EAAO,SAAWyC,KAAO6hC,OAAOvtC,EAAW,IAAM8sC,GAErD3oC,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,MAAO,MACtBF,EAAQE,OAAO,OAAQqG,KAAKC,SAASnE,YACrCrC,EAAQE,OAAO,gBAAiB4E,GAI5B3E,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAZS,OAaTL,YA1BY,YAAAH,EAAA,MA6BVS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEH,IAAGA,IAAgBA,EAAa2oC,cA8B5B,OAJAtjC,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,UAC7BxE,IAAMC,MAAM,gBAAiB,qCAAsC,CAC/D,CAAC2C,KAAM,UA3BX,IAAI6lC,EAAW7+B,MAAS+Z,IAAI,EAAG,QAC3BrgB,EAAOiC,KAAKU,MAAMS,KAAOgiC,OAAO7oC,EAAa2oC,gBAC7CG,GAAe,EACfnzB,IAAWizB,EAAW7+B,MAAS+Z,IAAI,EAAG,SAEtCrgB,EAAKqlC,eAAcA,EAAerlC,EAAKqlC,cAG3C,IAAIC,EAAU,CACV,IAAOtlC,EAAKulC,IACZ,MAASvlC,EAAK8tB,MACd,UAAa9tB,EAAKzI,UAClB,SAAYyI,EAAKxI,SACjB,WAAcwI,EAAKw+B,WACnB,cAAiBx+B,EAAKy+B,cACtB,SAAY,UAAYliC,EAAaipC,YACrC,iBAAkBxlC,EAAKylC,gBAAiBzlC,EAAKylC,eAC7C,eAAkBzlC,EAAK0lC,eAAiB1lC,EAAK0lC,eAAgBp/B,MAAS+Z,IAAI,EAAG,QAC7E,cAAergB,EAAK2lC,aAAc3lC,EAAK2lC,YACvC,SAAYR,EACZE,gBAGJO,EAAWN,MASlB9oC,OAAM,SAACC,GAGJ,OAFAmF,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAC7BxE,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MArEK,8DAiIdgpC,EAAa,SAAOC,GAAP,mBAAAnqC,EAAAC,OAAA,uDACXC,EAAM8E,GAAW,2BACR,OACT7E,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiB8pC,EAAYC,UAC5CjqC,EAAQE,OAAO,MAAO,MACtBF,EAAQE,OAAO,OAAQqG,KAAKC,SAASnE,YAEjClC,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OATS,MAUTL,YAZW,YAAAH,EAAA,MAeTS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAOHspC,EAAY9vC,WAAawG,EAAaxG,WACtCgwC,EAAsBF,MAEzBrpC,OAAM,SAACC,GACJopC,EAAY9vC,WAAa,GAEzBgwC,EAAsBF,OA9BX,8DAkCbE,EAAwB,SAAOF,GAAP,mBAAAnqC,EAAAC,OAAA,uDACtBC,EAAMooC,GAAW,kBACR,OACTnoC,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiB8pC,EAAYC,UAKxC9pC,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAVS,MAWTL,YAbsB,WAAAH,EAAA,MAgBpBS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEH,IAAIA,EAAamR,YAAanR,EAAaoR,IAMvC,OAHA/L,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAE7BxE,IAAMC,MAAM,aAAcJ,EAAaK,SAChC,KALPopC,EAAmBH,EAAatpC,EAAaoR,QAQpDnR,OAAM,SAACC,GAGJ,OAFAmF,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAC7BxE,IAAMC,MAAM,mBAAoBF,EAAMG,SAC/B,SAhCe,6DAoCxBopC,EAAqB,SAAOH,EAAaI,GAApB,mBAAAvqC,EAAAC,OAAA,uDACnBC,EAAMooC,GAAW,8BACR,OACTnoC,EAAU,IAAIC,SAEVC,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiB8pC,EAAYC,UAExC9pC,EAAM,IAAIC,QAAQL,EAAK,CACvBM,OAPS,MAQTL,YAVmB,WAAAH,EAAA,MAajBS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,IAAIA,EAAamR,YAAanR,EAAaoR,IAKvC,OAFA/L,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAC7BxE,IAAMC,MAAM,aAAcJ,EAAaK,SAChC,KAJP2D,EAAOslC,EAAaI,EAAa1pC,EAAaoR,QAOrDnR,OAAM,SAACC,GAGJ,OAFAmF,EAAQ,SAAItE,GAAL,IAAW4D,WAAW,KAC7BxE,IAAMC,MAAM,mBAAoBF,EAAMG,SAC/B,SA3BY,6DAuCrBspC,EAAoB,WAEtBrB,EAAa3yB,GAAaA,IAG9B,OACI,kBAAC6f,GAAA,EAAD,CACAC,SAA0B,QAAhBt3B,IAASC,GAAe,UAAY,SAAUzE,MAAO,CAACG,GAAOyG,UAAU,CAACkC,gBAAiBxI,EAAO2vC,UACtG,kBAACppC,GAAA,EAAD,CAAWC,SAAS,kBACpB,kBAAC/G,EAAA,EAAD,CAAMC,MAASG,GAAO+vC,eAElB,kBAACnwC,EAAA,EAAD,CAAMC,MAASG,GAAO6C,QAClB,kBAAC,KAAD,CACImtC,UAAU,WACVC,SAAW,IACXpwC,MAASG,GAAOc,KAAML,OAAUG,EAAQ,OAI5C,kBAAC,KAAD,CACIovC,UAAU,WACVC,SAAW,IACXpwC,MAASG,GAAO4B,OAHpB,iBAgBJ,kBAAC,KAAD,CACIouC,UAAYlC,GACZmC,SAAW,IAEXC,MAAQ,IACRrwC,MAAS,CAAEopC,SAAU,aAErB,kBAAC/oC,EAAA,EAAD,CACAC,OAAQ,CAAC,UAAU,WACnBN,MAASG,GAAOwJ,WAQxB,kBAAC,KAAD,CACIwmC,UAAU,cACVE,MAAQ,IACRrwC,MAAOG,GAAOmwC,eAEV,kBAACvwC,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOowC,WAAW,CAACpnC,kBAAmB7I,EAAOgZ,aACvD,kBAAC,KAAD,CAAM7X,KAAM,OAAOC,KAAM,GAAIC,MAAOrB,EAAOgZ,YAC3C,kBAACJ,GAAA,EAAD,CACIlZ,MAAO,CAACG,GAAOqwC,MAAM,CAAC7uC,MAAOrB,EAAOgZ,YACpCF,YAAc,QACdD,qBAAwB7Y,EAAO8Y,YAC/Bq3B,cAAc,OACdC,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAtWd,SAACA,GACjBA,EAAIvP,OAAOqE,QAAU,EACrBlB,EAAQ,SACDtE,GADA,IAEHinC,SAAUv2B,EACVy2B,uBAAuB,EACvBE,aAAa,KAGjB/iC,EAAQ,SACDtE,GADA,IAEHinC,SAAUv2B,EACVy2B,uBAAuB,EACvBE,aAAa,KAyVsBkC,CAAgB74B,IACvC84B,aAAc,SAACj0B,GAAoBA,EAAEk0B,YAAYznC,KA7T7Db,OAAOqE,QAAU,EACrBlB,EAAQ,SACDtE,GADA,IAEHqnC,aAAa,KAGjB/iC,EAAQ,SACDtE,GADA,IAEHqnC,aAAa,MAsTDqC,gBAAiB,kBAAMlC,EAAcnzB,QAAQs1B,SAC7Cx3B,aAAa,mBAGnBnS,EAAKqnC,YAAc,KACjB,kBAAC,KAAD,CAAiB0B,UAAU,aAAaC,SAAU,KAC9C,kBAAC,IAAD,CAAMpwC,MAAO,CAACG,GAAO6wC,SAAS,CAACrvC,MAAOrB,EAAOgZ,aAA7C,qCAGR,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOowC,WAAW,CAACpnC,kBAAmB7I,EAAOgZ,aACvD,kBAAC,KAAD,CAAM7X,KAAM,OAAOC,KAAM,GAAIC,MAAOrB,EAAOgZ,YAC3C,kBAACJ,GAAA,EAAD,CACIlZ,MAAO,CAACG,GAAOqwC,MAAM,CAAC7uC,MAAOrB,EAAOgZ,YACpCF,YAAc,WACdD,qBAAwB7Y,EAAO8Y,YAC/Bq3B,cAAc,KACdjC,kBAAiBpnC,EAAKonC,gBACtBx1B,IAAK41B,EACL8B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAzWT,SAACA,GACtBA,EAAIvP,OAAOqE,QAAU,EACrBlB,EAAQ,SACDtE,GADA,IAEHknC,SAAUx2B,EACV42B,iBAAiB,KAGrBhjC,EAAQ,SACDtE,GADA,IAEHknC,SAAUx2B,EACV42B,iBAAiB,KA8VkBuC,CAAqBn5B,IAC5Cg5B,gBAAiB,WAAOhC,EAAa1nC,EAAKinC,SAAUjnC,EAAKknC,aAE7D,kBAAC5tC,EAAA,EAAD,CAAkBuB,QA5VR,WAC1ByJ,EAAQ,SACDtE,GADA,IAEHonC,iBAAkBpnC,EAAKonC,qBA0VNpnC,EAAKonC,gBACF,kBAAC,KAAD,CAAM/sC,KAAK,UAAUC,KAAM,GAAIC,MAAOrB,EAAOgZ,YAE7C,kBAAC,KAAD,CAAM7X,KAAK,MAAMC,KAAM,GAAIC,MAAOrB,EAAOgZ,cAInDlS,EAAKsnC,gBAAkB,KACrB,kBAAC,KAAD,CAAiByB,UAAU,aAAaC,SAAU,KAC9C,kBAAC,IAAD,CAAMpwC,MAAO,CAACG,GAAO6wC,SAAS,CAACrvC,MAAOrB,EAAOgZ,aAA7C,wCAGR,kBAACvZ,EAAA,EAAD,CAAMC,MAAOG,GAAO+wC,UAChB,kBAACxwC,EAAA,EAAD,CAAkBV,MAAOG,GAAO+wC,SAAUjvC,QAAS,WAAO+tC,MACtD,kBAAC,KAAD,CACAhwC,MAAOG,GAAOgxC,WACdr1B,qBAAuB,UACvBC,uBAA0Bzb,EAAOgZ,UACjC0C,UAAWA,EAAWC,QAAW,kBAAK+zB,OAEtC,kBAAC,IAAD,CAAMhwC,MAAS,CAACG,GAAOixC,WAAW,CAACzvC,MAAOrB,EAAOgZ,aAAjD,wBAKR,kBAAC5Y,EAAA,EAAD,CAAkBV,MAASG,GAAOi0B,gBAAiB/oB,SAAYjE,EAAK4D,UAChE/I,QAAS,WAAO6sC,EAAa1nC,EAAKinC,SAAUjnC,EAAKknC,YAEjD,kBAACjuC,EAAA,EAAD,CACAC,OAAQ,CAAC,UAAU,WACnBN,MAASG,GAAOkxC,SAChBpV,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAEtB90B,EAAK4D,UACH,kBAAC/C,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,EAAO2I,YAE9C,kBAAC,IAAD,CAAMjJ,MAASG,GAAOmxC,YAAtB,WAMR,kBAACvxC,EAAA,EAAD,CAAMC,MAAQG,GAAOoxC,aACjB,kBAAC7wC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMV,MAAS,CAACG,GAAOqxC,SAAS,CAAC7vC,MAAOrB,EAAOgZ,aAA/C,kBAGJ,kBAAC,IAAD,CAAMtZ,MAAS,CAACG,GAAOqxC,SAAS,CAAC7vC,MAAOrB,EAAOgZ,aAA/C,KAEA,kBAAC5Y,EAAA,EAAD,CACIuB,QAAS,kBAnJhB,EAAAuD,EAAAC,OAAA,kEAAAD,EAAA,MAEMmD,IADF,+BADJ,4EAqJO,kBAAC,IAAD,CAAM3I,MAAS,CAACG,GAAOqxC,SAAS,CAAC7vC,MAAOrB,EAAOgZ,aAA/C,oBAIR,kBAACvZ,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,MAAS,CAAC,CAACyD,UAAW,SAAUE,UAAU,GAAIhC,MAAOrB,EAAOgZ,UAAWhW,SAAS,MAAOyqC,QAU/G5tC,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACP3G,KAAM,GAIViwC,cAAe,CACX9G,SAAU,WACVrlC,WAAY,SACZ0tC,SAAU,EACVhxC,eAAgB,UAIpBuC,OAAQ,CACJ0X,OAAQ,EACR3L,UAAW,GACX/L,OAAQA,GAAO,KAEnB/B,KAAM,CAEFywC,WAAY,UACZ1uC,OAAQA,GAAS,IAAMA,GAAO,IAAMA,GAAO,IAE3Ce,WAAY,UAEhBhC,MAAO,CACHJ,MAAO,QACP2B,SAAUN,GAAS,IAAM,GAAK,GAC9BO,WAAY,OACZE,UAAW,UAIfkG,OAAQ,CACJ+nC,WAAY,UACZ3uC,MAAOA,GACPC,OAAQA,GAAO,IACfuB,UAAW,CAAC,CAAEG,OAAQ,MAEtB8vB,YAAa,QACbC,aAAc,CAAE1xB,MAAO,EAAGC,OAAQ,GAClC0xB,cAAgB,GAChBC,aAAc,EACd5lB,UAAW,GACX2L,OAAQ,EAERzX,aAAcF,GAAM,GASxButC,cAAe,CACXrwC,KAAM,EACN6C,QAAS,GACTa,UAAW,IAMf4sC,WAAY,CACRviC,WAAY,GACZ7E,kBAAmB,UACnBD,kBAAmB,IACnB1I,cAAe,OAGnBgwC,MAAO,CACHvwC,KAAM,EACNmD,UAAW,UACXJ,OAAQ,GACRkB,aAAc,EACd0J,WAAY,EACZtK,SAAU,IAId4tC,SAAU,CACN1wC,cAAc,MACd0D,aAAc,GACdP,UAAW,GAIfwtC,WAAY,CACRvjC,WAAY,KAEhBwjC,WAAY,CACR9tC,SAAU,GAEVC,WAAY,OACZI,UAAW,IACXiK,WAAY,KAEhBwmB,gBAAiB,CACbI,YAAa,OACbC,aAAc,CAAE1xB,MAAO,EAAGC,OAAQ,GAClC0xB,cAAgB,GAChBC,aAAc,EACd5lB,UAAW,GAGfsiC,SAAU,CACNpxC,KAAM,EACNoE,gBAAiB,GACjB5D,eAAgB,SAChBwC,aAAc,GAIlBquC,WAAY,CACRtuC,OAAQ,GACRS,UAAW,SACX9B,MAAO,QACP4B,WAAY,OACZD,SAAU,GACVquC,SAAU,UAGdJ,YAAa,CACT/wC,cAAe,MACfmD,UAAW,EACXlD,eAAgB,gBAEpB+wC,SAAU,CAENluC,SAAU,GACVC,WAAY,QAEhBytC,SAAU,CAEN1tC,SAAU,M,qkBC9nBlB,OAAuBsB,KAAWC,IAAI,UAA/B9B,GAAP,GAAOA,MAAMC,GAAb,GAAaA,OAEPirC,GAAU,CACZC,KAAM,CACJnrC,MAAOA,GACPC,OAAe,KAAPA,IAEVmrC,GAAI,CACFprC,MAAOA,GACPC,OAAQA,GAAO,MA+hBNorC,GA3hBM,SAAC,GAAkB,IAAjBlpC,EAAgB,EAAhBA,WAEnB,EAAwBjG,IAAMkG,SAAS,CACnCysC,UAAW,GACXC,SAAU,GACVxD,SAAU,GACVyD,MAAM,GACNxD,SAAU,GACVyD,iBAAkB,GAClBC,UAAU,GACVC,4BAA4B,EAC5BC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,wBAAwB,EACxBC,4BAA4B,EAC5B7D,iBAAiB,EACjB8D,yBAAyB,IAd7B,WAAOlrC,EAAP,KAAasE,EAAb,KAiBQpL,EAAWhB,cAAXgB,OAEFqwC,EAAkB,SAAC74B,EAAKy6B,GAC1B,GAAmB,IAAfz6B,EAAIlL,OACJ,OAAO2lC,GACH,IAAK,YAED7mC,EAAQ,SACDtE,GADA,IAEHwqC,UAAW95B,EACXm6B,4BAA4B,KAEhC,MACJ,IAAK,WAEDvmC,EAAQ,SACDtE,GADA,IAEHyqC,SAAU/5B,EACVo6B,2BAA2B,KAE/B,MACJ,IAAK,WAEDxmC,EAAQ,SACDtE,GADA,IAEHinC,SAAUv2B,EACVq6B,2BAA2B,KAE/B,MACJ,IAAK,QAEDzmC,EAAQ,SACDtE,GADA,IAEH0qC,MAAOh6B,EACPs6B,wBAAwB,KAEhC,MACA,IAAK,YAED1mC,EAAQ,SACDtE,GADA,IAEH4qC,UAAWl6B,EACXu6B,4BAA4B,UAOxC,OAAOE,GACH,IAAK,YAED7mC,EAAQ,SACDtE,GADA,IAEHwqC,UAAW95B,EACXm6B,4BAA4B,KAEhC,MACJ,IAAK,WAEDvmC,EAAQ,SACDtE,GADA,IAEHyqC,SAAU/5B,EACVo6B,2BAA2B,KAE/B,MACJ,IAAK,WAEDxmC,EAAQ,SACDtE,GADA,IAEHinC,SAAUv2B,EACVq6B,2BAA2B,KAE/B,MACJ,IAAK,QAEDzmC,EAAQ,SACDtE,GADA,IAEH0qC,MAAOh6B,EACPs6B,wBAAwB,KAEhC,MACA,IAAK,YAED1mC,EAAQ,SACDtE,GADA,IAEH4qC,UAAWl6B,EACXu6B,4BAA4B,OAqChD,OACE,kBAACtyC,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyG,UAAW,CAACkC,gBAAiBxI,EAAO2vC,UACrD,kBAACppC,GAAA,EAAD,CAAWC,SAAS,kBACpB,kBAAC/G,EAAA,EAAD,CAAMC,MAASG,GAAO+vC,eAEpB,kBAACnwC,EAAA,EAAD,CAAMC,MAASG,GAAO6C,QAClB,kBAAC,KAAD,CACImtC,UAAU,WACVC,SAAW,IACfpwC,MAASG,GAAOc,KAAML,OAAUG,EAAQ,OAExC,kBAAC,KAAD,CACIovC,UAAU,WACVC,SAAW,IACfpwC,MAAOG,GAAOqyC,UAHd,yCAIA,kBAAC,KAAD,CACIrC,UAAU,WACVC,SAAW,IACfpwC,MAAOG,GAAOsyC,aAHd,kBAOJ,kBAAC,KAAD,CACItC,UAAYlC,GACZmC,SAAW,IACXsC,UAAU,UACVrC,MAAQ,IACZrwC,MAAS,CAAEopC,SAAU,aACjB,kBAAC/oC,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAASG,GAAOwJ,WAQ5B,kBAAC,KAAD,CACIwmC,UAAU,cACVE,MAAQ,IACRrwC,MAAOG,GAAOytC,QAEd,kBAAC1tC,EAAA,EAAD,KAEA,kBAAC,IAAD,CAAMF,MAAO,CAACG,GAAOwyC,YAAY,CAAChxC,MAAOrB,EAAOgZ,aAAhD,cACA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACu5B,GAAA,EAAD,CACIpxC,KAAK,SACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,kBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,gBAE/C1Q,EAAK6qC,2BACN,kBAAC,KAAD,CACI9B,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAGN,kBAAC,IAAD,CAAM1B,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAGhC,MAAOrB,EAAOgZ,aAAhE,aACA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACu5B,GAAA,EAAD,CACIpxC,KAAK,SACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,iBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,eAE/C1Q,EAAK8qC,0BACN,kBAAC,KAAD,CACI/B,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAGN,kBAAC,IAAD,CAAM1B,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAGhC,MAAOrB,EAAOgZ,aAAhE,mBACA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACO,GAAA,EAAD,CACIpY,KAAK,OACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,aACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,eAE/C1Q,EAAK+qC,0BACN,kBAAC,KAAD,CACIhC,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAIN,kBAAC3B,EAAA,EAAD,CAAMC,MAAO,CAAEQ,cAAe,QAC1B,kBAAC,IAAD,CAAMR,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAIZ,MAAO,MAAOW,YAAa,EAAE/B,MAAOrB,EAAOgZ,aAA9F,SACA,kBAAC,IAAD,CAAMtZ,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAIZ,MAAO,MAAMpB,MAAOrB,EAAOgZ,aAA9E,QAEJ,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAAEQ,cAAe,QAE1B,kBAACT,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO2yC,QAAQ,CAAC3vC,YAAa7C,EAAOgZ,aAC9C,kBAACO,GAAA,EAAD,CACIpY,KAAK,QACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAGV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,oBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,YAE/C1Q,EAAKgrC,uBACN,kBAAC,KAAD,CACIjC,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAIN,kBAAC3B,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4yC,QAAQ,CAAC5vC,YAAa7C,EAAOgZ,aAC9C,kBAACO,GAAA,EAAD,CACIpY,KAAK,OACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,WACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,MAE1C1Q,EAAKmnC,sBACN,kBAAC,KAAD,CACI4B,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,OAOV,kBAAC3B,EAAA,EAAD,CAAMC,MAAO,CAAEQ,cAAe,QAC1B,kBAAC,IAAD,CAAMR,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAIZ,MAAO,MAAOW,YAAa,EAAE/B,MAAOrB,EAAOgZ,aAA9F,WACA,kBAAC,IAAD,CAAMtZ,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAIZ,MAAO,MAAMpB,MAAOrB,EAAOgZ,aAA9E,SAEJ,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAAEQ,cAAe,QAE1B,kBAACT,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO2yC,QAAQ,CAAC3vC,YAAa7C,EAAOgZ,aAC9C,kBAACO,GAAA,EAAD,CACIpY,KAAK,OACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAGV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,eACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,YAE/C1Q,EAAKgrC,uBACN,kBAAC,KAAD,CACIjC,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAIN,kBAAC3B,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAO4yC,QAAQ,CAAC5vC,YAAa7C,EAAOgZ,aAC9C,kBAACO,GAAA,EAAD,CACIpY,KAAK,QACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,YACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,MAE1C1Q,EAAKmnC,sBACN,kBAAC,KAAD,CACI4B,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,OAMV,kBAAC,IAAD,CAAM1B,MAAO,CAACG,GAAOwyC,YAAa,CAC9BhvC,UAAW,GAAGhC,MAAOrB,EAAOgZ,aADhC,YAGA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACO,GAAA,EAAD,CACIpY,KAAK,OACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,gBACZo1B,kBAAiBpnC,EAAKonC,gBACtBxuC,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAzSD,SAACA,GAC1BpM,EAAQ,SACDtE,GADA,IAEHknC,SAAUx2B,KAsSqBm5B,CAAqBn5B,MAEhD,kBAACpX,EAAA,EAAD,CACIuB,QA9Rc,WAC1ByJ,EAAQ,SACDtE,GADA,IAEHonC,iBAAkBpnC,EAAKonC,qBA6RdpnC,EAAKonC,gBACN,kBAAC30B,GAAA,EAAD,CACIpY,KAAK,UACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAGV,kBAACmY,GAAA,EAAD,CACIpY,KAAK,MACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,OAMlB,kBAAC,IAAD,CAAM1B,MAAO,CAACG,GAAOwyC,YAAa,CAC9BhvC,UAAW,GAAGhC,MAAOrB,EAAOgZ,aADhC,oBAGA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACO,GAAA,EAAD,CACIpY,KAAK,OACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,wBACZo1B,kBAAiBpnC,EAAKkrC,wBACtBtyC,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAtUM,SAACA,GACjCpM,EAAQ,SACDtE,GADA,IAEH2qC,iBAAkBj6B,KAmUak7B,CAA4Bl7B,MAEvD,kBAACpX,EAAA,EAAD,CACIuB,QA3TqB,WACjCyJ,EAAQ,SACDtE,GADA,IAEHkrC,yBAA0BlrC,EAAKkrC,6BA0TtBlrC,EAAKonC,gBACN,kBAAC30B,GAAA,EAAD,CACIpY,KAAK,UACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAGV,kBAACmY,GAAA,EAAD,CACIpY,KAAK,MACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,OAMlB,kBAAC,IAAD,CAAM1B,MAAO,CAACG,GAAOwyC,YAAa,CAAEhvC,UAAW,GAAGhC,MAAOrB,EAAOgZ,aAAhE,cACA,kBAACvZ,EAAA,EAAD,CAAMC,MAAO,CAACG,GAAOyyC,OAAO,CAACzvC,YAAa7C,EAAOgZ,aAC7C,kBAACu5B,GAAA,EAAD,CACIpxC,KAAK,SACLE,MAAOrB,EAAOgZ,UACd5X,KAAM,KAEV,kBAACwX,GAAA,EAAD,CACIC,qBAAwB7Y,EAAO8Y,YAC/BA,YAAY,kBACZpZ,MAAO,CAACG,GAAOkZ,UAAU,CAAC1X,MAAOrB,EAAOgZ,YACxCo3B,eAAe,OACfl3B,aAAc,SAAC1B,GAAD,OAAS64B,EAAgB74B,EAAK,gBAE/C1Q,EAAKirC,2BACN,kBAAC,KAAD,CACIlC,UAAU,YAEV,kBAACt2B,GAAA,EAAD,CACIpY,KAAK,eACLE,MAAM,UACND,KAAM,MAGZ,MAGN,kBAAC3B,EAAA,EAAD,CAAMC,MAAOG,GAAO8yC,aAChB,kBAAC,IAAD,CAAMjzC,MAAOG,GAAO+yC,mBAApB,kCAGA,kBAAC,IAAD,CAAMlzC,MAAO,CAACG,GAAO+yC,kBAAmB,CAAC3vC,WAAY,UAAW,IAAhE,oBACA,kBAAC,IAAD,CAAMvD,MAAOG,GAAO+yC,mBAAoB,IAAxC,OACA,kBAAC,IAAD,CAAMlzC,MAAO,CAACG,GAAO+yC,kBAAmB,CAAC3vC,WAAY,UAAW,IAAhE,mBAEJ,kBAACxD,EAAA,EAAD,CAAMC,MAAOG,GAAOiK,QAChB,kBAAC1J,EAAA,EAAD,CACIV,MAAOG,GAAOkK,OACdpI,QAAS,cAEb,kBAAC5B,EAAA,EAAD,CACIC,OAAQ,CAAC,UAAU,WACnBN,MAAOG,GAAOkK,OACd4xB,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAExB,kBAAC,IAAD,CAAMl8B,MAAO,CAACG,GAAOmK,SAAU,CAC3B3I,MAAM,UADV,cAMJ,kBAACjB,EAAA,EAAD,CACIuB,QAAS,kBAAMiD,EAAWi3B,UAC1Bn8B,MAAO,CAACG,GAAOkK,OAAQ,CACnBlH,YAAa,UACbD,YAAa,IACbS,UAAW,MAGf,kBAAC,IAAD,CAAM3D,MAAO,CAACG,GAAOmK,SAAU,CAC3B3I,MAAO,aADX,gBAadxB,GAASyC,IAAWC,OAAO,CAC7B+D,UAAW,CACT3G,KAAM,GAGRkzC,KAAM,CAEF3yC,cAAe,MACfuC,MAAM,KAGVmtC,cAAe,CACXnsC,WAAY,SACZ0tC,SAAU,GACXhxC,eAAgB,UAEnBuC,OAAQ,CACJ0X,OAAQ,EACR3L,UAAW,IAEf9N,KAAM,CACF8B,MAAOA,GAAM,EACbC,OAAQA,GAAO,IAEfI,UAAW,SACXO,UAA2B,QAAhBa,IAASC,GAAe,GAAK,MAG5C+tC,SAAU,CACN7wC,MAAO,OAEP8B,UAAW,SACXH,SAAU,IAGdmvC,YAAa,CACT9wC,MAAO,OACP4B,WAAY,OACZE,UAAW,SACXH,SAAU,IAUfqG,OAAQ,CACH5G,MAAOA,GACPC,OAAQA,GAAO,IAEfuB,UAAW,CAAC,CAAEG,OAAQ,MACtBzB,aAAc,IACduxB,YAAa,QACbC,aAAc,CAAE1xB,MAAO,EAAGC,OAAQ,GAClC0xB,cAAgB,GAChBC,aAAc,EACd5lB,UAAW,IAEf6+B,OAAQ,CAEJ3tC,KAAM,EACN0D,UAAW,GAIXW,kBAAmB,GACnBD,gBAAiB,IAGrBsuC,YAAa,CAETrvC,SAAU,IAEdsvC,OAAQ,CACJpyC,cAAe,MACfmD,UAAW,GACXuF,kBAAmB,IAEnB+nB,cAAe,GAEnB6hB,QAAS,CACLtyC,cAAe,MACfmD,UAAW,GACXZ,MAAO,MACPmG,kBAAmB,IAEnB+nB,cAAe,EACfvtB,YAAa,GAEjBqvC,QAAS,CACLvyC,cAAe,MACfmD,UAAW,GACXZ,MAAO,MACPmG,kBAAmB,IAEnB+nB,cAAe,GAGnB5X,UAAW,CACPpZ,KAAM,EAEN6N,YAAa,IAIjB1D,OAAQ,CACJrG,WAAY,SACZJ,UAAW,IAGf0G,OAAQ,CACJtH,MAAO,OACPC,OAAQ,GACRvC,eAAgB,SAChBsD,WAAY,SACZd,aAAc,IAGlBqH,SAAU,CACNhH,SAAU,GACVC,WAAY,QAEhB0vC,YAAa,CACTzyC,cAAe,MACf0wB,SAAU,OACVvtB,UAAW,IAEfuvC,kBAAmB,CACfvxC,MAAO,UCxrBTyxC,GAAY7J,cAUH8J,GARS,SAAC,GAAD,EAAEnuC,WAAF,OACpB,kBAACkuC,GAAUptB,UAAX,CAAqBomB,WAAW,QAE5B,kBAACgH,GAAUvrC,OAAX,CAAkBpG,KAAK,eAAeglB,UAAW2nB,KACjD,kBAACgF,GAAUvrC,OAAX,CAAkBpG,KAAK,eAAeglB,UAAW6sB,OCkD1ChkC,GAhEK,CAClB,OAAU,EACV,SAAY,GACZ,YAAe,GACf,gBAAmB,4DACnB,YAAe,sBACf,OAAU,GACV,OAAU,GACV,WAAc,EACd,aAAgB,GAChB,YAAe,KACf,kBAAqB,EACrB,kBAAqB,EACrB,kBAAqB,IACrB,kBAAoB,EACpB,mBAAqB,EACrB,YAAc,EACd,aAAe,EACf,WAAc,GACd,iBAAoB,EACpB,iBAAoB,KACpB,iBAAoB,KACpB,iBAAoB,KACpB,iBAAmB,EACnB,wBAA0B,EAC1B,mBAAqB,EACrB,YAAe,EACf,wBAA2B,mDAC3B,aAAgB,EAChB,YAAe,IACf,cAAiB,cACjB,aAAgB,IAChB,aAAgB,IAChB,gBAAmB,EACnB,QAAW,IACX,aAAgB,EAChB,cAAiB,EACjB,YAAe,EACf,cAAiB,EACjB,YAAe,EACf,cAAiB,EACjB,YAAe,EACf,qBAAuB,EACvB,WAAc,EACd,SAAY,KACZ,YAAe,sBACf,aAAgB,KAChB,eAAiB,EACjB,iBAAmB,EACnB,OAAU,EACV,OAAU,KACV,eAAkB,KAClB,cAAiB,IACjB,4BAA+B,KAC/B,cAAiB,GACjB,cAAiB,GACjB,0BAA6B,EAC7B,UAAa,EACb,0BAA4B,EAC5B,SAAY,GACZ,UAAa,KACb,OAAU,KCsVGikC,GAnZE,CACb,0BAA6B,CACzB,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,IAGjB,SAAY,CACR,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,KACT,MAAS,KAGjB,OAAU,CACN,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,OACT,MAAS,MAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,OACT,MAAS,MAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,OACT,MAAS,MAEb,CACI,MAAS,KACT,MAAS,KAGjB,aAAgB,CACZ,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,IACT,MAAS,GAEb,CACI,MAAS,KACT,MAAS,IAEb,CACI,MAAS,KACT,MAAS,KAGjB,UAAa,CACT,CACI,MAAS,WACT,MAAS,OAEb,CACI,MAAS,cACT,MAAS,MAEb,CACI,MAAS,YACT,MAAS,KAEb,CACI,MAAS,UACT,MAAS,KAEb,CACI,MAAS,YACT,MAAS,MAGjB,OAAU,CACN,CACI,MAAS,mCACT,MAAS,KAEb,CACI,MAAS,kCACT,MAAS,MAGjB,wBAA2B,CACvB,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,gCACT,MAAS,iCAEb,CACI,MAAS,kCACT,MAAS,mCAEb,CACI,MAAS,mDACT,MAAS,oDAEb,CACI,MAAS,iDACT,MAAS,kDAEb,CACI,MAAS,mDACT,MAAS,oDAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,+BACT,MAAS,gCAEb,CACI,MAAS,iCACT,MAAS,kCAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,+BACT,MAAS,gCAEb,CACI,MAAS,iCACT,MAAS,kCAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,8BAGjB,cAAiB,CACb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,gCACT,MAAS,iCAEb,CACI,MAAS,kCACT,MAAS,mCAEb,CACI,MAAS,mDACT,MAAS,oDAEb,CACI,MAAS,iDACT,MAAS,kDAEb,CACI,MAAS,mDACT,MAAS,oDAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,cACT,MAAS,eAEb,CACI,MAAS,+BACT,MAAS,gCAEb,CACI,MAAS,iCACT,MAAS,kCAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,+BACT,MAAS,gCAEb,CACI,MAAS,iCACT,MAAS,kCAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,6BAEb,CACI,MAAS,0BACT,MAAS,2BAEb,CACI,MAAS,4BACT,MAAS,8BAGjB,yBAA4B,CACxB,CACI,MAAS,mBACT,MAAS,KAEb,CACI,MAAS,aACT,MAAS,KAEb,CACI,MAAS,mBACT,MAAS,KAEb,CACI,MAAS,yBACT,MAAS,KAEb,CACI,MAAS,SACT,MAAS,KAEb,CACI,MAAS,YACT,MAAS,MAGjB,oBAAuB,CACnB,CACI,MAAS,mBACT,MAAS,KAEb,CACI,MAAS,aACT,MAAS,KAEb,CACI,MAAS,SACT,MAAS,KAEb,CACI,MAAS,YACT,MAAS,O,8kBC5WrB,IAAMzuC,GAAUC,EAASC,OACnBwuC,GAASC,cACfC,0BAAc,GAg1BCC,IA90BH,WAIV,MAAoC10C,IAAMkG,UAAS,GAAnD,WAAKyuC,EAAL,KAAkBC,EAAlB,KA8BA,EAA8B50C,IAAMkG,SAxBb,CACrB,CAACgS,OAAO,GAAItH,SAAS,6CAA8C0uB,OAAO,MAAOhuB,OAAQ,GAAIutB,aAAc,iBAAkBlG,MAAO,0BAA2BxjB,WAAY,4CAA6CjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAC9S,CAAC58B,OAAO,EAAGtH,SAAS,+BAAgC0uB,OAAO,EAAGhuB,OAAQ,GAAIutB,aAAc,aAAclG,MAAO,kBAAmBxjB,WAAY,aAAcjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAChP,CAAC58B,OAAO,EAAGtH,SAAS,cAAe0uB,OAAO,EAAGhuB,OAAQ,GAAIutB,aAAc,sBAAuBlG,MAAO,0BAA2BxjB,WAAY,sBAAuBjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBACzP,CAAC58B,OAAO,EAAGtH,SAAS,6BAA8B0uB,OAAO,EAAGhuB,OAAQ,GAAIutB,aAAc,iBAAkBlG,MAAO,8BAA+BxjB,WAAY,iBAAkBjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAClQ,CAAC58B,OAAO,EAAGtH,SAAS,gCAA4B0uB,OAAO,GAAIhuB,OAAQ,GAAIutB,aAAc,iBAAkBlG,MAAO,qBAAsBxjB,WAAY,yBAA0BjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAChQ,CAAC58B,OAAO,EAAGtH,SAAS,yCAA0C0uB,OAAO,GAAIhuB,OAAQ,GAAIutB,aAAc,gBAAiBlG,MAAO,6BAA8BxjB,WAAY,GAAIjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAC/P,CAAC58B,OAAO,EAAGtH,SAAS,qBAAsB0uB,OAAO,EAAGhuB,OAAQ,GAAIutB,aAAc,iBAAkBlG,MAAO,8BAA+BxjB,WAAY,iBAAkBjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,gBAC1P,CAAC58B,OAAO,EAAGtH,SAAS,mCAAoC0uB,OAAO,EAAGhuB,OAAQ,GAAIutB,aAAc,iBAAkBlG,MAAO,8BAA+BxjB,WAAY,iBAAkBjE,YAAa,WAAYkuB,YAAY,YAAayV,aAAc,YAAaC,SAAS,kBAgB1Q,WAAKp8B,EAAL,KAEMq8B,GAFN,KAEyB,CACvBhpC,WAAW,EACXxJ,SAAU,KACVH,UAAW,KACXC,SAAU,KACVgnC,WAAY,KACZC,cAAe,KACft8B,UAAW,KACX2nC,aAAa,EACbprC,OAAQ,KACR,YAAa,KACb,eAAgB,CAACpH,KAAM,eAAgBgnB,OAAQ,YAC/C6P,QAAS,CAAC72B,KAAM,UAAWgnB,OAAQ,QACnCE,OAAQ,CAAClnB,KAAM,SAAUgnB,OAAQ,QACjCiN,OAAQ,KACRyB,UAAW,CAAC11B,KAAM,YAAagnB,OAAQ,QACvCzQ,WACAT,KAAM,GACNtH,QAAS,GACTiH,mBAAoB,GACpB8L,uBAAwB,KACxBrT,eACAE,mBAEA6tB,WAAY,KACZrgB,eAAe,EAKfhG,aAAc,KACdi9B,iBAAkB,KAClBhlB,cAAc,EACdka,SAAU,EACV1L,YAAa,KACbR,cAAc,EACdiX,YAAa,KACbC,WAAY,KACZjc,UAAW,KACXkc,aAAc,KACdC,YAAa,KACbtsB,WAvDiB,CACjB,CAAChgB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,cAAesqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAiB,kBACnQ,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,eAAgBsqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAiB,kBACpQ,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,mBAAoBsqB,KAAK,CAAC,aAAc,gBAAiB,0BAA2B,gBAAiB,iBAAkB,gBAAiB,2BACzT,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAKuC,IAAK,IAAKntB,KAAM,oBAAqBsqB,KAAK,CAAC,aAAc,WAAY,gBAAiB,2BAA4B,gBAAiB,iBAAkB,gBAAiB,+BACjV,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAI3qB,KAAM,gBAAiBsqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAiB,kBAC5P,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,eAAgBsqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAiB,kBACpQ,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,gBAAiBsqB,KAAK,CAAC,eAAgB,0BAA2B,gBAAiB,kBACpQ,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,oBAAqBsqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAgB,iBAAkB,kBAC1R,CAAChkB,GAAG,EAAGpG,MAAM,UAAWe,KAAK,qDAAsDupB,YAAa,aAAcC,WAAY,aAAcC,UAAW,IAAMC,IAAK,GAAIC,IAAI,IAAK5qB,KAAM,gBAAiBsqB,KAAK,CAAC,gBAAiB,0BAA2B,gBAAiB,mBA+CrQlsB,WAAY,KACZqnC,mBAAoB,KAGhBoN,EAAkB,YACnBC,KACAC,KAFmB,IAGtBl0C,OAAO,YACFi0C,IAAuBj0C,QACvBk0C,IAAkBl0C,QAFjB,IAGJ4H,QAAS,UACTgV,UAAW,UACXpE,SAAU,UACVm3B,OAAQ,UAERvtC,KAAM,UAENsG,QAAS,UACTC,UAAW,UACXiO,KAAM,UACNuZ,QAAS,UACT+H,UAAW,UACXic,QAAS,UACTC,SAAU,UACV3tC,YAAa,UACbC,WAAY,UACZ+3B,WAAY,UACZ31B,KAAM,UACN+1B,UAAW,UACXrJ,UAAW,OACX6e,SAAU,UACVzV,UAAW,UACXtH,MAAO,UACPte,UAAW,qBACXF,YAAa,qBACbqmB,cAAe,UACfD,UAAW,cAIToV,EAAe,YAChBC,KACAC,KAFgB,IAGnBx0C,OAAO,YACFu0C,IAAoBv0C,QACpBw0C,IAAex0C,QAFd,IAGJ4H,QAAS,UACTgV,UAAW,UACXpE,SAAU,UACVm3B,OAAQ,UACRvtC,KAAM,UAENsG,QAAS,UACTC,UAAW,UAEXiO,KAAM,UACNuZ,QAAS,UACT+H,UAAW,UACXic,QAAS,UACTC,SAAU,UACV3tC,YAAa,UACbC,WAAY,UACZ+3B,WAAY,UACZ31B,KAAM,UACN+1B,UAAW,UACXrJ,UAAW,UACX6e,SAAU,UACVzV,UAAW,UACX5lB,UAAW,UACXse,MAAO,UACPxe,YAAa,wBACbqmB,cAAe,UACfD,UAAW,cAIT74B,EAAQitC,EAAcgB,EAAkBN,EA+L9C,EAA8Br1C,IAAM81C,YA9LhB,SAACC,EAAWpC,GAC9B,OAAQA,EAAOpqB,MACb,IAAK,iBAYL,IAAK,QACH,OAAO,SACFwsB,GADL,IAEExzC,SAAUoxC,EAAO7qC,GACjB1G,UAAWuxC,EAAOvxC,UAClBC,SAAUsxC,EAAOtxC,SACjB2K,UAAW2mC,EAAO3Z,MAClBqP,WAAYsK,EAAOtK,WACnBC,cAAeqK,EAAOrK,cACtB1oC,WAAY+yC,EAAO/yC,WACnBmL,WAAW,IAEf,IAAK,SACH,OAAO,SACFgqC,GADL,IAEExzC,SAAU,KACVH,UAAW,KACXC,SAAU,KACV1B,SAAU,KACVqM,UAAW,KACXjB,WAAW,IAEf,IAAK,WACH,OAAO,SACFgqC,GADL,IAEExzC,SAAUoxC,EAAO7qC,GACjB1G,UAAWuxC,EAAOvxC,UAClBC,SAAUsxC,EAAOtxC,SACjB2K,UAAW2mC,EAAO3Z,MAClBjuB,WAAW,IAEf,IAAK,cACL,OAAO,SACFgqC,GADL,IAEE1lC,YAAcsjC,EAAOqC,mBACrBzlC,gBAAiBojC,EAAOsC,kBAG1B,IAAK,SACH,OAAO,SACFF,GADL,IAEExsC,OAAQoqC,EAAOuC,OAEnB,IAAK,aACH,OAAO,SACFH,GADL,IAEE,eAAgBpC,EAAO7C,YACvB9X,QAAS2a,EAAOwC,QAChB9sB,OAAQsqB,EAAOxnB,OACf0L,UAAW8b,EAAOyC,YAEtB,IAAK,iBACH,OAAO,SACFL,GADL,IAEE,YAAapC,EAAOuC,OAExB,IAAK,oBACH,OAAO,SACFH,GADL,IAEE,eAAgBpC,EAAOuC,OAE3B,IAAK,cACH,OAAO,SACFH,GADL,IAEE/c,QAAS2a,EAAOuC,OAEpB,IAAK,eACH,OAAO,SACFH,GADL,IAEE1sB,OAAQsqB,EAAOuC,OAEnB,IAAK,gBACH,OAAO,SACFH,GADL,IAEE3f,OAAQud,EAAOuC,OAEnB,IAAK,kBACH,OAAO,SACFH,GADL,IAEEle,UAAW8b,EAAOuC,OAEtB,IAAK,OACH,OAAO,SACFH,GADL,IAEEr9B,SAAUi7B,EAAOj7B,SACjB0lB,WAAYuV,EAAO0C,QAEvB,IAAK,SACH,OAAO,SACFN,GADL,IAEEr9B,SAAUi7B,EAAO2C,SAGrB,IAAK,OACH,OAAO,SACFP,GADL,IAEEr9B,SAAUi7B,EAAOuC,OAGrB,IAAK,SACH,OAAO,SACFH,GADL,IAEEjtB,WAAY6qB,EAAOuC,OAGvB,IAAK,SACH,OAAO,SACFH,GADL,IAEEh+B,aAAc47B,EAAOtX,OACrB2Y,iBAAkBrB,EAAO9iC,WAG7B,IAAK,OACH,OAAO,SACFklC,GADL,IAEE7L,SAAUyJ,EAAOn0B,MACjBgf,YAAamV,EAAO4C,SACpBvY,aAAc2V,EAAO6C,WAGzB,IAAK,WACH,OAAO,SACFT,GADL,IAEEb,WAAYvB,EAAO8C,UAEvB,IAAK,YACH,OAAO,SACFV,GADL,IAEEd,YAAatB,EAAO+C,WAExB,IAAK,YACH,OAAO,SACFX,GADL,IAEEX,YAAazB,EAAOgD,cAExB,IAAK,aACH,OAAO,SACFZ,GADL,IAEEZ,aAAcxB,EAAOiD,eAEzB,IAAK,aACH,OAAO,SACFb,GADL,IAEEn+B,mBAAoB+7B,EAAOuC,OAE/B,IAAK,yBACH,OAAO,SACFH,GADL,IAEEryB,uBAAwBiwB,EAAOkD,WAEnC,IAAK,gBACH,OAAO,SACFd,GADL,IAEEn1C,WAAY+yC,EAAOltC,MAEvB,IAAK,kBACH,OAAO,SACFsvC,GADL,IAEE9N,mBAAoB0L,EAAOxrC,UAkByB4sC,GAA5D,WAAOt0C,EAAP,KAAkBq2C,EAAlB,KAEMC,EAAc/2C,IAAMg3C,SAAQ,iBAAO,CACvC5rC,OAAQ,SAAM6rC,EAAWjB,EAAoBC,GAArC,6BAAA1vC,EAAAC,OAAA,uDACAwzB,EAAQid,EAAUtG,SAClB7nC,EAAKmuC,EAAUte,MACfv2B,EAAY60C,EAAU70C,UACtBC,EAAW40C,EAAU50C,SACrBzB,EAAaq2C,EAAUr2C,WACvByoC,EAAa4N,EAAU5N,WACvBC,EAAgB2N,EAAU3N,cAC5B4N,EAAc,CAAElB,qBAAoBC,mBARlC,qBAAA1vC,EAAA,MAYE8G,IAAaI,QAAQ,cAAeX,KAAKC,UAAUkqC,KAZrD,2BAAA1wC,EAAA,MAaE8G,IAAaI,QAAQ,cAAeX,KAAKC,UAAUmqC,KAbrD,0DAeJlf,QAAQC,IAAR,MAfI,QAiBN6e,EAAS,CAAEvtB,KAAM,QAASzgB,KAAIkxB,QAAO53B,YAAWC,WAAUgnC,aAAYC,gBAAe1oC,eACjFo1C,GAAsBC,GACxBa,EAAS,CAAEvtB,KAAM,cAAeysB,qBAAoBC,oBAnBhD,kEAuBR11C,QAAS,oBAAAgG,EAAAC,OAAA,2EAAAD,EAAA,MAEC8G,IAAa8pC,WAAW,gBAFzB,yBAAA5wC,EAAA,MAGC8G,IAAa8pC,WAAW,gBAHzB,uDAKLnf,QAAQC,IAAR,MALK,QAOP6e,EAAS,CAAEvtB,KAAM,WAPV,iEAST6tB,OAAQ,aAGR52C,YAAa,WACX62C,KAEF1Z,OAAQ,SAACne,GACP,IAAI82B,EAAS59B,EACb49B,EAAOgB,OAAO93B,EAAM,GAEpBs3B,EAAS,CAAEvtB,KAAM,SAAU+sB,YAE7B1Y,WAAY,SAAC1lB,GAKX4+B,EAAS,CAAEvtB,KAAM,aAAcunB,YAJb,CAAC3uC,KAAM,eAAgBgnB,OAAQ,OAAQkT,OAAQnkB,GAIrBi+B,QAH9B,CAACh0C,KAAM,UAAWgnB,OAAQ,OAAQkT,OAAQnkB,GAGHiU,OAFxC,CAAChqB,KAAM,SAAUgnB,OAAQ,OAAQkT,OAAQnkB,GAEOk+B,UAD7C,CAACj0C,KAAM,YAAagnB,OAAQ,OAAQkT,OAAQnkB,MAG9DoQ,UAAW,SAAC4tB,GAEV,GAAIA,EAEF,OADAA,EAAK7Z,OAAS57B,EAAUwX,KAAKC,OACrBg+B,EAAK/zC,MACX,IAAK,YACH20C,EAAS,CAAEvtB,KAAM,iBAAkB2sB,SACnC,MACF,IAAK,eACHY,EAAS,CAAEvtB,KAAM,oBAAqB2sB,SACtC,MACF,IAAK,UACHY,EAAS,CAAEvtB,KAAM,cAAe2sB,SAChC,MACF,IAAK,SACHY,EAAS,CAAEvtB,KAAM,eAAgB2sB,SACjC,MACF,IAAK,SACHY,EAAS,CAAEvtB,KAAM,gBAAiB2sB,SAClC,MACF,IAAK,YAEHY,EAAS,CAAEvtB,KAAM,kBAAmB2sB,SAI1CY,EAAS,CAAEvtB,KAAM,SAAU2sB,UAI7BvL,KAAM,SAAC1kC,EAAYsjB,EAAMrR,EAAQlL,EAAWq8B,EAAYC,GAOlDpxB,GAAkB,WAARqR,IACV9oB,EAAUkQ,QAAQuH,OAASA,GAG9BzX,EAAUkQ,QAAQO,YAAcC,IAAO1Q,EAAUkQ,QAAQO,aAAanD,OAAO,uBAC7EtN,EAAUkQ,QAAQsD,WAA6C,GAAhCxT,EAAUkQ,QAAQsD,WAElDsjC,EAAYtxC,EAAYiS,EAAQlL,EAAWuc,IAgB7CkU,eAAgB,SAACyY,GACfY,EAAS,CAAEvtB,KAAM,OAAQ2sB,UAE3BntB,cAAe,SAACmtB,GACdY,EAAS,CAAEvtB,KAAM,SAAU2sB,UAE7BxY,UAAW,SAACrB,EAAQxrB,GAClBimC,EAAS,CAAEvtB,KAAM,SAAU8S,SAAQxrB,cAErCg5B,WAAY,SAACxhC,EAAKmX,EAAMvZ,GAEtB,IAAIswC,EAAWluC,EAAK2hC,KAEpB/jC,EAAWi3B,SACX4Z,EAAS,CAAEvtB,KAAM,OAAQ/J,QAAM+2B,WAASC,UAFzB,KAIjB1c,eAAgB,SAAC7zB,EAAWm2B,EAAWD,EAAcnvB,EAAWhB,EAAeD,GAG7EyrC,EAAavxC,EAAYm2B,EAAYD,EAAcnvB,EAAWhB,EAAeD,IAqB/Ek1B,gBAAiB,SAACh7B,EAAWogC,EAAUD,EAAYlF,EAAYl1B,EAAaD,GAC1Es6B,EAAUra,UAAmC,GAAvBqa,EAAUra,UAChCqa,EAAU7Y,QAA+B,GAArB6Y,EAAU7Y,QAE9B6Y,EAAUpb,YAAc9Z,IAAOk1B,EAAUpb,aAAald,OAAO,uBAC7Ds4B,EAAUlb,WAAaha,IAAOk1B,EAAUlb,YAAYpd,OAAO,uBAC3Ds4B,EAAUiB,kBAAoBn2B,IAAOk1B,EAAUiB,mBAAmBv5B,OAAO,uBACzE0pC,EAAcxxC,EAAYogC,EAAWD,EAAalF,EAAYl1B,EAAaD,IAsB7EoE,WAAY,SAAC+lC,GAEXY,EAAS,CAAEvtB,KAAM,aAAc2sB,UAEjCxqC,cAAe,SAACjF,GAEdqwC,EAAS,CAAEvtB,KAAM,gBAAiB9iB,SAEpC8hB,gBAAiB,SAACpgB,GAEhB2uC,EAAS,CAAEvtB,KAAM,kBAAmBphB,UAEtCiI,0BAA2B,SAACymC,GAE1BC,EAAS,CAAEvtB,KAAM,yBAA0BstB,iBAY3C,IAEEQ,EAAY,oBAAA9wC,EAAAC,OAAA,gEAGdouC,EAAgBD,GAAeA,GAHjB,WAAApuC,EAAA,MAIR8G,IAAaI,QAAQ,cAAeknC,EAAc,IAAM,MAJhD,sDAMZ3c,QAAQC,IAAR,MANY,gEAeZwf,EAAgB,SAAOxxC,EAAYkC,EAAMohB,EAAMvc,EAAUhB,EAAaD,GAAtD,uBAAAxF,EAAAC,OAAA,uDAEhBC,EAAMZ,GAAU,4BAChBkB,EAAS,OACTL,EAAU,IAAIC,QACdkG,EAAOC,KAAKC,UAAU5E,GACb,mBAATohB,IAA4BxiB,EAAS,OAEzCL,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBoG,GAI5BnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,SACAL,UACAmG,SAhBgB,YAAAtG,EAAA,MAmBdS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAGCA,EAAamR,WAAanR,EAAaoR,KAEzCs+B,EAAS,CAAEvtB,KAAM,eAAgB2sB,KAAM,CAAC/zC,KAAM,SAAUgnB,OAAQ,YAChEljB,EAAWi3B,WAEXlxB,GAAyB,GACzBzE,IAAMC,MAAM,aAAcJ,EAAaK,aAI5CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MApCS,8DA8ChB+vC,EAAe,SAAOvxC,EAAYkC,EAAMohB,EAAMvc,EAAWhB,EAAeD,GAAzD,uBAAAxF,EAAAC,OAAA,uDACfC,EAAMZ,GAAU,iBAChBkB,EAAS,OACTL,EAAU,IAAIC,QACdkG,EAAOC,KAAKC,UAAU5E,GACb,cAATohB,IAAuBxiB,EAAS,OAEpCL,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBoG,GAI5BnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,SACAL,UACAmG,SAfe,YAAAtG,EAAA,MAkBbS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAGCA,EAAamR,WAAanR,EAAaoR,KAEzCs+B,EAAS,CAAEvtB,KAAM,cAAe2sB,KAAM,CAAC/zC,KAAM,UAAWgnB,OAAQ,YAChEljB,EAAWi3B,WAEX31B,IAAMC,MAAM,aAAcJ,EAAaK,SACvCuE,GAAyB,OAI9B3E,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MAnCQ,8DAyCf8vC,EAAc,SAAOtxC,EAAYiS,EAAQlL,EAAWuc,GAAtC,uBAAAhjB,EAAAC,OAAA,uDACdC,EAAMZ,GAAU,cAChBkB,EAAS,OACTL,EAAU,IAAIC,QACdkG,EAAOC,KAAKC,UAAUtM,EAAUkQ,SAEhCuH,IAAQnR,EAAS,OAGrBL,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,gBAAiBoG,GAI5BnG,EAAM,IAAIC,QAAQL,EAAK,CACvBM,SACAL,UACAmG,SAjBc,YAAAtG,EAAA,MAoBZS,MAAMH,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,GAAIA,EAAamR,WAAanR,EAAaoR,IAAI,CAC7C,GAAa,YAAT+Q,EAAmB,CACrB,IAAI8S,EAASj1B,EAAaoR,IAC1Bs+B,EAAS,CAAEvtB,KAAM,SAAU8S,WAE3Bya,EAAS,CAAEvtB,KAAM,iBAAkB2sB,KADxB,CAAC/zC,KAAM,YAAagnB,OAASkT,SAEnC,CAELya,EAAS,CAAEvtB,KAAM,iBAAkB2sB,KADxB,CAAC/zC,KAAM,YAAagnB,OAAS,YAI1CljB,EAAW0D,SAAS,iBAAkB,CAACJ,OAAQ,mBAG/ChC,IAAMC,MAAM,aAAcJ,EAAaK,YAG5CJ,OAAM,SAACC,GAEJ,OADAC,IAAMC,MAAM,mBAAoBF,EAAMG,UAC/B,MA1CO,8DA0HpB,OANApB,qBAAU,YAtEc,iDAAAE,EAAAC,OAAA,uDAClBkxC,GAAU,EACVC,EAAU,EACVj3C,EAAc,KACV6M,EAAiB,KACjB2pC,EAAc,KACdU,EAAiB,KACjB5B,EAAqB,KACrBC,EAAkB,KAClBjc,EAAQ,KACRz3B,EAAW,KACXH,EAAY,KACZC,EAAW,KACXzB,EAAa,KACbyoC,EAAa,KACbC,EAAgB,KAfF,sBAAA/iC,EAAA,MAqBe8G,IAAaC,QAAQ,gBArBpC,eAqBZuqC,EArBY,SAsBgC,MAAtBA,GAA4BjD,EAAgBD,EAAqC,KAAtBkD,GAtBrE,YAAAtxC,EAAA,MAuBI8G,IAAaC,QAAQ,gBAvBzB,eAuBhB5M,EAvBgB,QAwBhB6M,EAAiBT,KAAKU,MAAM9M,KAEN6M,EAAeyiC,WAAU2H,EAAUxmC,IAAO5D,EAAeyiC,UAAU8H,KAAK,IAAI3/B,KAAQ,YAEtGw/B,GAAW,IAAGD,GAAU,GAE1BnqC,GAAkBA,EAAeojC,WACjC3W,EAAQzsB,EAAeojC,SACvBpuC,EAAWgL,EAAeorB,MAC1Bv2B,EAAWmL,EAAenL,UAC1BC,EAAWkL,EAAelL,SAC1BzB,EAAa2M,EAAe3M,WAC5ByoC,EAAa97B,EAAe87B,WAC5BC,EAAgB/7B,EAAe+7B,eArCjB,YAAA/iC,EAAA,MAuCE8G,IAAaC,QAAQ,gBAvCvB,QAuClB4pC,EAvCkB,QAwClBU,EAAiB9qC,KAAKU,MAAM0pC,KACNU,EAAe5B,oBAAsB4B,EAAe3B,kBACxED,EAAqB4B,EAAe5B,mBACpCC,EAAkB2B,EAAe3B,iBA3CjB,mDA+ChBje,QAAQC,IAAR,MA/CgB,QAkDhB1qB,GAAkBA,EAAe2iC,cACnC3oC,IAAMC,MAAO,uBACb,+CACAsvC,EAAS,CAAEvtB,KAAM,YACRmuB,EAGTZ,EAAS,CAAEvtB,KAAM,YAGjButB,EAAS,CAAEvtB,KAAM,iBAAkByQ,QAAOlxB,GAAIvG,EAAUH,YAAWC,WAAUzB,aAAYyoC,aAAYC,kBAEjG0M,GAAsBC,GACxBa,EAAS,CAAEvtB,KAAM,cAAeysB,qBAAoBC,qBA/DpC,kEAwEpB8B,KAED,IAECt3C,EAAUsL,UAEV,kBAACjL,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAEQ,eAAe,SAASsD,WAAW,WACtD,kBAACkE,EAAA,EAAD,CAAmBvG,KAAK,QAAQC,MAAOrB,KAAO4H,WAKlD,kBAAC,IAAD,CAAevB,MAAOA,GACtB,kBAAC3H,EAAYi4C,SAAb,CAAsB30C,MAAO,CAAC0zC,EAAat2C,IACzC,kBAACw3C,EAAA,EAAD,CAAqBvwC,MAAOA,GACA,OAAxBjH,EAAUuM,UACV,kBAACunC,GAAOxtB,UAAR,CAAkBmxB,qBAAsB,CAAEC,sBAAuB,wBAAyBjxB,gBAAiB,UAC3GjL,UAAW,CAAEvX,UAAW,KAAMwtB,iBAAkB,KAAQkmB,YAAc,CAAEvuC,gBAAiB8qC,EAAc,UAAY,SAAUxzC,cAAe,SAAAhB,GAAK,OAAI,kBAACD,EAAkBC,KAEtK,kBAACo0C,GAAO3rC,OAAR,CAAepG,KAAK,OAAQglB,UAAW0lB,GAAiBhB,QAAS,CAC7DmM,WAAY,gBAAG31C,EAAH,EAAGA,MAAOD,EAAV,EAAUA,KAAV,OAAqB,kBAAC,UAAD,CAC7BA,KAAMA,EACND,KAAK,OACLE,MAAOA,QAEf,kBAAC6xC,GAAO3rC,OAAR,CAAepG,KAAK,aAAaglB,UAAWinB,GAAoBvC,QAAS,CACrEmM,WAAY,gBAAG31C,EAAH,EAAGA,MAAOD,EAAV,EAAUA,KAAV,OAAqB,kBAAC,IAAD,CAC7BA,KAAMA,EACND,KAAK,aACLE,MAAOA,EACP3B,MAAO,CAAE0D,YAAa,IAAKkK,WAAY,WAE/C,kBAAC4lC,GAAO3rC,OAAR,CAAepG,KAAK,aAAaglB,UAAW8mB,GAAoBpC,QAAS,CACrEmM,WAAY,gBAAG31C,EAAH,EAAGA,MAAOD,EAAV,EAAUA,KAAV,OAAqB,kBAAC,UAAD,CAC7BA,KAAMA,EACND,KAAK,WACLE,MAAOA,SA0BnB,kBAAC,GAAD,W,0DC52BR,IAAI8pB,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAAS8rB,EAAezxC,GACvB,IAAIiC,EAAKyvC,EAAsB1xC,GAC/B,OAAO2xC,EAAoB1vC,GAE5B,SAASyvC,EAAsB1xC,GAC9B,IAAI2xC,EAAoBC,EAAEjsB,EAAK3lB,GAAM,CACpC,IAAI6W,EAAI,IAAIzN,MAAM,uBAAyBpJ,EAAM,KAEjD,MADA6W,EAAEwqB,KAAO,mBACHxqB,EAEP,OAAO8O,EAAI3lB,GAEZyxC,EAAeI,KAAO,WACrB,OAAOC,OAAOD,KAAKlsB,IAEpB8rB,EAAeM,QAAUL,EACzB14C,EAAOC,QAAUw4C,EACjBA,EAAexvC,GAAK,K,4DCnSpBjJ,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.0ad58e8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.3589a1d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d5b0d959.png\";","import React from 'react';\r\n\r\nexport const AuthContext = React.createContext();","import React from 'react';\r\nimport { \r\n    View,\r\n    StyleSheet, \r\n    ImageBackground, \r\n    Image, \r\n    TouchableOpacity,\r\n    ScrollView,\r\n    Platform\r\n} from 'react-native';\r\nimport {\r\n    useTheme,\r\n    Avatar,\r\n    Title,\r\n    Caption,\r\n    Paragraph,\r\n    Drawer,\r\n    Text,\r\n    TouchableRipple,\r\n    Switch,\r\n} from 'react-native-paper';\r\nimport {\r\n    DrawerContentScrollView,\r\n    DrawerItem,\r\n    DrawerItemList\r\n} from '@react-navigation/drawer';\r\n\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Icon2 from 'react-native-vector-icons/Ionicons';\r\n//import Avatars from '../model/avatars';\r\nimport{ AuthContext } from '../components/context';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nexport function DrawerContent(props) {\r\n    const paperTheme = useTheme();\r\n    const [{ signOut, toggleTheme}, dataState] = React.useContext(AuthContext);\r\n    const userProfile = dataState;\r\n    \r\n    let portrait = null;\r\n    dataState.portrait = null;\r\n\r\n    \r\n    /*\r\n    const userData = Avatars.filter( item => {\r\n        return userProfile.userName == item.email;\r\n    });\r\n    \r\n    if (userData && userData.length) {\r\n        //Base64\r\n        portrait = `data:image/jpeg;base64, ${userData[0].avatar}`;\r\n\r\n       //console.log('this is portrait', portrait);\r\n        dataState.portrait = portrait;\r\n    } \r\n    */\r\n    \r\n    if (userProfile && userProfile.profilePic) {\r\n        portrait = userProfile.profilePic;  \r\n        if (portrait.indexOf('file:') === -1) {\r\n            portrait = `data:image/jpeg;base64, ` + userProfile.profilePic;\r\n        }\r\n        dataState.portrait = portrait;\r\n    }\r\n\r\n    \r\n    const help = async () => {\r\n        let HelpLink = 'https://oldcb-premiere.ebgsystems.net/CashBalance/help/index.htm';\r\n        let result = await WebBrowser.openBrowserAsync(HelpLink);\r\n        //setresult(thisresult = result)\r\n    };  \r\n\r\n    return(\r\n        <View style={{flex:1}}>\r\n            <ScrollView {...props}>\r\n                <View style={styles.drawerContent}>\r\n                <LinearGradient colors={['#72be03','#397e05']} style={styles.userInfoSection}>\r\n                        \r\n                        <View style ={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                            <TouchableOpacity>\r\n                                { dataState.portrait !== null ?\r\n                                    <Image source={{ uri: dataState.portrait }} style={styles.profile}/> :\r\n                                    <Image source={require(\"../assets/user.jpg\")} style={styles.profile} />\r\n                                }\r\n                            </TouchableOpacity>\r\n                            <View style ={styles.Box}>\r\n                            <Image source={require(\"../assets/logo.png\")} \r\n                            style={styles.logo} />\r\n                            <Text style = {styles.LogoName}>The Retirement Planning Center</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <Text style = {styles.Name}>{userProfile.firstName + ' ' + userProfile.lastName}</Text>\r\n\r\n                        <View style ={{flexDirection: 'row'}}>\r\n                            <Text style = {styles.Email}>{userProfile.userName}</Text>\r\n                            <Icon name=\"email\" size={16} color=\"white\" />\r\n                        </View>\r\n                     \r\n                    </LinearGradient >\r\n                    <Drawer.Section style={styles.drawerSection}>\r\n                        <DrawerItemList {...props} />\r\n                        {/*<DrawerItem icon ={({ focused, color, size }) => <Icon color={color} size={size} name='help' />}\r\n                            label=\"Help\"\r\n                            onPress={() => {help()}}\r\n                        />*/}\r\n                    </Drawer.Section>\r\n                    { /*<Drawer.Section style={styles.drawerSection}>\r\n                        <DrawerItem \r\n                            icon={({color, size}) => (\r\n                                <Icon \r\n                                name=\"home\" \r\n                                color={color}\r\n                                size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Home\"\r\n                            onPress={() => {props.navigation.navigate('Home')}}\r\n                        />\r\n                        <DrawerItem \r\n                            icon={({color, size}) => (\r\n                                <Icon2 \r\n                                name=\"ios-person\" \r\n                                color={color}\r\n                                size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Profile\"\r\n                            onPress={() => {props.navigation.navigate('Profile')}}\r\n                        />\r\n                        <DrawerItem \r\n                            icon={({color, size}) => (\r\n                                <Icon \r\n                                name=\"contacts\" \r\n                                color={color}\r\n                                size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Contact\"\r\n                            onPress={() => {props.navigation.navigate('BookmarkScreen')}}\r\n                        />\r\n                        <DrawerItem \r\n                            icon={({color, size}) => (\r\n                                <Icon \r\n                                name=\"settings\" \r\n                                color={color}\r\n                                size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Setup\"\r\n                            onPress={() => {props.navigation.navigate('SettingScreen')}}\r\n                        />\r\n                        <DrawerItem \r\n                            icon={({color, size}) => (\r\n                                <Icon \r\n                                name=\"help\" \r\n                                color={color}\r\n                                size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Help\"\r\n                            onPress={() => {props.navigation.navigate('SupportScreen')}}\r\n                        />\r\n                    </Drawer.Section> */}\r\n                    <Drawer.Section title=\"Preferences\">\r\n                        <TouchableRipple onPress={() => {toggleTheme()}}>\r\n                            <View style={styles.preference}>\r\n                                <Text>Dark Theme</Text>\r\n                                <View pointerEvents=\"none\">\r\n                                    <Switch style={styles.switch} color= \"#72be03\" value={paperTheme.dark}/>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableRipple>\r\n                    </Drawer.Section>\r\n                </View>\r\n            </ScrollView>\r\n            <Drawer.Section style={styles.bottomDrawerSection}>\r\n                <DrawerItem \r\n                    icon={({color, size}) => (\r\n                        <Icon \r\n                        name=\"exit-to-app\" \r\n                        color={color}\r\n                        size={size}\r\n                        />\r\n                    )}\r\n                    label=\"Sign Out\"\r\n                    onPress={() => {signOut()}}\r\n                />\r\n            </Drawer.Section>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    drawerContent: {\r\n        flex: 1,\r\n    },\r\n    userInfoSection: {\r\n        padding: 16,\r\n    },\r\n    profile: {\r\n        width: 80,\r\n        height: 80,\r\n        borderRadius: 40,\r\n        borderWidth: 3,\r\n        borderColor: 'white'\r\n    },\r\n    logo: {\r\n        //justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        alignContent: 'flex-end',\r\n        width: 100,\r\n        height: 60,\r\n    },\r\n    Name: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: '800',\r\n        marginVertical: 8\r\n    },\r\n    Box: {\r\n        flexDirection: 'column',\r\n    },\r\n    LogoName: {\r\n        fontSize: 9,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    },\r\n    Email: {\r\n        color: 'white',\r\n        fontSize: 13,\r\n        marginRight: 4,\r\n\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        marginTop: 3,\r\n        fontWeight: 'bold',\r\n    },\r\n    caption: {\r\n        fontSize: 14,\r\n        lineHeight: 14,\r\n    },\r\n    row: {\r\n        marginTop: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    section: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginRight: 15,\r\n    },\r\n    paragraph: {\r\n        fontWeight: 'bold',\r\n        marginRight: 3,\r\n    },\r\n    drawerSection: {\r\n        marginTop: 15,\r\n    },\r\n    bottomDrawerSection: {\r\n        marginBottom: 15,\r\n        borderTopColor: '#f4f4f4',\r\n        borderTopWidth: 1\r\n    },\r\n    preference: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 16,\r\n    },\r\n    switch: {\r\n        transform: Platform.OS === 'ios' ? [{ scaleX: .8 }, { scaleY: .8 }] : [{ scaleX: 1 }, { scaleY: 1 }],\r\n    }\r\n  });","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button,Dimensions,StatusBar,SafeAreaView,FlatList,ActivityIndicator, Alert } from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport Settings from '../settings.json';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst {width,height} = Dimensions.get('window');\r\nconst baseURL = Settings.domain;\r\nconst DATA = [\r\n  {\r\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\r\n    menuTitle: 'Create a New Plan',\r\n    menuImage: '../assets/Icon2.png',\r\n    menuDescription: 'Using the Plan Specification screens, this method gives the most flexibility in plan design and assumptions but requires more skill and retirement plan expertise.',\r\n    Screen: \"Census\"\r\n  },\r\n  {\r\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\r\n    menuTitle: 'View a Directory of Existing',\r\n    menuImage: '../assets/Icon1.png',\r\n    menuDescription: 'This function allows you to view, edit and copy existing plans. You can sort your existing plans by company name, date created/modified or plan type.',\r\n    Screen: \"Plan Directory\"\r\n  \r\n  },\r\n  {\r\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\r\n    menuTitle: 'Owner Only Plan Analysis',\r\n    menuImage: '../assets/Icon3.png',\r\n    menuDescription: 'A retirement plan analysis for highly compensated small business owners.',\r\n    Screen: \"Plan3\"\r\n  },\r\n];\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n  const { colors } = useTheme();\r\n  const [homeData, setHomeData] = useState(null);\r\n  \r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    // Update the homeData using the API\r\n    getHomeData();\r\n    //setHomeData(homeData => DATA);\r\n    //console.log(DATA, homeData);\r\n    //console.log(\"====>\", homeData);\r\n  }, []);\r\n\r\n  const feedback = async (ifFeedback) => {\r\n      let reportLink = 'https://www.ebgsystems.com/feedback';\r\n      let result = await WebBrowser.openBrowserAsync(reportLink);\r\n      ifFeedback = false;\r\n      //setresult(thisresult = result)\r\n  }; \r\n\r\n  const getHomeData = async () => {\r\n    let url = baseURL + '/CB_API/GetCBMenuAsync/1247';\r\n    let method = 'GET';\r\n    let headers = new Headers();\r\n    \r\n    headers.append('Content-Type', 'application/json');\r\n   \r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        //console.log('Response:', responseJson);\r\n        //console.log('Response: API Called');\r\n        setHomeData(homeData => responseJson);\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  const theme = useTheme();\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle= { theme.dark ? \"light-content\" : \"dark-content\" }/>\r\n      <LinearGradient \r\n            colors={[colors.linearlight,colors.linearDark]} //colors.text,'#668ecf'\r\n            style = {styles.listContaner}\r\n          >\r\n          {!homeData?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          :       \r\n          <SafeAreaView style={{marginTop: 2.5, flex: 1}}>\r\n            <FlatList\r\n              data={homeData}\r\n              renderItem={({ item }) => <Item title={item.menuTitle} Description={item.menuDescription} Icon={item.menuImage} Screen = {item.menuTitle} /> }\r\n              keyExtractor={item => item.id.toString()}\r\n            />\r\n          </SafeAreaView>  \r\n          }\r\n      </LinearGradient>\r\n  </View>\r\n  );\r\n\r\n    function Item({ title,Description,Icon,Screen }) {\r\n      Icon = `data:image/jpeg;base64, ${Icon}`; \r\n      let gotoTab = null;\r\n      let paramsVal = null;\r\n      let ifFeedback = false;\r\n      let myScreen = Screen.trim();\r\n      switch(myScreen) {\r\n        case 'Owner Only Plan Analysis':\r\n          myScreen = \"Owner Only\";\r\n          break;  \r\n        case 'PPA Calculator':\r\n            myScreen = \"PPA Calculator\";\r\n            break;\r\n        case 'Feedback':\r\n            ifFeedback = true;\r\n            break;        \r\n        case 'Create a new Plan':\r\n          gotoTab = 'Plan Details';\r\n          paramsVal = {screen: 'General', params: {homeClick: 'Add'}};\r\n          myScreen = \"Plan Directory\";\r\n          break;\r\n        default:\r\n          myScreen = \"Plan Directory\";\r\n      }\r\n      //require('../assets/Icon1.png');\r\n      //console.log(Icon.match(/(gif|png|jpg|jpeg)$/));\r\n      return (\r\n        <TouchableOpacity onPress={()=> {\r\n            if(ifFeedback === true){\r\n              feedback(ifFeedback);\r\n            }else{\r\n              navigation.navigate(myScreen, {screen: gotoTab, params: paramsVal /*,plansearch: false,censusSearch: false*/})\r\n            }\r\n          }}>\r\n          <View style={styles.item}>\r\n            {/*\r\n            <LinearGradient  \r\n            colors={[colors.icon,colors.icondark]}\r\n            style={[styles.IconContainer, {borderTopLeftRadius: 5,borderBottomLeftRadius: 5,}]}>\r\n              <Image style = {styles.Icon} source = {Icon} />  \r\n            </LinearGradient > */}\r\n            <View style={[styles.IconContainer, {backgroundColor: colors.icon}]}>\r\n              <Image style = {styles.Icon} source = {{uri : Icon}} />\r\n            </View> \r\n            <View style={[styles.TextContainer, {backgroundColor: colors.iconDes}]}>\r\n              <Text style={[styles.title,{color: colors.icontitle}]}>{title}</Text>\r\n              <View style={{ borderBottomWidth: 1.5,borderBottomColor: colors.text,marginBottom: 2,marginTop: 2 }}></View>\r\n              <Text style={[styles.Description,{ color: colors.text}]}>{Description}</Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n  },\r\n\r\n  listContaner:{\r\n    flex: 1,\r\n  },\r\n  \r\n  item: {\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n    height: height/4\r\n  },\r\n\r\n  IconContainer: {\r\n    width: '30%',\r\n    padding: 30,\r\n    borderTopLeftRadius: 5,\r\n    borderBottomLeftRadius: 5,\r\n    backgroundColor: 'white',    \r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n\r\n  TextContainer: {\r\n    width: '70%',\r\n    padding: 30,\r\n    borderTopRightRadius: 5,\r\n    borderBottomRightRadius: 5,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    \r\n  },\r\n  \r\n  title: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: height > 800 ? 28 : 20,\r\n  },\r\n\r\n  Description: {\r\n    textAlign: 'left',\r\n    fontSize: height > 800 ? 18 : 12\r\n  },\r\n\r\n  Icon: {\r\n    width: height > 800 ? 120 : 80,\r\n    height: height > 800 ? 120 : 80,\r\n    borderRadius: height > 800 ? 60 : 40,\r\n    borderWidth: 3,\r\n    borderColor: 'white',\r\n    alignSelf: 'center'\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, Button, StyleSheet, TouchableOpacity,Linking } from 'react-native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst BookmarkScreen = () => {\r\n\r\n    const Ebg = async () => {\r\n        let webLink = 'https://www.ebgsystems.com/';\r\n        let result = await WebBrowser.openBrowserAsync(webLink);\r\n        //setresult(thisresult = result) \r\n    };  \r\n    return (\r\n      <LinearGradient \r\n        colors={['#eeecc5','#fcfdf8']}\r\n        style = {styles.container}\r\n      >\r\n        <View style={styles.header}>\r\n          <Text style = {styles.Title}>Office</Text>\r\n        </View>\r\n        <View style={{padding: 20}}>\r\n          <Text style = {styles.SubTitle}>EBG Systems, Inc.</Text>\r\n          <Text style = {styles.info}>5320 N Sheridan Rd{\"\\n\"}\r\n                Unit 1610{\"\\n\"}\r\n                Chicago, IL 60640</Text>\r\n          <Text style = {styles.info}>P: (773) 866-2088</Text>\r\n          <Text style = {styles.info}>F: (773) 866-2012 </Text>\r\n          <TouchableOpacity onPress={()=> Linking.openURL('mailto:info@ebgsystems.com')}>\r\n            <Text style={styles.link}>info@ebgsystems.com</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={()=> Ebg()}>\r\n            <Text style={styles.link}>www.ebgsystems.com</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.header}>\r\n          <Text style = {styles.Title}>Support</Text>\r\n        </View>\r\n        <View style={{padding: 20}}>\r\n          <Text style = {styles.SubTitle}>Support Team</Text>\r\n          <Text style = {styles.info}>P: (773) 866-2087</Text>\r\n          <Text style = {styles.info}>F: (773) 866-2012</Text>\r\n          <TouchableOpacity onPress={()=> Linking.openURL('mailto:support@ebgsystems.com')}>\r\n            <Text style={styles.link}>support@ebgsystems.com</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </LinearGradient>\r\n    );\r\n};\r\n\r\nexport default BookmarkScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1, \r\n        //alignItems: 'center', \r\n        //justifyContent: 'center',\r\n    },\r\n    header: {\r\n      backgroundColor: '#008000',\r\n      padding: 10\r\n    },\r\n    Title: {\r\n      fontSize: 32,\r\n      fontWeight: 'bold',\r\n      color: 'white'\r\n    },\r\n    SubTitle: {\r\n      fontSize: 28,\r\n      color: '#008000',\r\n      marginBottom: 10,\r\n    },\r\n    info: {\r\n      fontSize: 18,\r\n    },\r\n    link: {\r\n      marginTop: 10,\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      color: '#008000',\r\n      textDecorationLine: 'underline',\r\n\r\n    },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, Button, StyleSheet, Dimensions, TouchableOpacity,Image, ScrollView } from 'react-native';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport{ AuthContext } from '../../components/context';\r\nimport * as ImagePicker from 'expo-image-picker'\r\n\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst SettingsScreen = ({navigation}) => {\r\n    const [{ toggleTheme }, dataState] = React.useContext(AuthContext);\r\n    let [Logo, setLogo] = React.useState(null);\r\n    const catchRbt = [\r\n      {\r\n        id: 1,  //'I'\r\n        //text: 'Yes', \r\n        label: 'Set Individual Logo'\r\n      },\r\n      {\r\n        id: 2, //'G'\r\n        //text: 'No',\r\n        label: 'Set Group Logo'\r\n      },\r\n    ];\r\n    const emails = [\r\n        {label: 'USA', value: 'usa'},\r\n        {label: 'UK', value: 'uk'},\r\n        {label: 'France', value: 'france'},\r\n    ]\r\n    const _pickLogo = async() => {\r\n      let CameraRollStatus = await ImagePicker.requestCameraRollPermissionsAsync()\r\n      if(CameraRollStatus.status === 'granted')\r\n      {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          allowsEditing: false,\r\n          aspect: [3, 3.5]\r\n        })\r\n        \r\n        if(!result.cancelled) {\r\n          setLogo(Logo = result.uri);\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <LinearGradient \r\n        colors={['#eeecc5','#fcfdf8']}\r\n        style = {styles.container}\r\n      >  \r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Setup Report Logo</Text>\r\n        </View>\r\n        <ScrollView style={{paddingLeft: 20, paddingRight: 20}}>\r\n          <Text style={[styles.subtitle, {marginTop: 20}]}>Select Logo Category:</Text>\r\n          <RadioButtonRN\r\n              data={catchRbt}\r\n              activeOpacity={2}\r\n              initial={1}\r\n              animationTypes={['pulse']}\r\n              style={{paddingLeft: 10,flexDirection: 'row'}}\r\n              textStyle={{paddingLeft: 10}}\r\n              boxStyle={{width: 150}}\r\n              box={false}\r\n              selectedBtn={(e) => {/*setCatchUp(CatchUp = e.id)*/}}\r\n              circleSize={13}\r\n              activeColor={'green'}\r\n              deactiveColor={'grey'}\r\n              textColor={'#333333'}\r\n            />\r\n            <Text style={[styles.subtitle,{marginTop: 12}]}>Select User:</Text>\r\n            <DropDownPicker\r\n                items={emails}\r\n                defaultValue={'uk'}             \r\n                zIndex={10}\r\n                placeholder=\"\"\r\n                placeholderStyle={{color: 'grey'}}\r\n                activeLabelStyle={{color: 'green'}}\r\n                labelStyle={{color: 'grey'}}\r\n                itemStyle={{justifyContent: 'flex-start'}}\r\n                style={{borderWidth: 1}}\r\n                dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                containerStyle={{ height: 38, marginTop: 12, marginBottom: 12}}\r\n                arrowColor='rgba(51,51,51,0.5)'\r\n                onChangeItem={item => {/*setYearOfParticipationForNRA(YearOfParticipationForNRA = item.value)*/}}\r\n            />\r\n            <Text style={styles.subtitle}>Upload Logo Image:</Text>\r\n\r\n            <View style={styles.button}>\r\n                <View style={{ padding: 20}}>\r\n                  { Logo !== null ?\r\n                    <Image source={{ uri: Logo }} style={{ width: height > 800 ? 500 : 250, height: height > 800 ? 500 : 250 }}/> :\r\n                    <Image source={require(\"../../assets/user.jpg\")} style={{ width: height > 800 ? 500 : 250, height: height > 800 ? 500 : 250 }} />\r\n                  }\r\n                </View>\r\n                <TouchableOpacity style={[styles.signIn, {backgroundColor: '#333333'}]} onPress={() => {_pickLogo()}}>\r\n                    <Text style={[styles.textSign, {color:'#fff'}]}>{'Upload Logo'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {marginTop: 15 }]}>\r\n                    <LinearGradient\r\n                        colors={['#72be03','#397e05']} //'#72be03','#397e05'\r\n                        style={styles.signIn}\r\n                        start={[0, 1]} end={[1, 0]}\r\n                    >\r\n                      <Text style={[styles.textSign, {color: 'white'}]}>Upload</Text>\r\n                    </LinearGradient>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n      </LinearGradient>\r\n    );\r\n};\r\n\r\nexport default SettingsScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    //alignItems: 'center', \r\n    //justifyContent: 'center'\r\n  },\r\n  header: {\r\n    backgroundColor: 'green',\r\n    padding: 15\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontWeight: 'bold'\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    marginTop: height > 800 ? 30 : 10\r\n  },\r\n  signIn: {\r\n      width: '100%',\r\n      marginTop: height > 800 ? 10 : 0,\r\n      height: 50,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: 10,\r\n      marginBottom: 15\r\n  },\r\n  textSign: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold'\r\n  },\r\n\r\n});\r\n","import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\nconst SupportScreen = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Help Screen</Text>\r\n        {/*<Button\r\n          title=\"Click Here\"\r\n          onPress={() => alert('Button Clicked!')}\r\n        />*/}\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default SupportScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { View, Text,Keyboard, Button, StyleSheet,TouchableOpacity, Image, Alert, Dimensions, TextInput,ActivityIndicator } from 'react-native';\r\n//import { useTheme} from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport * as ImageManipulator from 'expo-image-manipulator'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n//import RNPasswordStrengthMeter from 'react-native-password-strength-meter';\r\nimport RNModal from \"react-native-modal\";\r\nimport Settings from '../../settings.json';\r\n//import Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport user from '../../model/users.js';\r\nimport { Formik } from 'formik';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport moment from 'moment';\r\nconst window = Dimensions.get('screen');\r\nconst { width, height }  = window;\r\nconst baseURL1 = Settings.auth;\r\n\r\nconst ProfileScreen = ({ navigation }) => {\r\n  //const paperTheme = useTheme();\r\n  const [{ toggleTheme,setProfilePic }, dataState] = React.useContext(AuthContext);\r\n  const initialValues = {\r\n    old: '',\r\n    new: '',\r\n    confirm: '',\r\n    image: ''\r\n  }\r\n  \r\n  let [ProfileImage, setProfileImage] = React.useState(dataState.profilePic ? dataState.profilePic.indexOf('file') === -1 ? `data:image/jpeg;base64, ` + dataState.profilePic: dataState.profilePic: null);\r\n  let [hasImageUri, sethasImageUri] = React.useState(false);\r\n  let [showHidePassword, setshowHidePassword] = React.useState(false);\r\n  let [newPassword, setnewPassword] = React.useState('');\r\n  let [isLoading, setIsLoading] = React.useState(false);\r\n  let [isVisible, setIsVisible] = React.useState(false);\r\n  const [data, setData] = React.useState({\r\n      hasError: false,\r\n      disabled: true,\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      changePW: false, \r\n      uri: '../../../assets/images/profile.png',\r\n  });\r\n  const { colors } = useTheme();\r\n\r\n  const newPasswordInput = useRef();\r\n  const confirmPasswordInput = useRef();\r\n  \r\n  useEffect(() => {\r\n    //alert('refresh')\r\n    setProfileImage(ProfileImage = dataState.profilePic ? dataState.profilePic.indexOf('file') === -1 ? `data:image/jpeg;base64, ` + dataState.profilePic: dataState.profilePic: null)\r\n      //_makeRemoteRequest();\r\n  }, [dataState.profilePic]);\r\n  \r\n  const _makeRemoteRequest = async () => {\r\n      let headers = {\r\n          'Content-Type': 'application/json',\r\n          'userId': dataState._id,\r\n          'token': dataState.apiToken,\r\n          'clientId': Settings.clientId,\r\n      };\r\n      //console.log('joborder sent size-->', sizeOf(headers));\r\n      await fetch(Settings.site + '/api/joborders/?linemanId=' + dataState._id + '&type=1', {\r\n          method: 'GET',\r\n          headers ,\r\n      })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          //console.log('joborder received size-->', sizeOf(responseJson),responseJson);\r\n        //console.log(responseJson);\r\n          //this.setState({\r\n          //    data: responseJson,\r\n          //    loading: false,\r\n          //    BadgeCount: 0 //responseJson.length,\r\n          //});\r\n      })\r\n      .catch((error) => {\r\n          let isConnectionError = error.message.includes('Unrecognized token');\r\n          if (isConnectionError){\r\n              Alert.alert(\"DAS Connection Error\", \"Unable to connect to server. Please try again later.\");\r\n              return false;\r\n          } else {\r\n              Alert.alert(\"DAS Issue\", error.message);\r\n              return false;\r\n          }\r\n      }); \r\n  };\r\n\r\n  \r\n  const _pickImage = async() => {\r\n    // Ask the user for the permission to access the media library \r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"We need access to your media library to select and upload user profile image.\");\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      aspect: [3, 3.5]\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      sethasImageUri(hasImageUri = true);\r\n      setProfileImage(ProfileImage = result.uri);\r\n    }\r\n  }\r\n\r\n  const _captureImage = async() => {\r\n    // Ask the user for the permission to access the camera\r\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"We need access to your camera to capture and upload user profile image.\");\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync({\r\n      allowsEditing: true,\r\n      aspect: [3, 3.5]\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      sethasImageUri(hasImageUri = true);\r\n      setProfileImage(ProfileImage = result.uri);\r\n    }\r\n  }\r\n\r\n\r\n  const saveImage = async (values) => {\r\n    let url = baseURL1 + '/Profile';\r\n    let method = 'PUT';\r\n    let headers = new Headers();\r\n    let body = JSON.stringify({\"profilePic\":values});\r\n    \r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n    headers.append('src', 'CB');\r\n    headers.append('udid', Math.random().toString());\r\n    //console.log('getProfile >>>>>>>>>>> ',url,method,headers, values);\r\n    let req = new Request(url, {\r\n      method,\r\n      headers,\r\n      body\r\n    });\r\n    \r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        if (responseJson && responseJson.status === \"Success\"){\r\n           //console.log('Saved', responseJson);\r\n            //dataState.profilePic = values;\r\n            SaveToStorage(values);\r\n            Alert.alert(\r\n              'Profile',\r\n              'New profile picture saved.',\r\n              [\r\n                  {text: 'OK', onPress: () => {[setIsLoading(isLoading = false),\r\n                                                sethasImageUri(hasImageUri = false),\r\n                                                setIsVisible(isVisible = false),\r\n                                                setProfilePic(values), \r\n                                                navigation.navigate('Home')]}}\r\n              ]\r\n            );\r\n        } else {\r\n           //console.log('Error Save');\r\n            Alert.alert(\"Save Error\", \"Unable to save image. Please try again later.\");\r\n            sethasImageUri(hasImageUri = false);\r\n            setIsVisible(isVisible = false)\r\n            setIsLoading(isLoading = false);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      Alert.alert(\"Error\", error.message);       \r\n    });\r\n  }\r\n\r\n  const SaveToStorage = async(values) => {\r\n    let userProfile = await AsyncStorage.getItem('userProfile');\r\n    let userProfileObj = JSON.parse(userProfile);\r\n\r\n    userProfileObj.profilePic =  values;\r\n    await AsyncStorage.setItem('userProfile', JSON.stringify(userProfileObj));\r\n  }\r\n\r\n\r\n  const onSubmit1 = (values) => {\r\n\r\n    dataState.profilePic = values;\r\n    navigation.navigate('Home')\r\n    /*\r\n    if (isVisible === true) {\r\n      \r\n        if (values.old.toString().trim().length == 0){\r\n            //this.setState({hasError: true});\r\n            Alert.alert('Change Password','The Old Password field is required.');\r\n            \r\n        } else if (values.new.toString().trim().length == 0) {\r\n            //this.setState({hasError: true});\r\n            Alert.alert('Change Password','The New Password field is required.');\r\n            \r\n        } else if (values.confirm.toString().trim() != values.new.toString().trim()) {\r\n            //this.setState({hasError: true});\r\n            Alert.alert('Change Password','The New Password and Confirm Password field do not match.');\r\n        } else {\r\n            saveChanges(values);\r\n        }\r\n        \r\n    } else {\r\n        if (hasImageUri === true){\r\n            saveChanges(values);\r\n        } else {\r\n            //this.setState({hasError: true});\r\n            Alert.alert('User Account','No Changes Made.');\r\n        }\r\n    }*/\r\n  }\r\n\r\n  const onSubmit = async (values) => {\r\n    //this.setState({disabled: true});\r\n    if (values.trim().length > 0) {\r\n      let h = 250;\r\n      let w = 250;\r\n      let manipResult = await ImageManipulator.manipulateAsync(\r\n        values.trim(),\r\n        [{ resize: {width: w, height: h} }], \r\n        {compress: 1, format: ImageManipulator.SaveFormat.JPEG, base64: true }\r\n      );\r\n      \r\n      saveImage(manipResult.base64);\r\n      \r\n      \r\n    } else {\r\n        //updatePassword(values.old, values.new);\r\n    } \r\n    Keyboard.dismiss();\r\n  };\r\n\r\n\r\n  const updatePortrait = async (file) => {\r\n    await fetch(Settings.site + '/api/userportrait/'+ dataState._id , {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'userId': dataState._id,\r\n            'token': dataState.apiToken,\r\n            'clientId': Settings.clientId,\r\n        },\r\n        body: JSON.stringify({\r\n            \"file\": file\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        if (responseJson.success){\r\n            let suffix = moment().format('MMDDYYYYhhmmss');\r\n            portrait = Settings.site + '/api/userportrait/'+ dataState._id + \".jpg?\" + suffix; \r\n            dataState.portrait = portrait;\r\n            dataState.suffix = suffix;\r\n            Alert.alert(\r\n                'Profile',\r\n                'New profile picture saved.',\r\n                [\r\n                    {text: 'OK', onPress: () => { navigation.goBack()}}\r\n                ]\r\n            );\r\n        } else{\r\n            Alert.alert('Profile','Error: Please try again.');\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        let isConnectionError = error.message.includes('Unrecognized token');\r\n        if (isConnectionError){\r\n            Alert.alert(\"DAS Connection Error\", \"Unable to connect to server. Please try again later.\");\r\n            return false;\r\n        } else {\r\n            Alert.alert(\"Error\", error.message);\r\n            return false;\r\n        }\r\n    });\r\n    \r\n};\r\n\r\nconst updatePassword = async (oldPassword, newPassword) => {\r\n  //console.log('====> Password', oldPassword, newPassword);\r\n\r\n  await fetch(Settings.site + '/api/login/'+ dataState._id , {\r\n      method: 'PUT',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'userId': dataState._id,\r\n          'token': dataState.apiToken,\r\n          'clientId': Settings.clientId,\r\n      },\r\n      body: JSON.stringify({\r\n          \"oldPassword\": oldPassword,\r\n          \"newPassword\": newPassword\r\n      })\r\n  })\r\n  .then((response) => response.json())\r\n  .then((responseJson) => {     \r\n      if (responseJson.success){\r\n          setIsVisible(false);\r\n          Alert.alert(\r\n              'Password',\r\n              'New Password saved.',\r\n              [\r\n                  {text: 'OK', onPress: () => { navigation.goBack()}}\r\n              ]\r\n          );\r\n      } else{\r\n          Alert.alert('Password', responseJson.details);\r\n      }\r\n  })\r\n  .catch((error) => {\r\n      \r\n      let isConnectionError = error.message.includes('Unrecognized token');\r\n      if (isConnectionError){\r\n          Alert.alert(\"DAS Connection Error\", \"Unable to connect to server. Please try again later.\");\r\n          return false;\r\n      } else {\r\n          Alert.alert(\"Error\", error.message);\r\n          return false;\r\n      }\r\n  });\r\n\r\n};\r\n\r\n\r\n  const validatePassword = () => {\r\n    if (data.oldPassword.toString().trim().length == 0){\r\n        Alert.alert('Change Password','The Old Password field is required.');\r\n        \r\n    } else if (data.newPassword.toString().trim().length == 0) {\r\n        setData({...data, hasError: true});\r\n        Alert.alert('Change Password','The New Password field is required.');\r\n        \r\n    } else if (data.confirmPassword.toString().trim() != data.newPassword.toString().trim()) {\r\n        setData({...data, hasError: true});\r\n        Alert.alert('Change Password','The New Password and Confirm Password field do not match.');\r\n    } else {\r\n        //updatePassword(data.oldPassword, data.newPassword);\r\n    }\r\n  }\r\n  const onChangeOldPassword = (password) => {\r\n    //, score, { label, labelColor, activeBarColor }\r\n    setData({...data, oldPassword : password });\r\n  }\r\n\r\n  const onChangeNewPassword = (password) => {\r\n    setData({...data, newPassword : password });\r\n  }\r\n\r\n  const onChangeConfirmPassword = (password) => {\r\n    setData({...data, confirmPassword : password });\r\n  }\r\n\r\n\r\n  let submitText = 'grey';\r\n  let submitBackcolor = 'lightgrey';\r\n\r\n  if (hasImageUri === true && isVisible === false) {\r\n    submitText = 'white';\r\n    submitBackcolor = '#72be03';\r\n  }\r\n\r\n\r\n    return (\r\n      <KeyboardAwareScrollView style={styles.container}>\r\n          <RNModal style={styles.modalContainer} isVisible={isVisible}>\r\n                <View style={{backgroundColor: \"white\", borderRadius: 4, borderColor: \"rgba(0, 0, 0, 0.1)\", width: width - 50, height: 430,}}>\r\n                    <View>\r\n                        <View style={styles.modalNavBar}>\r\n                           \r\n                            <Text allowFontScaling={false} style={styles.headerPassStyle}> Password Change</Text>\r\n                           \r\n                            <TouchableOpacity onPress={() => setIsVisible(false)}>\r\n                                <Icon style={{color: \"white\", marginLeft: 15}} name=\"close\" size={25} />\r\n                            </TouchableOpacity>                                \r\n                           \r\n                        </View>\r\n                        <View style={[styles.modalBody, {marginTop:10}]}>\r\n                            <View>\r\n                                {/*<Text allowFontScaling={false} style={styles.textStyle2}>Update your password to continue.</Text>*/}\r\n                                <Text allowFontScaling={false} style={{fontSize: 13, color: '#95a5a6', paddingLeft: 25 }}>\r\n                                    Minimum of 8 characters. Must contain 1-small letter, 1-uppercase letter, 1-number, and 1-symbol.\r\n                                </Text>\r\n                                \r\n                                <View style={{paddingLeft:25, paddingRight: 25, paddingTop: 15}}>\r\n                                    <Text allowFontScaling={false} style={{fontSize: 13, color: '#16a085', fontWeight: 'bold', marginBottom: -15, paddingLeft: 10}}>Old Password</Text>\r\n                                    {/*<RNPasswordStrengthMeter\r\n                                        onChangeText={onChangeOldPassword}\r\n                                        meterType =\"bar\"\r\n                                        inputProps = { {placeholder: \"Enter Old Password\", secureTextEntry: true } }\r\n                                        passwordProps = {{minLength: 1, scoreLimit: 100, width: width - 120}}\r\n                                    />   */}                                \r\n                                </View>\r\n                                \r\n                                <View style={{paddingLeft:25, paddingRight: 25}}>\r\n                                    <Text allowFontScaling={false} style={{fontSize: 13, color: '#16a085', fontWeight: 'bold', marginBottom: -15, paddingLeft: 10}}>New Password</Text>\r\n                                    {/*<RNPasswordStrengthMeter\r\n                                        onChangeText={onChangeNewPassword}\r\n                                        meterType =\"bar\"\r\n                                        inputProps = { {placeholder: \"Enter New Password\", secureTextEntry: true } }\r\n                                        passwordProps = {{minLength: 1, scoreLimit: 100, width: width - 120}}                                        \r\n                                    />  */}                                 \r\n                                </View>\r\n\r\n                                <View style={{paddingLeft:25, paddingRight: 25}}>\r\n                                    <Text allowFontScaling={false} style={{fontSize: 13, color: '#16a085', fontWeight: 'bold', marginBottom: -15, paddingLeft: 10}}>Confirm Password</Text>\r\n                                    {/*<RNPasswordStrengthMeter\r\n                                        onChangeText={onChangeConfirmPassword}\r\n                                        meterType =\"bar\"\r\n                                        inputProps = { {placeholder: \"Confirm Password\", secureTextEntry: true } }\r\n                                        passwordProps = {{minLength: 1, scoreLimit: 100, width: width - 120}}\r\n                                    /> */}                              \r\n                                </View>                             \r\n                                \r\n                                <View style={styles.modalFooter}>\r\n                                    <TouchableOpacity \r\n                                        disabled= {data.changePW}\r\n                                        onPress={() => validatePassword()}\r\n                                        style={[styles.bubble, styles.buttonModal, {width:120}]}>\r\n                                        <Text allowFontScaling={false} style={{color:'white'}}>CHANGE</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>        \r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </RNModal>\r\n         \r\n            <View>\r\n              <View style={styles.leftNav}>\r\n                <Text allowFontScaling={false} style={styles.textStyle}>Manage Account</Text>\r\n              </View>  \r\n              <View style={styles.profileBtn}>\r\n                <View style={{ padding: 20}}>\r\n                  { ProfileImage !== null ?\r\n                    <Image source={{ uri: ProfileImage }} style={{ width: height > 800 ? 500 : 250, height: height > 800 ? 500 : 250, borderRadius: height > 800 ? 250 : 125 }}/> :\r\n                    <Image source={require(\"../../assets/user.jpg\")} style={{ width: height > 800 ? 500 : 250, height: height > 800 ? 500 : 250, borderRadius: height > 800 ? 250 : 125 }} />\r\n                  }\r\n                </View>\r\n                <TouchableOpacity onPress={() => _captureImage()} style={[styles.bubble, styles.button, {width: '100%'}]}>\r\n                  <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                    <Icon name=\"camera-plus\" size={20} color=\"white\" style={{marginRight: 5}} />\r\n                    <Text allowFontScaling={false} style={{color:'white',fontWeight: 'bold'}}>CAPTURE PHOTO</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => {_pickImage()}} style={[styles.bubble, styles.button, {width: '100%'}]}>\r\n                  <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n                    <Icon name=\"folder\" size={20} color=\"white\" style={{marginRight: 5}}/>\r\n                    <Text allowFontScaling={false} style={{color:'white',fontWeight: 'bold'}}>SELECT PHOTO</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n\r\n                {/*\r\n                  <TouchableOpacity onPress={() => setIsVisible(true)} style={[styles.bubble, styles.button, {width: '100%'}]}>\r\n                    <Text allowFontScaling={false} style={{color:'white', fontWeight: 'bold'}}>CHANGE PASSWORD</Text>\r\n                </TouchableOpacity>\r\n                */}\r\n\r\n                  {/*showHidePassword ?\r\n                    <View style={{paddingTop:20}}>\r\n                        <TextInput\r\n                          //onChangeText={(val) => setPlanEffDate(PlanEffDate = val)}\r\n                          onChangeText={handleChange('old')}\r\n                          value={values.old}\r\n                          label=\"Old Password\"\r\n                          placeholder=\"Enter Old Password\"\r\n                          underlineColorAndroid=\"grey\"\r\n                          selectionColor = \"red\"\r\n                          secureTextEntry\r\n                          onSubmitEditing={() => newPasswordInput.current.focus()}\r\n                        />\r\n                        <TextInput\r\n                            onChangeText={handleChange('new')}\r\n                            value={newPassword}\r\n                            label=\"New Password\"\r\n                            placeholder=\"Enter New Password\"\r\n                            secureTextEntry\r\n                            ref={newPasswordInput} \r\n                            onSubmitEditing={() => confirmPasswordInput.current.focus()}\r\n                        />\r\n                        \r\n                        <TextInput\r\n                            onChangeText={handleChange('confirm')}\r\n                            value={values.confirm}\r\n                            label=\"Confirm Password\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            secureTextEntry\r\n                            ref={confirmPasswordInput}\r\n                            onSubmitEditing={() => onSubmit(values)} \r\n                        />\r\n                    </View>\r\n                  : null*/}\r\n\r\n                <TouchableOpacity disabled={hasImageUri === false && isVisible === false || isLoading === true } onPress={() => {[setIsLoading(isLoading = true), onSubmit(ProfileImage)]}} style={[styles.bubble, styles.button, {backgroundColor: submitBackcolor, width: '100%'}]}>\r\n                    {isLoading ?\r\n                        <ActivityIndicator size=\"large\" color={'white'}/>\r\n                        :\r\n                        <Text allowFontScaling={false} style={{color: submitText, fontWeight: 'bold'}}>SUBMIT</Text>\r\n                    }   \r\n                </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n         \r\n      </KeyboardAwareScrollView>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    //alignItems: 'center', \r\n    //justifyContent: 'center',\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    //padding: 10\r\n    //backgroundColor: 'white'\r\n  },\r\n  leftNav: {\r\n    //flexDirection: 'row',\r\n  },\r\n  profileBtn: {\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    padding: 10,\r\n  },\r\n  textStyle: {\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'grey'\r\n  },\r\n  bubble: {\r\n      backgroundColor: '#72be03',\r\n      //paddingHorizontal: 18,\r\n      paddingVertical: 12,\r\n      borderRadius: 5,\r\n      //width: '100%'\r\n  },\r\n  button: {\r\n      marginTop: 10,\r\n      height: 45,\r\n      justifyContent: 'center',\r\n      //paddingHorizontal: 12,\r\n      alignItems: 'center',\r\n      //marginHorizontal: 10,\r\n  },\r\n  modalContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modalNavBar: {\r\n      height: 40,\r\n      backgroundColor: '#16a085',\r\n      elevation: 3,\r\n      paddingHorizontal: 10,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n  },\r\n  buttonModal: {\r\n    marginTop: 12,\r\n    //paddingHorizontal: 12,\r\n    alignItems: 'center',\r\n    ///marginHorizontal: 10,\r\n  },\r\n  modalFooter: {\r\n    paddingRight: 17,\r\n    //paddingHorizontal: 17,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n  }, \r\n  headerPassStyle: {\r\n    marginLeft: 10,\r\n    //marginBottom: 5,\r\n    fontSize:18,\r\n    fontWeight: 'bold',\r\n    color: 'white'\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,Button,ScrollView,TextInput, Alert, ActivityIndicator,Platform,Dimensions } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport CheckBox from 'react-native-check-box';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n//import RadioButton from 'react-native-customizable-radio-button';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport moment from 'moment';\r\nimport Settings from '../../settings.json';\r\nimport { set } from 'react-native-reanimated';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nconst baseURL = Settings.domain;\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst General = ({  route, Error, SetError }) => {\r\n  const [{setDetails, updateOverrideSegRatesNew}, dataState] = React.useContext(AuthContext);\r\n  const DefaultPlan = dataState.DefaultPlan;\r\n  const DropdownData = dataState.DefaultDropdown;\r\n  const [planDetailsData, setPlanDetailsData] = React.useState(null);\r\n  let planDetailsDataState = dataState.Details; //dataState.General for checking\r\n  \r\n  //console.log('==PlanID==>', dataState.plan.planId);\r\n  //console.log('==SelectedPlanID==>', dataState.selectedPlan);\r\n\r\n  let [PlanName, setPlanName] = React.useState(DefaultPlan.planName); \r\n  let [PlanDescription, setPlanDescription] = React.useState(DefaultPlan.planDescription); \r\n  let [PlanEffDate, setPlanEffDate] = React.useState(DefaultPlan.planEffDate? moment(DefaultPlan.planEffDate).format('MM/DD/YYYY'):null); \r\n  let [RetAge, setRetAge] = React.useState(DefaultPlan.retAge.toString? DefaultPlan.retAge.toString():null); \r\n  let [YearOfParticipationForNRA, setYearOfParticipationForNRA] = React.useState(DefaultPlan.yearOfParticipationForNRA);\r\n  let [PSRetAge, setPSRetAge] = React.useState(DefaultPlan.psRetAge);\r\n  let [MinAge, setMinAge] = React.useState(DefaultPlan.minAge);\r\n  let [MonthCk, setMonthCk] = React.useState(DefaultPlan.minSvcMonths != null ? true : false);\r\n  let [MinSvcMonths, setMinSvcMonths] = React.useState(DefaultPlan.minSvcMonths);\r\n  let [HourCk, setHourCk] = React.useState((DefaultPlan.minSvcHours && DefaultPlan.minSvcHours > 0) ? true : false);\r\n  let [MinSvcHours, setMinSvcHours] = React.useState(DefaultPlan.minSvcHours ? DefaultPlan.minSvcHours.toString():\"0\");\r\n  let [EntryDate, setEntryDate] = React.useState(DefaultPlan.entryDate); \r\n  let [VestingSchedYear1, setVestingSchedYear1] = React.useState(DefaultPlan.vestingSchedYear1 ? DefaultPlan.vestingSchedYear1.toString():\"0\");\r\n  let [VestingSchedYear2, setVestingSchedYear2] = React.useState(DefaultPlan.vestingSchedYear2 ? DefaultPlan.vestingSchedYear2.toString():\"0\");\r\n  let [VestingSchedYear3, setVestingSchedYear3] = React.useState(DefaultPlan.vestingSchedYear3 ? DefaultPlan.vestingSchedYear3.toString():null); \r\n  let [ExcludedYears_18, setExcludedYears_18] = React.useState(DefaultPlan.excludedYears_18); \r\n  let [ExcludedYears_Eff, setExcludedYears_Eff] = React.useState(DefaultPlan.excludedYears_Eff); \r\n  let [AgeDefinition, setAgeDefinition] = React.useState(DefaultPlan.ageDefinition === \"N\"? 1 : 2); \r\n  let [HCETopPaid, setHCETopPaid] = React.useState(DefaultPlan.hceTopPaid == 1? 1: 2); \r\n  let [IncludeDefInEmployerCost, setIncludeDefInEmployerCost] = React.useState(DefaultPlan.includeDefInEmployerCost); \r\n  let [Include401k, setInclude401k] = React.useState(DefaultPlan.include401k); \r\n  let [MinTaxBracket, setMinTaxBracket] = React.useState(DefaultPlan.minTaxBracket ? DefaultPlan.minTaxBracket.toString():null); \r\n  let [MaxTaxBracket, setMaxTaxBracket] = React.useState(DefaultPlan.maxTaxBracket ? DefaultPlan.maxTaxBracket.toString():null); \r\n  let [Entity, setEntity] = React.useState(DefaultPlan.entity); \r\n  let [PreparedBy, setPreparedBy] = React.useState(DefaultPlan.preparedBy); \r\n  let [CompanyName, setCompanyName] = React.useState(DefaultPlan.companyName); \r\n  let [Showlogo, setShowlogo] = React.useState(DefaultPlan.showLogo); \r\n  let [MinSvcType, setMinSvcType] = React.useState(DefaultPlan.minSvcType); \r\n  \r\n  if(MinSvcType === 1){\r\n    MonthCk = true;\r\n    HourCk = false;\r\n    planDetailsDataState.minSvcType = 1;\r\n  }\r\n  else if(MinSvcType === 2){\r\n    MonthCk = false;\r\n    HourCk = true;\r\n    planDetailsDataState.minSvcType = 2;\r\n  }\r\n  else if(MinSvcType === 3){\r\n    MonthCk = true;\r\n    HourCk = true;\r\n    planDetailsDataState.minSvcType = 3;\r\n  }\r\n  else if(MinSvcType === 0){\r\n    MonthCk = false;\r\n    HourCk = false;\r\n    planDetailsDataState.minSvcType = 0;\r\n  }\r\n\r\n  planDetailsDataState.planName = PlanName;\r\n  planDetailsDataState.planDescription = PlanDescription;\r\n  planDetailsDataState.planEffDate = PlanEffDate;\r\n  planDetailsDataState.retAge = RetAge;\r\n  planDetailsDataState.yearOfParticipationForNRA = YearOfParticipationForNRA === undefined ? null : YearOfParticipationForNRA;\r\n  planDetailsDataState.psRetAge = PSRetAge === undefined ? null : PSRetAge;\r\n  planDetailsDataState.minAge = MinAge === undefined ? null : MinAge;\r\n  planDetailsDataState.monthCk = MonthCk;\r\n  planDetailsDataState.minSvcMonths = MinSvcMonths === undefined ? null : MinSvcMonths;\r\n  planDetailsDataState.hourCk = HourCk;\r\n  planDetailsDataState.minSvcHours = MinSvcHours  ? MinSvcHours.toString() : \"0\";\r\n  planDetailsDataState.entryDate = EntryDate === undefined ? null : EntryDate;\r\n  planDetailsDataState.vestingSchedYear1 = VestingSchedYear1 ? VestingSchedYear1.toString() : \"0\";\r\n  planDetailsDataState.vestingSchedYear2 = VestingSchedYear2 ? VestingSchedYear2.toString() : \"0\";\r\n  planDetailsDataState.vestingSchedYear3 = VestingSchedYear3 ? VestingSchedYear3.toString() : \"0\";\r\n  planDetailsDataState.excludedYears_18 = ExcludedYears_18;\r\n  planDetailsDataState.excludedYears_Eff = ExcludedYears_Eff\r\n  planDetailsDataState.ageDefinition = AgeDefinition === 1 ? \"N\" : \"Y\";\r\n  planDetailsDataState.hceTopPaid = HCETopPaid === undefined ? null : HCETopPaid;\r\n  planDetailsDataState.includeDefInEmployerCost = IncludeDefInEmployerCost;\r\n  planDetailsDataState.include401k = Include401k;\r\n  planDetailsDataState.minTaxBracket = MinTaxBracket ? MinTaxBracket.toString() : \"0\";\r\n  planDetailsDataState.maxTaxBracket = MaxTaxBracket ? MaxTaxBracket.toString() : \"0\";\r\n  planDetailsDataState.entity = Entity === undefined ? null : Entity;\r\n  planDetailsDataState.preparedBy = PreparedBy;\r\n  planDetailsDataState.companyName = CompanyName;\r\n  planDetailsDataState.showLogo = Showlogo;\r\n\r\n  const Scroll = React.useRef();\r\n  let controller;\r\n  //Dd1;\r\n  //let Dd1 = React.useRef(); \r\n  const Dd2 = React.useRef();\r\n  let [TesthideDrop, setTesthideDrop] = React.useState(false); \r\n  let [MinAgehideDrop, setMinAgehideDrop] = React.useState(false); \r\n  let [MonthHideDrop, setMonthHideDrop] = React.useState(false); \r\n  let [EntryHideDrop, setEntryHideDrop] = React.useState(false); \r\n  let [TaxHideDrop, setTaxHideDrop] = React.useState(false); \r\n\r\n  let [TestAgemargin, setTestAgemargin] = React.useState(0); \r\n  let [MinAgemargin, setMinAgemargin] = React.useState(0); \r\n  let [Monthmargin, setMonthmargin] = React.useState(0); \r\n  let [EntryDatemargin, setEntryDatemargin] = React.useState(0); \r\n  let [Taxmargin, setTaxmargin] = React.useState(0); \r\n\r\n  let DropSelected = null;\r\n  const DropdownController = (DropSelected) => {\r\n    if(DropSelected === 1)//Test Age\r\n    {\r\n      setTestAgemargin(TestAgemargin = 150)\r\n      setTesthideDrop(TesthideDrop = true)\r\n\r\n      setMinAgemargin(MinAgemargin = 0)\r\n      setMinAgehideDrop(MinAgehideDrop = false)\r\n\r\n      setMonthmargin(Monthmargin = 0)\r\n      setMonthHideDrop(MonthHideDrop = false)\r\n      setEntryDatemargin(EntryDatemargin = 0)\r\n      setEntryHideDrop(EntryHideDrop = false)\r\n\r\n      setTaxmargin(Taxmargin = 0)\r\n      setTaxHideDrop(TaxHideDrop = false)\r\n    }\r\n    else if(DropSelected === 2)//Min Age\r\n    {\r\n      setTestAgemargin(TestAgemargin = 0)\r\n      setTesthideDrop(TesthideDrop = false)\r\n\r\n      setMinAgemargin(MinAgemargin = 150)\r\n      setMinAgehideDrop(MinAgehideDrop = true)\r\n\r\n      setMonthmargin(Monthmargin = 0)\r\n      setMonthHideDrop(MonthHideDrop = false)\r\n      setEntryDatemargin(EntryDatemargin = 0)\r\n      setEntryHideDrop(EntryHideDrop = false)\r\n      setTaxmargin(Taxmargin = 0)\r\n      setTaxHideDrop(TaxHideDrop = false)\r\n    }\r\n    else if(DropSelected === 3)//Month\r\n    {\r\n      setTestAgemargin(TestAgemargin = 0)\r\n      setTesthideDrop(TesthideDrop = false)\r\n\r\n      setMinAgemargin(MinAgemargin = 0)\r\n      setMinAgehideDrop(MinAgehideDrop = false)\r\n\r\n      setMonthmargin(Monthmargin = 150)\r\n      setMonthHideDrop(MonthHideDrop = true)\r\n      setEntryDatemargin(EntryDatemargin = 0)\r\n      setEntryHideDrop(EntryHideDrop = false)\r\n      setTaxmargin(Taxmargin = 0)\r\n      setTaxHideDrop(TaxHideDrop = false)\r\n    }\r\n    else if(DropSelected === 4)//Entry\r\n    {\r\n      setTestAgemargin(TestAgemargin = 0)\r\n      setTesthideDrop(TesthideDrop = false)\r\n\r\n      setMinAgemargin(MinAgemargin = 0)\r\n      setMinAgehideDrop(MinAgehideDrop = false)\r\n\r\n      setMonthmargin(Monthmargin = 0)\r\n      setMonthHideDrop(MonthHideDrop = false)\r\n      setEntryDatemargin(EntryDatemargin = 150)\r\n      setEntryHideDrop(EntryHideDrop = true)\r\n\r\n      setTaxmargin(Taxmargin = 0)\r\n      setTaxHideDrop(TaxHideDrop = false)\r\n    }\r\n    else if(DropSelected === 5)//Tax\r\n    {\r\n      setTestAgemargin(TestAgemargin = 0)\r\n      setTesthideDrop(TesthideDrop = false)\r\n\r\n      setMinAgemargin(MinAgemargin = 0)\r\n      setMinAgehideDrop(MinAgehideDrop = false)\r\n\r\n      setMonthmargin(Monthmargin = 0)\r\n      setMonthHideDrop(MonthHideDrop = false)\r\n      setEntryDatemargin(EntryDatemargin = 0)\r\n      setEntryHideDrop(EntryHideDrop = false)\r\n\r\n      setTaxmargin(Taxmargin = 70)\r\n      setTaxHideDrop(TaxHideDrop = true)\r\n    }\r\n  };\r\n\r\n  const minSvcTypeController = () => {\r\n      if(MonthCk === true && HourCk === false){//1\r\n          setMinSvcType(MinSvcType = 1);\r\n          planDetailsDataState.minSvcType = 1;\r\n          //console.log(planDetailsDataState.minSvcType)\r\n      }\r\n      else if(MonthCk === false && HourCk === true){//2\r\n          setMinSvcType(MinSvcType = 2);\r\n          planDetailsDataState.minSvcType = 2;\r\n          //console.log(planDetailsDataState.minSvcType)\r\n      }\r\n      else if(MonthCk === true && HourCk === true){//3\r\n          setMinSvcType(MinSvcType = 3);\r\n          planDetailsDataState.minSvcType = 3;\r\n          //console.log(planDetailsDataState.minSvcType)\r\n      }\r\n      else if(MonthCk === false && HourCk === false){//0\r\n          setMinSvcType(MinSvcType = 0);\r\n          planDetailsDataState.minSvcType = 0;\r\n          //console.log(planDetailsDataState.minSvcType)\r\n      }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //Api Data\r\n    //console.log(\"useEffect ====PLAN DETAILS DATA STATE ======================ROUTE========> \", route, dataState[\"Plan Details\"]);\r\n    \r\n    if (!dataState[\"Plan Details\"] || (dataState[\"Plan Details\"] && dataState[\"Plan Details\"].Name === 'Plan Details')){\r\n      //alert('start');\r\n     //console.log(\"useEffect ====PLAN DETAILS GENERAL=========> \", PlanName, PlanDescription);      \r\n      setPlanDetailsData(planDetailsData => null);\r\n      if (route.params && route.params?.homeClick === 'Add'){\r\n          dataState.DetailsFetchedData.overrideSegRatesNew = null;\r\n          if (DefaultPlan) {\r\n            //console.log('===========================> DEFAULT PLAN', DefaultPlan);\r\n\r\n            setPlanDetailsData(planDetailsData => DefaultPlan);\r\n            setPlanDetailsTab(DefaultPlan);\r\n            //alert('selectedPlan: ' + dataState.selectedPlan +  ' planId: ' +  dataState.plan.planId);\r\n            //alert(route.params?.homeClick);\r\n            dataState.selectedPlan = null;\r\n            //route.params.homeClick = \"save\";\r\n           // alert('DefaultPlan' + route.params.homeClick);\r\n          }else{\r\n            getPlanDetails();\r\n            //alert('from else'+ dataState.plan.planId);\r\n          }\r\n      }else {\r\n        getPlanDetails(dataState.plan.planId);\r\n        //alert('from last' + dataState.plan.planId);\r\n      }    \r\n    }\r\n  }, [dataState.selectedPlan, dataState[\"Plan Details\"], route.params?.homeClick === 'cancel']);\r\n\r\n  var Age = [\r\n    {\r\n      id: 1, // required\r\n      text: 'Age at nearest birthday', //required\r\n      label: 'Age at nearest birthday'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Age at last birthday',\r\n      label: 'Age at last birthday'\r\n    },\r\n  ];\r\n\r\n  var HCE = [\r\n    {\r\n      id: 1, // required\r\n      //text: 'Yes', //required\r\n      label: 'Yes'\r\n    },\r\n    {\r\n      id: 2,\r\n      ///text: 'No',\r\n      label: 'No'\r\n    },\r\n  ];\r\n\r\n    const { colors } = useTheme();\r\n    \r\n    let [value, setDate] = React.useState(new Date());\r\n    let [show, setShow] = React.useState(false);\r\n    let [date, setInputDate] = React.useState(null);\r\n    let today = value;\r\n\r\n    const getPlanDetails = async (planId) => {\r\n      let url = null; \r\n      let method = 'GET';\r\n      let headers = new Headers();\r\n      if (planId){\r\n        url = baseURL + '/Plans/Plan?id=' +  planId;\r\n      }else{\r\n        url = baseURL + '/Plans/PlanInit';\r\n      }\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Authorization', dataState.userToken);\r\n     \r\n      let req = new Request(url, {\r\n          method,\r\n          headers\r\n      });\r\n  \r\n      await fetch(req)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          if (responseJson.isSuccess && responseJson.obj){\r\n            //console.log(\"FROM UseEffect =====Api Called PLAN========> \", responseJson.obj);\r\n            if (planId){\r\n              setPlanDetailsTab(responseJson.obj[0]);\r\n            } else{\r\n              setPlanDetailsTab(responseJson.obj);\r\n            }\r\n\r\n          } else {\r\n            Alert.alert(\"Data Error\", responseJson.message);\r\n            setPlanData(planData => []);\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          Alert.alert(\"Connection Error\", error.message);\r\n          return false;\r\n      });\r\n    }\r\n\r\n    const setPlanDetailsTab = (responseData) => {\r\n\r\n      //console.log('responseData->', responseData.minSvcType)\r\n      //console.log('responseData logo->', responseData.showLogo)\r\n      setDetails(responseData);\r\n      setPlanDetailsData(planDetailsData => responseData);\r\n      // GENERAL\r\n      setPlanName(PlanName = responseData.planName); \r\n      setPlanDescription(PlanDescription = responseData.planDescription); \r\n      setPlanEffDate(PlanEffDate  = responseData.planEffDate? moment(responseData.planEffDate).format('MM/DD/YYYY'):null); \r\n      setRetAge(RetAge = responseData.retAge.toString? responseData.retAge.toString():null); \r\n      setYearOfParticipationForNRA(YearOfParticipationForNRA = responseData.yearOfParticipationForNRA ? prepareVal(responseData.yearOfParticipationForNRA): DropdownData.yearOfParticipationForNRA[0].value );\r\n      setPSRetAge(PSRetAge = prepareVal(responseData.psRetAge));\r\n      setMinAge(MinAge = responseData.minAge ?  prepareVal(responseData.minAge) : DropdownData.minAge[0].value);\r\n      setMonthCk(MonthCk  = responseData.minSvcMonths != null? true: false);\r\n      setMinSvcMonths(MinSvcMonths = responseData.minSvcMonths);\r\n      setHourCk(HourCk = (responseData.minSvcHours && responseData.minSvcHours > 0) ? true: false);\r\n      setMinSvcHours(MinSvcHours = responseData.minSvcHours ? responseData.minSvcHours.toString():\"0\");\r\n      setEntryDate(EntryDate = responseData.entryDate); \r\n      setVestingSchedYear1(VestingSchedYear1 = responseData.vestingSchedYear1 ? responseData.vestingSchedYear1.toString():\"0\");\r\n      setVestingSchedYear2(VestingSchedYear2  = responseData.vestingSchedYear2 ? responseData.vestingSchedYear2.toString():\"0\");\r\n      setVestingSchedYear3(VestingSchedYear3 = responseData.vestingSchedYear3 ? responseData.vestingSchedYear3.toString():\"0\"); \r\n      setExcludedYears_18(ExcludedYears_18  = responseData.excludedYears_18); \r\n      setExcludedYears_Eff(ExcludedYears_Eff  = responseData.excludedYears_Eff); \r\n      setAgeDefinition(AgeDefinition  =  responseData.ageDefinition === \"N\"? 1 : 2); //\r\n      setHCETopPaid(HCETopPaid  = responseData.hceTopPaid == 1? 1: 2); \r\n      setIncludeDefInEmployerCost(IncludeDefInEmployerCost  = responseData.includeDefInEmployerCost); \r\n      setInclude401k(Include401k  = responseData.include401k); \r\n      setMinTaxBracket(MinTaxBracket  = responseData.minTaxBracket ? responseData.minTaxBracket.toString():null); \r\n      setMaxTaxBracket(MaxTaxBracket  = responseData.maxTaxBracket ? responseData.maxTaxBracket.toString():null); \r\n      setEntity(Entity  = responseData.entity); \r\n      setPreparedBy(PreparedBy  = responseData.preparedBy); \r\n      setCompanyName(CompanyName  = responseData.companyName); \r\n      setShowlogo(Showlogo = responseData.showLogo)\r\n      setMinSvcType(MinSvcType = responseData.minSvcType)\r\n      //console.log('MinSvcType->', MinSvcType)\r\n      // console.log('TEST BUG', DropdownData.yearOfParticipationForNRA );\r\n      // console.log('Val1',YearOfParticipationForNRA)\r\n      // console.log('Ar2',DropdownData.minAge);\r\n      // console.log('Val2',MinAge);\r\n    }\r\n\r\n    const prepareVal = (val, def) => {\r\n      //console.log(val);\r\n      if (val) {\r\n        return val\r\n      } else{\r\n        if (def){\r\n          return def\r\n        } else{\r\n          return \"\"\r\n        }\r\n      }\r\n    }\r\n    //DateTimePicker\r\n    const onChange = (event, selectedDate) => {\r\n      let currentDate = selectedDate || date;\r\n      //console.log(\"A date has been picked: \", date);\r\n      currentDate = moment(currentDate).format('MM/DD/YYYY');\r\n      setShow(Platform.OS === 'ios');\r\n      setDate(value = currentDate);\r\n      setInputDate(date = currentDate)\r\n    };\r\n    \r\n    //DateTimePickerModal\r\n    const handleConfirm = (selectedDate) => {\r\n      let currentDate = selectedDate || date;\r\n      let year = null;\r\n      let currentYr = moment().format('YYYY');\r\n      //console.log(\"A date has been picked: \", selectedDate);\r\n      \r\n      currentDate = moment(currentDate).format('MM/DD/YYYY');\r\n\r\n      \r\n     //console.log(\"A date has been picked: \", currentDate);\r\n      setShow(show = !show);\r\n      setPlanEffDate(PlanEffDate=currentDate);\r\n      year = moment(currentDate).format('YYYY');\r\n\r\n      //Change interest rate on New Plan when date changed \r\n      if (route.params && route.params?.homeClick === 'Add') {\r\n        if (dataState.interestRatesData) {\r\n          //Get from existing state\r\n\r\n          let iRates = dataState.interestRatesData;\r\n          let overrideSegRatesNew =  iRates.filter(iRate => iRate.rateYear == year);\r\n          let defaultSegRatesNew = iRates.filter(iRate => iRate.rateYear == currentYr);\r\n\r\n          let info = {\r\n            \"overrideSegRate1\": defaultSegRatesNew[0].segment1Rate.toString(),\r\n            \"overrideSegRate2\": defaultSegRatesNew[0].segment2Rate.toString(), \r\n            \"overrideSegRate3\": defaultSegRatesNew[0].segment3Rate.toString()\r\n          }\r\n\r\n          if (overrideSegRatesNew.length){\r\n            /*dataState.DetailsFetchedData.overrideSegRatesNew = {\r\n              \"overrideSegRate1\": overrideSegRatesNew[0].segment1Rate.toString(),\r\n              \"overrideSegRate2\": overrideSegRatesNew[0].segment2Rate.toString(), \r\n              \"overrideSegRate3\": overrideSegRatesNew[0].segment3Rate.toString()\r\n            }*/\r\n            info = {\r\n              \"overrideSegRate1\": overrideSegRatesNew[0].segment1Rate.toString(),\r\n              \"overrideSegRate2\": overrideSegRatesNew[0].segment2Rate.toString(), \r\n              \"overrideSegRate3\": overrideSegRatesNew[0].segment3Rate.toString()\r\n            }\r\n            \r\n            \r\n          } \r\n\r\n          updateOverrideSegRatesNew(info);\r\n\r\n          //console.log(\"check---------->\",overrideSegRatesNew, dataState.NewOverrideSegRatesNew/*dataState.DetailsFetchedData.overrideSegRatesNew*/);\r\n        } else {\r\n          //Get from Api\r\n          GetInterestRate(year);\r\n        }\r\n      }\r\n      //setDate(value = currentDate);\r\n      //setInputDate(date = currentDate)\r\n    };\r\n\r\n    const GetInterestRate = async (year) => {\r\n     //console.log(\"interest rate: \", year);\r\n      let url = baseURL + '/CBLookUp/GetPlanYearInterestRates?planYear=' + year + '&calcType=3&isProposal=true&isARPA=true';\r\n      let method = 'GET';\r\n      let headers = new Headers();\r\n     //console.log(url);\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Authorization', dataState.userToken);\r\n     //console.log('GetInterest Rate =====>', url, method, headers);\r\n      \r\n      let req = new Request(url, {\r\n          method,\r\n          headers\r\n      });\r\n  \r\n      await fetch(req)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          if (responseJson.isSuccess){\r\n           //console.log(\" =====Api Get Interest rate year ========> \", responseJson.obj);\r\n            //setInterestData(responseJson.obj);\r\n            dataState.DetailsFetchedData.overrideSegRatesNew = {\r\n              \"overrideSegRate1\": responseJson.obj.segment1Rate.toString(),\r\n              \"overrideSegRate2\": responseJson.obj.segment2Rate.toString(), \r\n              \"overrideSegRate3\": responseJson.obj.segment3Rate.toString()\r\n            }\r\n           //console.log(dataState.DetailsFetchedData.overrideSegRatesNew);\r\n          } else {\r\n            Alert.alert(\"Data Error\", responseJson.message);              \r\n          }\r\n          \r\n      })\r\n      .catch((error) => {\r\n          Alert.alert(\"Connection Error\", error.message);\r\n          \r\n          return false;\r\n      });\r\n    }\r\n\r\n    const Test_Age = (value) => {\r\n      if(value < RetAge && value != -99) //-99 = NRA\r\n      {\r\n        //alert(value);\r\n        alert(\"Normal Retirement Age (NRA) should be less than or equal to Testing Age (TA). The program will automatically update Testing Age equal to NRA.\");\r\n        setPSRetAge(PSRetAge = parseInt(RetAge, 10))\r\n        controller.selectItem(parseInt(RetAge, 10));\r\n      }\r\n      else{\r\n        setPSRetAge(PSRetAge = value)\r\n      }\r\n    }\r\n\r\n    const NRA_Error = (val) => {\r\n      if((val < 62 || val > 65))\r\n      {\r\n        SetError(Error = true);\r\n      }\r\n      else if(PSRetAge < val  && PSRetAge != -99)//-99 = NRA\r\n      {\r\n        alert(\"Normal Retirement Age (NRA) should be less than or equal to Testing Age (TA). The program will automatically update Testing Age equal to NRA.\");\r\n        setPSRetAge(PSRetAge = parseInt(val, 10));\r\n        SetError(Error = false);\r\n        controller.selectItem(parseInt(val, 10));\r\n      }\r\n      else\r\n      {\r\n        SetError(Error = false);\r\n      }\r\n    }\r\n    //console.log(date, \"date\")\r\n    /*\r\n    if(today != null)\r\n    {\r\n       //convert to M/D/Y: \r\n        let nowdate = parseInt(today.getMonth()+1) +\"-\"+ today.getDate() +\"-\"+ today.getFullYear();\r\n        let thisDate = nowdate.toString();\r\n       //console.log(\"M/D/Y: \", thisDate);\r\n        //setInputDate(date =  thisDate)\r\n    }\r\n    */\r\n    //console.log(date)\r\n    //console.log(value, 'date')\r\n    /*\r\n    open = (setState = true) => {\r\n      this.setState({...(setState && {isVisible: true})\r\n      }, () => this.props.onOpen());\r\n   }\r\n   */\r\n  return(\r\n      \r\n    <KeyboardAwareScrollView\r\n      style={{ /*backgroundColor: '#4c69a5'*/ }}\r\n      resetScrollToCoords={{ x: 0, y: 0 }}\r\n      contentContainerStyle={{flex: 1}}\r\n      scrollEnabled={false}\r\n      //enableOnAndroid={false}\r\n  >\r\n     \r\n    <View style= {[styles.container,{backgroundColor: colors.tertiary}]}>\r\n    {!planDetailsData?\r\n        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n          <ActivityIndicator size=\"large\" color={colors.secondary}/>\r\n        </View>\r\n        : \r\n    <View style= {styles.inputContainer}>\r\n\r\n    <ScrollView ref={Scroll} style= {styles.ScrollContainer}>\r\n      <View style={{marginBottom: 20}}>\r\n\r\n        <Text style={styles.title}>Plan Name</Text>\r\n\r\n        <TextInput \r\n          placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n          placeholder=\"Name\"\r\n          style={[styles.textInput,{color: colors.Logintext}]}\r\n          //autoCapitalize=\"none\"\r\n          value={PlanName}\r\n          keyboardType='default'\r\n          onChangeText={(val) => setPlanName(PlanName = val)}\r\n        />\r\n        <Text style={[styles.title,{marginTop: 10}]}>Plan Description</Text>\r\n\r\n        <TextInput \r\n          multiline={true}\r\n          numberOfLines={height > 800 ? 8 : 4}\r\n          placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n          placeholder=\"Description\"\r\n          style={[styles.textArea,{color: colors.Logintext}]}\r\n          //autoCapitalize=\"none\"\r\n          value={PlanDescription}\r\n          keyboardType='default'\r\n          onChangeText={(val) => setPlanDescription(PlanDescription = val)}\r\n        />\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Plan Effective Date</Text>\r\n        \r\n        \r\n        <TouchableOpacity style = {{ flexDirection: 'row'}} onPress={() => setShow(show = !show)}>\r\n          <TextInput style={{flex: 1}}\r\n            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n            placeholder=\"Date\"\r\n            style={[styles.textInput,{color: colors.Logintext}]}\r\n            value={date != null ? date.toString() : PlanEffDate}\r\n            editable={false}\r\n            \r\n            //autoCapitalize=\"none\"\r\n            //keyboardType='default'\r\n            onChangeText={(val) => setPlanEffDate(PlanEffDate = val)}\r\n          />\r\n          <Feather style={{ marginLeft: 5}}\r\n                name=\"calendar\"\r\n                color=\"grey\"\r\n                size={25}\r\n            /> \r\n        </TouchableOpacity>\r\n          \r\n\r\n        {show && (\r\n          <DateTimePickerModal\r\n          isVisible={show}\r\n          mode=\"date\"\r\n          date={(PlanEffDate) ? new Date(PlanEffDate): new Date()}\r\n          onConfirm={handleConfirm}\r\n          onCancel={() => setShow(show = !show)}\r\n        />\r\n        )}\r\n        <Text style={[styles.title,{marginTop: 10}]}>Normal Retirement Age</Text>\r\n          {Error === true  &&\r\n            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>Valid values are from 62-65. NRA less than 62 generally not allowed per Notice 2007-69.</Text>\r\n          }\r\n          <View style={{...(Platform.OS !== 'android'? {zIndex: 5,flexDirection: 'row'} : {flexDirection: 'row'})}}>\r\n            <Text style={[styles.subNames,{}]}>The later of Age</Text>\r\n            <TextInput style={{alignSelf:'flex-start', flex:1}}\r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0\"\r\n              style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={RetAge}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => [setRetAge(RetAge = val), NRA_Error(val)]}\r\n            />\r\n            <Text style={styles.subNames}>years of participation</Text>\r\n            \r\n              <DropDownPicker\r\n                items={DropdownData.yearOfParticipationForNRA}\r\n                defaultValue={YearOfParticipationForNRA}             \r\n                zIndex={5}\r\n                placeholder=\"\"\r\n                placeholderStyle={{color: colors.Logintext}}\r\n                activeLabelStyle={{color: 'green'}}\r\n                labelStyle={{color: colors.Logintext}}\r\n                itemStyle={{justifyContent: 'flex-start'}}\r\n                style={{borderWidth: 1}}\r\n                dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                containerStyle={{ height: 38, flex: height > 800 ? 0.2 : 1,marginLeft: 0, marginTop:-12}}\r\n                arrowColor='rgba(51,51,51,0.5)'\r\n                onChangeItem={item => setYearOfParticipationForNRA(YearOfParticipationForNRA = item.value)}\r\n              />\r\n            \r\n          </View>  \r\n         \r\n        <Text style={[styles.title,{marginTop: 10}]}>Testing Age</Text>\r\n        \r\n        <DropDownPicker\r\n            //controller={controller}\r\n            isVisible={TesthideDrop}\r\n            controller={(instance) => controller = instance}\r\n            items={DropdownData.psRetAge}\r\n            defaultValue={PSRetAge}\r\n            zIndex={4}\r\n            placeholder=\"Select an testing age\"\r\n            placeholderStyle={{color: colors.Logintext}}\r\n            activeLabelStyle={{color: 'green'}}\r\n            labelStyle={{color: colors.Logintext}}\r\n            itemStyle={{justifyContent: 'flex-start'}}\r\n            style={{borderWidth: 1}}\r\n            dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1,zIndex: 10}}\r\n            containerStyle={{ height: 38, flex: 1, marginBottom: TestAgemargin}}\r\n            arrowColor='rgba(51,51,51,0.5)'\r\n            onOpen={() => {[DropSelected = 1, DropdownController(DropSelected),Scroll.current.scrollTo({ x: 0, y: 150, animated: true })]}}\r\n            onClose={() => {[setTesthideDrop(TesthideDrop = false),setTestAgemargin(TestAgemargin = 0)]}}\r\n            onChangeItem={(item) => [Test_Age(item.value)/*,setPSRetAge(PSRetAge = item.value)*/]}\r\n        />\r\n        \r\n        {/*<Button onPress={() => {console.log(JSON.stringify(Dd1, null, 2))}} title='test1'></Button>*/}\r\n        <Text style={[styles.title,{marginTop: 10}]}>Minimum Age</Text>\r\n          \r\n          <DropDownPicker \r\n              ref={Dd2}\r\n              //controller={(instance) => {Dd1 = instance}}\r\n              isVisible={MinAgehideDrop}\r\n              items={DropdownData.minAge}\r\n              defaultIndex={0}\r\n              defaultValue={MinAge}\r\n              zIndex={3}\r\n              placeholder=\"Select an minimum Age\"\r\n              placeholderStyle={{color: colors.Logintext}}\r\n              activeLabelStyle={{color: 'green'}}\r\n              labelStyle={{color: colors.Logintext}}\r\n              itemStyle={{justifyContent: 'flex-start'}}\r\n              style={{borderWidth: 1}}\r\n              dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n              containerStyle={{ height: 38, flex: 1, marginBottom: MinAgemargin}}\r\n              arrowColor='rgba(51,51,51,0.5)'\r\n              onOpen={() => {[DropSelected = 2, DropdownController(DropSelected),Scroll.current.scrollTo({ x: 0, y: 250, animated: true })]}}\r\n              onClose={() => {[setMinAgehideDrop(MinAgehideDrop = false),setMinAgemargin(MinAgemargin = 0)]}}\r\n              onChangeItem={(item) => setMinAge(MinAge = item.value)}\r\n          />\r\n          \r\n          {/*<Button onPress={() => [sethideDrop(hideDrop = false),setMinAgemargin(MinAgemargin = 0)]} title='test'></Button>\r\n          <Button onPress={() => [console.log(JSON.stringify(Dd2, null, 2))]} title='test'></Button>*/}\r\n        <Text style={[styles.title,{marginTop: 10}]}>Minimum Service</Text>\r\n        <View style={{flexDirection: 'row', marginBottom: 5}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={MonthCk} onClick = {()=> [setMonthCk(MonthCk = !MonthCk), minSvcTypeController()]}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Months</Text>\r\n        </View>\r\n          \r\n        <DropDownPicker\r\n              items={DropdownData.minSvcMonths}\r\n              isVisible={MonthHideDrop}\r\n              defaultIndex={0}\r\n              defaultValue={MinSvcMonths}\r\n              zIndex={2}\r\n              placeholder=\"Select number of months\"\r\n              placeholderStyle={{color: colors.Logintext}}\r\n              activeLabelStyle={{color: 'green'}}\r\n              labelStyle={{color: colors.Logintext}}\r\n              itemStyle={{justifyContent: 'flex-start'}}\r\n              style={{borderWidth: 1}}\r\n              dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n              containerStyle={{ height: 38, flex: 1,marginLeft: 5, marginBottom: Monthmargin}}\r\n              arrowColor='rgba(51,51,51,0.5)'\r\n              onOpen={() => {[DropSelected = 3, DropdownController(DropSelected),Scroll.current.scrollTo({ x: 0, y: 400, animated: true })]}}\r\n              onClose={() => {[setMonthHideDrop(MonthHideDrop = false),setMonthmargin(Monthmargin = 0)]}}\r\n              onChangeItem={item => setMinSvcMonths(MinSvcMonths = item.value)}\r\n            />\r\n          \r\n          <View style={{flexDirection: 'row', marginTop: 5,marginBottom: 5}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={HourCk} onClick = {()=> [setHourCk(HourCk = !HourCk), minSvcTypeController()]}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Hours</Text>\r\n          </View>\r\n\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"Number of hours\"\r\n              style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={MinSvcHours}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setMinSvcHours(MinSvcHours = val)}\r\n            />\r\n\r\n          <Text style = {{color: colors.Logintext,marginTop: 10,marginBottom: 5}}>Entry Date</Text>\r\n              {\r\n          <DropDownPicker\r\n              items={DropdownData.entryDate}\r\n              isVisible={EntryHideDrop}\r\n              defaultIndex={0}\r\n              defaultValue={EntryDate}\r\n              zIndex={1}\r\n              placeholder=\"Select entry date\"\r\n              placeholderStyle={{color: colors.Logintext}}\r\n              activeLabelStyle={{color: 'green'}}\r\n              labelStyle={{color: colors.Logintext}}\r\n              itemStyle={{justifyContent: 'flex-start'}}\r\n              style={{borderWidth: 1}}\r\n              dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n              containerStyle={{ height: 38, flex: 1,marginLeft: 5,marginBottom: EntryDatemargin}}\r\n              arrowColor='rgba(51,51,51,0.5)'\r\n              onOpen={() => {[DropSelected = 4, DropdownController(DropSelected),Scroll.current.scrollTo({ x: 0, y: 500, animated: true })]}}\r\n              onClose={() => {[setEntryHideDrop(EntryHideDrop = false),setEntryDatemargin(EntryDatemargin = 0)]}}\r\n              onChangeItem={item => setEntryDate(EntryDate = item.value)}\r\n            />\r\n              }\r\n        <Text style={[styles.title,{marginTop: 10}]}>Vesting Schedule</Text>\r\n\r\n        <View style={{flexDirection: 'row'}}>\r\n            <Text style={styles.subNames}>Year 1</Text>\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0\"\r\n              style={[styles.textInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={VestingSchedYear1}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setVestingSchedYear1(VestingSchedYear1 = val)}\r\n            />\r\n            <Text style={styles.subNames}>Year 2</Text>\r\n\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0\"\r\n              style={[styles.textInput2,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={VestingSchedYear2}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setVestingSchedYear2(VestingSchedYear2 = val)}\r\n            />\r\n\r\n          <Text style={styles.subNames}>Year 3</Text>\r\n\r\n          <TextInput \r\n            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n            placeholder=\"0\"\r\n            style={[styles.textInput3,{color: colors.Logintext}]}\r\n            //autoCapitalize=\"none\"\r\n            value={VestingSchedYear3}\r\n            keyboardType='numeric'\r\n            onChangeText={(val) => setVestingSchedYear3(VestingSchedYear3 = val)}\r\n          />\r\n          </View>\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Excluded Years</Text>\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={ExcludedYears_18} onClick = {()=> setExcludedYears_18(ExcludedYears_18 = !ExcludedYears_18)}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Service Prior to Age 18</Text>\r\n          </View>\r\n          <View style={{flexDirection: 'row'}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={ExcludedYears_Eff} onClick = {()=> setExcludedYears_Eff(ExcludedYears_Eff = !ExcludedYears_Eff)}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Service Prior to Effective Date</Text>\r\n          </View>\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Age Definition</Text>\r\n\r\n        <RadioButtonRN\r\n            data={Age}\r\n            activeOpacity={1}\r\n            initial={AgeDefinition}\r\n            animationTypes={['pulse']}\r\n            style={{paddingLeft: 0}}\r\n            textStyle={{paddingLeft: 10}}\r\n            boxStyle={{width: 200}}\r\n\t\t\t\t\t  box={false}\r\n            selectedBtn={(e) => setAgeDefinition(AgeDefinition = e.id)}\r\n            circleSize={13}\r\n            activeColor={'#333333'}\r\n            deactiveColor={'grey'}\r\n            textColor={'#333333'}\r\n          />\r\n\r\n       \r\n        <Text style={[styles.title,{marginTop: 10}]}>HCE Top Paid Group Limited to 20%</Text>\r\n          \r\n        <RadioButtonRN\r\n            data={HCE}\r\n            activeOpacity={1}\r\n            initial={HCETopPaid}\r\n            animationTypes={['pulse']}\r\n            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n            textStyle={{paddingLeft: 10}}\r\n            boxStyle={{width: 70}}\r\n\t\t\t\t\t  box={false}\r\n            selectedBtn={(e) => setHCETopPaid(HCETopPaid = e.id)}\r\n            circleSize={13}\r\n            activeColor={'#333333'}\r\n            deactiveColor={'grey'}\r\n            textColor={'#333333'}\r\n          />\r\n          {/*\r\n        <RadioButton\r\n          data={HCE} //required\r\n          defaultOption={HCETopPaid}\r\n          formStyle = {{flexDirection: 'row'}} \r\n          containerStyle={{marginBottom: 0}}\r\n          labelStyle={{paddingRight: 10}}\r\n          circleContainerStyle={{ }} // add your styles to each outer circle\r\n          innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n          onValueChange={(value) => setHCETopPaid(HCETopPaid = value.id)} //required\r\n        />\r\n          */}\r\n        <Text style={[styles.title,{marginTop: 10}]}>Include Deferrals in Employer Cost</Text>\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={IncludeDefInEmployerCost} onClick = {()=> setIncludeDefInEmployerCost(IncludeDefInEmployerCost = !IncludeDefInEmployerCost)}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5,fontSize: 13.5}}>Check to include deferrals in employer costs</Text>\r\n          </View>\r\n\r\n\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Include 401(k) </Text>\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n            isChecked={Include401k} onClick = {()=> [setInclude401k(Include401k = !Include401k),dataState.Is401kChecked = Include401k]}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Check to include 401(k)</Text>\r\n          </View>\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Tax Bracket</Text>\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n            <Text style={styles.subNames}>Minimum</Text>\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0\"\r\n              style={[styles.textInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={MinTaxBracket}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setMinTaxBracket(MinTaxBracket = val)}\r\n            />\r\n            <Text style={styles.subNames}>Maximum</Text>\r\n\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0\"\r\n              style={[styles.textInput2,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={MaxTaxBracket}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setMaxTaxBracket(MaxTaxBracket = val)}\r\n            />\r\n          </View>\r\n          \r\n        <Text style={[styles.title,{marginTop: 10}]}>Report Prepared By</Text>\r\n\r\n        <TextInput \r\n          placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n          placeholder=\"Reporter\"\r\n          style={[styles.textInput,{color: colors.Logintext}]}\r\n          //autoCapitalize=\"none\"\r\n          value={PreparedBy}\r\n          keyboardType='default'\r\n          onChangeText={(val) => setPreparedBy(PreparedBy = val)}\r\n        />\r\n\r\n        <Text style={[styles.title,{marginTop: 10}]}>Firm</Text>\r\n\r\n        <TextInput \r\n          placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n          placeholder=\"Firm\"\r\n          style={[styles.textInput,{color: colors.Logintext}]}\r\n          //autoCapitalize=\"none\"\r\n          value={CompanyName}\r\n          keyboardType='default'\r\n          onChangeText={(val) => setCompanyName(CompanyName = val)}\r\n        />\r\n        \r\n        <Text style={[styles.title,{marginTop: 10}]}>How is your business taxed?</Text>\r\n          \r\n          <DropDownPicker\r\n              items={DropdownData.entity}\r\n              isVisible={TaxHideDrop}\r\n              defaultIndex={0}\r\n              defaultValue={Entity}\r\n              placeholder=\"Select an business taxed\" \r\n              placeholderStyle={{color: colors.Logintext}}\r\n              activeLabelStyle={{color: 'green'}}\r\n              labelStyle={{color: colors.Logintext}}\r\n              style={{borderWidth: 1}}\r\n              itemStyle={{justifyContent: 'flex-start'}}\r\n              dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n              containerStyle={{ height: 38, flex: 1,marginBottom: Taxmargin}}\r\n              arrowColor='rgba(51,51,51,0.5)'\r\n              onOpen={() => {[DropSelected = 5, DropdownController(DropSelected),\r\n                setTimeout(() => {\r\n                  Scroll.current.scrollTo({ x: 0, y: 985, animated: true })\r\n                }, 5)\r\n              ]}}\r\n              onClose={() => {[setTaxHideDrop(TaxHideDrop = false),setTaxmargin(Taxmargin = 0)]}}\r\n              onChangeItem={item => setEntity(Entity = item.value)}\r\n          />\r\n          <Text style={[styles.title,{marginTop: 10}]}>Show logo?</Text>\r\n          <View style={{flexDirection: 'row'}}>\r\n            <CheckBox \r\n            style={{paddingRight: 5}}\r\n            checkedCheckBoxColor = {'#333333'}\r\n            uncheckedCheckBoxColor = {colors.Logintext}\r\n            isChecked={Showlogo} \r\n            onClick = {()=> [setShowlogo(Showlogo = !Showlogo)]}/>\r\n            <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Check to display logo on the report</Text>\r\n          </View>\r\n\r\n        </View>\r\n      </ScrollView>\r\n      </View>\r\n       }\r\n    </View>\r\n   \r\n    </KeyboardAwareScrollView>\r\n  )\r\n}\r\nexport default General;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    paddingTop: 10\r\n  },\r\n  inputContainer: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    backgroundColor: 'white',\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n  },\r\n  ScrollContainer: {\r\n    marginTop: 20,\r\n    paddingHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: height > 800 ? 18 : 14,\r\n    fontWeight: 'bold',\r\n    marginBottom: 7\r\n  },\r\n  subNames: {\r\n    paddingRight: 3,\r\n    marginTop: 7,\r\n    paddingLeft: 3,\r\n    fontSize: height > 800 ? 15 : 12\r\n  },\r\n  textArea: {\r\n    flex: 1,  \r\n    textAlignVertical: 'top',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderWidth: 1.5,\r\n    borderColor: '#989c9d',\r\n  },\r\n  textInput: {\r\n    flex: 1,  \r\n    borderBottomWidth: 1.5,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n  textInput2: {\r\n    flex: 1, \r\n    borderBottomWidth: 1.5,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n  textInput3: {\r\n    flex: 1, \r\n    borderBottomWidth: 1.5,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n  SubtextInput: {\r\n    flex: 1,  \r\n    marginLeft: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Modal,Dimensions,FlatList, Alert, Button } from 'react-native';\r\nimport{ AuthContext } from '../components/context';\r\n//import PlanTopTab from './PlandetailsTopTab'\r\n//import { WebView } from 'react-native-webview';\r\nconst {width,height} = Dimensions.get('window');\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport Settings from '../settings.json';\r\nconst baseURL = Settings.domain;\r\nconst InterestModal = ({ navigation,Open,setOpen, setModalData, ModalData }) => {\r\n\r\n    //console.log('Open', Open)\r\n  //const [layoutheight, setlayoutheight] = React.useState(0);\r\n  let [Interest_index, setInterest_index] = React.useState(0);//default 1\r\n  const { colors } = useTheme();\r\n  const [{},dataState] = React.useContext(AuthContext);\r\n    //console.log('dataState',dataState.plan)\r\n    const dummy = [\r\n        {id: '1',rateMonthName: '2021 HATFA',transitionalFlag: 'No',segment1Rate: '3.32',segment2Rate: '4.79',segment3Rate: '5.47'},\r\n    ]\r\n    \r\n    let [InterestData, setInterestData] = React.useState(dummy);//default 1\r\n    const InterestShow = (item) => {\r\n        if(Interest_index === item.id)\r\n        {\r\n            setInterest_index(Interest_index = 0);\r\n        }\r\n        else\r\n        {\r\n            setInterest_index(Interest_index = item.id);\r\n        }\r\n    }\r\n\r\n    const GetFlag = (bool) => {\r\n        if(bool === true)\r\n        {\r\n            return \"Yes\";\r\n        }\r\n        else\r\n        {\r\n            return \"No\";\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n\r\n    React.useEffect(() => {\r\n        GetInterestRate();\r\n        \r\n    }, []);\r\n\r\n\r\n    const GetInterestRate = async () => {\r\n        let url = baseURL + '/CBLookUp/GetInterestRates?calcType=3&isProposal=true';\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n       //console.log(url);\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       //console.log('GetInterest Rate =====>', url, method, headers);\r\n        \r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson.isSuccess){\r\n             //console.log(\"FROM UseEffect =====Api Get Interest rate========> \");// responseJson.obj, responseJson.obj\r\n              dataState.interestRatesData = responseJson.obj;\r\n              setInterestData(responseJson.obj);\r\n\r\n            } else {\r\n              Alert.alert(\"Data Error\", responseJson.message);              \r\n            }\r\n            \r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            \r\n            return false;\r\n        });\r\n    }\r\n\r\n    return(\r\n       \r\n        <Modal\r\n            animated={true}\r\n            //ref={ref => (this._modal = ref)}\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={Open}\r\n            onRequestClose={() => {}}  \r\n        >\r\n       \r\n        <View style ={styles.ModalBackground}>\r\n            <LinearGradient colors={[colors.linearlight,colors.linearDark]} \r\n            style ={styles.Modalcontainer}>\r\n\r\n            <View style={[styles.greencontainer, {backgroundColor: colors.icon }]}>\r\n                <View style={styles.headercontainer}>\r\n                    <Text style={[styles.header,{padding: 5}]}>Interest Rates</Text>\r\n                    <TouchableOpacity style={{ padding: 5, borderRadius: 10}} onPress={() => setOpen(Open = !Open)}>\r\n                    <Text style={styles.header}>X</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            {/*\r\n            <WebView source={{ uri: 'https://expo.io' }} /*style={{ marginTop: 20 }} />\r\n                */}\r\n\r\n\r\n            <FlatList\r\n                //horizontal={true}\r\n                data={InterestData}\r\n                //extraData={indexChecked}\r\n                renderItem={({ item,index }) => <Item rateMonthName={item.rateMonthName} transitionalFlag={GetFlag(item.transitionalFlag)} segment1Rate={item.segment1Rate}\r\n                segment2Rate={item.segment2Rate} segment3Rate={item.segment3Rate} item={item} /> }\r\n                keyExtractor={item => item.id.toString()}\r\n                //onEndReached={() => {console.log('list ended');}}\r\n            />\r\n            \r\n            </LinearGradient>\r\n        </View>\r\n    \r\n        </Modal>\r\n       \r\n    )\r\n    \r\n    function Item({ rateMonthName,transitionalFlag,segment1Rate,segment2Rate,segment3Rate,item }) {\r\n        return (\r\n        <View style={[styles.Info_container, {backgroundColor: colors.iconDes}]}>\r\n            <TouchableOpacity style={styles.item} onPress={() => {InterestShow(item)}}>\r\n                <View style={styles.Spacer}>\r\n                    <Text style={{color: colors.text}}>{'Rate Month'}</Text>\r\n                    <View style={styles.align}>\r\n                        <Text style={{marginRight: 5, color: colors.text}}>{rateMonthName}  </Text>\r\n                        {Interest_index === item.id && \r\n                        <Button\r\n                            onPress={() => /*alert(item.rateMonthName)*/{setModalData(ModalData = item),setOpen(Open = !Open)}}\r\n                            title=\"Apply\"\r\n                            color=\"#72bf04\"\r\n                        />}\r\n                    </View>\r\n                </View>\r\n                {Interest_index === item.id && \r\n                <View>\r\n                    <View style={styles.Spacer}>\r\n                        <Text style={{color: colors.text}}>{'Transitional'}</Text>\r\n                        <Text style={{color: colors.text}}>{transitionalFlag}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.Spacer}>\r\n                        <Text style={{color: colors.text}}>{'Rate1 (Years 0-5)'}</Text>\r\n                        <Text style={{color: colors.text}}>{segment1Rate}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.Spacer}>\r\n                        <Text style={{color: colors.text}}>{'Rate2 (Years 6-20)'}</Text>\r\n                        <Text style={{color: colors.text}}>{segment2Rate}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.Spacer}>\r\n                        <Text style={{color: colors.text}}>{'Rate3 (Years > 20)'}</Text>\r\n                        <Text style={{color: colors.text}}>{segment3Rate}</Text>\r\n                    </View>\r\n                </View>}\r\n            </TouchableOpacity>\r\n        </View>\r\n        );\r\n    } \r\n}\r\n\r\n\r\n\r\nexport default InterestModal;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      //backgroundColor: 'rgba(51,51,51, 0.8)'\r\n      //alignItems: 'center',\r\n      //justifyContent: 'center',\r\n    },\r\n    ModalBackground: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(51,51,51, 0.8)'\r\n    },\r\n\r\n    Modalcontainer: {\r\n        height: height/1.4,\r\n        //borderRadius: 5,\r\n        margin: 20,\r\n        top: '12.5%',\r\n        //padding: 20,\r\n        //backgroundColor: 'rgba(51,51,51,1)',\r\n        //backgroundColor: 'white',\r\n       //justifyContent: 'center'\r\n    },\r\n\r\n    header: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        //flexDirection: 'row',\r\n        fontWeight: 'bold',\r\n        alignContent: 'center',\r\n        //marginBottom: 5,\r\n    },\r\n   \r\n    greencontainer: {\r\n        padding: 10,\r\n        //backgroundColor: '#00BFFF',\r\n        //justifyContent: 'center'\r\n        textAlign: 'center'\r\n        \r\n    },\r\n    headercontainer: {\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        //backgroundColor: 'green',\r\n        flexDirection: 'row',\r\n        //flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        \r\n    },\r\n    Info_container: {\r\n        //backgroundColor: 'rgba(51,51,51, 0.8)',\r\n        borderRadius: 5,\r\n        margin: 5,\r\n        padding: 10,\r\n    },\r\n    Spacer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: 5\r\n    },\r\n    itemText: {\r\n        color: 'white',\r\n    },\r\n    \r\n    align: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    \r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button,ScrollView,Dimensions,TextInput } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport RadioButton from 'react-native-customizable-radio-button';\r\nimport Interest from '../../components/InterestModal'\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst CashBalance = ({ route }) => {\r\n  const [{},dataState] = React.useContext(AuthContext);\r\n  //Open modal\r\n  let [Open, setOpen] = React.useState(false); \r\n  //get modal data\r\n  let [ModalData, setModalData] = React.useState(null); \r\n  \r\n  //\r\n  //result for browser\r\n  let [thisresult, setresult] = React.useState(null); \r\n  //\r\n  //function for opening browser\r\n  const _handlePressButtonAsync = async () => {\r\n    let result = await WebBrowser.openBrowserAsync('https://expo.io');\r\n    setresult(thisresult = result)\r\n  };\r\n  //?console.log('thisresult', thisresult)\r\n  //\r\n  const DefaultPlan = dataState.DefaultPlan;\r\n  const DropdownData = dataState.DefaultDropdown;\r\n  let Balance = dataState.Details;\r\n  let DetailsFetchedData = dataState.DetailsFetchedData;\r\n\r\n  //console.log('MORTALITY TABLE===========>',Balance.aePostRetMortalityTable, DefaultPlan.aePostRetMortalityTable, DropdownData.aePostRetMortalityTable);\r\n\r\n\r\n  let [IsPBGCCovered, setIsPBGCCovered] = React.useState(DefaultPlan.isPBGCCovered === true ? 1:2); \r\n  let [CBInterestCredit, setCBInterestCredit] = React.useState(DefaultPlan.cbInterestCredit ? DefaultPlan.cbInterestCredit.toString() : null); \r\n  let [OverrideSegRate1, setOverrideSegRate1] = React.useState(DefaultPlan.overrideSegRate1 ? DefaultPlan.overrideSegRate1.toString() : null); \r\n  let [OverrideSegRate2, setOverrideSegRate2] = React.useState(DefaultPlan.overrideSegRate2 ? DefaultPlan.overrideSegRate2.toString() : null); \r\n  let [OverrideSegRate3, setOverrideSegRate3] = React.useState(DefaultPlan.overrideSegRate3 ? DefaultPlan.overrideSegRate3.toString() : null);\r\n  let [PreRetMortality, setPreRetMortality] = React.useState(DefaultPlan.preRetMortality === true ? 1:2);\r\n  let [MortalityTableCombined, setMortalityTableCombined] = React.useState(DefaultPlan.mortalityTableCombined === true ? 1:2);\r\n  let [FundingForLumpSum, setFundingForLumpSum] = React.useState(DefaultPlan.fundingForLumpSum === true ? 1:2);\r\n  let [ImputeDisparity, setImputeDisparity] = React.useState(DefaultPlan.imputeDisparity === true ? 1:2);\r\n  let [AEPostRetMortalityTable, setAEPostRetMortalityTable] = React.useState(DefaultPlan.aePostRetMortalityTable);\r\n  let [AEPreRetInt, setAEPreRetInt] = React.useState(DefaultPlan.aePreRetInt ? DefaultPlan.aePreRetInt.toString() : null);\r\n  let [AEPostRetInt, setAEPostRetInt] = React.useState(DefaultPlan.aePostRetInt ? DefaultPlan.aePostRetInt.toString() : null); \r\n  let [TAPostRetMort, setTAPostRetMort] = React.useState(DefaultPlan.taPostRetMort);\r\n  let [TAPreRetInt, setTAPreRetInt] = React.useState(DefaultPlan.taPreRetInt ? DefaultPlan.taPreRetInt.toString() : null);\r\n  let [TAPostRetInt, setTAPostRetInt] = React.useState(DefaultPlan.taPostRetInt ? DefaultPlan.taPostRetInt.toString() : null); \r\n\r\n  Balance.isPBGCCovered = IsPBGCCovered === 1 ? true : false;\r\n  Balance.cbInterestCredit = CBInterestCredit ? CBInterestCredit.toString() : \"0\";\r\n  Balance.overrideSegRate1 = OverrideSegRate1 ? OverrideSegRate1.toString() : \"0\";\r\n  Balance.overrideSegRate2 = OverrideSegRate2 ? OverrideSegRate2.toString() : \"0\";\r\n  Balance.overrideSegRate3 = OverrideSegRate3 ? OverrideSegRate3.toString() : \"0\";\r\n  Balance.preRetMortality = PreRetMortality === 1 ? true : false;\r\n  Balance.mortalityTableCombined = MortalityTableCombined === 1 ? true : false;\r\n  Balance.fundingForLumpSum = FundingForLumpSum === 1 ? true : false;\r\n  Balance.imputeDisparity = ImputeDisparity === 1 ? true : false;\r\n  Balance.aePostRetMortalityTable = AEPostRetMortalityTable === undefined ? null : AEPostRetMortalityTable;\r\n  Balance.aePreRetInt = AEPreRetInt ? AEPreRetInt.toString() : \"0\";\r\n  Balance.aePostRetInt = AEPostRetInt ? AEPreRetInt.toString() : \"0\";\r\n  Balance.taPostRetMort = TAPostRetMort === undefined ? null : TAPostRetMort;\r\n  Balance.taPreRetInt = TAPreRetInt ? TAPreRetInt.toString() : \"0\";\r\n  Balance.taPostRetInt = TAPostRetInt ? TAPostRetInt.toString() : \"0\";\r\n\r\n  \r\n  if(ModalData) {\r\n    OverrideSegRate1 = ModalData.segment1Rate.toString(); \r\n    OverrideSegRate2 = ModalData.segment2Rate.toString(); \r\n    OverrideSegRate3 = ModalData.segment3Rate.toString();\r\n  }\r\n\r\n  const CBScroll = React.useRef();\r\n  let [ACTUARIALMargin, setACTUARIALMargin] = React.useState(0); \r\n  let [TESTINGMargin, setTESTINGMargin] = React.useState(0); \r\n\r\n  let [ACTUARIALhideDrop, setACTUARIALhideDrop] = React.useState(false); \r\n  let [TESTINGhideDrop, setTESTINGhideDrop] = React.useState(false); \r\n\r\n  let CashDropSelected = null;\r\n  const DropdownCashController = (CashDropSelected) => {\r\n    if(CashDropSelected === 1)//ACTUARIAL\r\n    {\r\n      setACTUARIALMargin(ACTUARIALMargin = 150)\r\n      setACTUARIALhideDrop(ACTUARIALhideDrop = true)\r\n\r\n      setTESTINGMargin(TESTINGMargin = 0)\r\n      setTESTINGhideDrop(TESTINGhideDrop = false)\r\n    }\r\n    else if(CashDropSelected === 2)//Testing\r\n    {\r\n      setACTUARIALMargin(ACTUARIALMargin = 0)\r\n      setACTUARIALhideDrop(ACTUARIALhideDrop = false)\r\n\r\n      setTESTINGMargin(TESTINGMargin = 150)\r\n      setTESTINGhideDrop(TESTINGhideDrop = true)\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    //Api Data\r\n    //console.log(\"useEffect ====PLAN DETAILS DATA STATE ======================ROUTE========> \", route, dataState[\"Plan Details\"]);\r\n   //console.log(\"USE EFFECT CB TAB+++++++++++++++++\");\r\n    if (dataState[\"Plan Details\"] === null || (dataState[\"Plan Details\"] && dataState[\"Plan Details\"].Name === 'Plan Details')){\r\n      setPlanDetailsTab();     \r\n    }\r\n   //console.log('overrideSegRatesNew>>>>>>>>>>', dataState.NewOverrideSegRatesNew);\r\n    \r\n    if (dataState.NewOverrideSegRatesNew){\r\n      setOverrideSegRate1(OverrideSegRate1 = dataState.NewOverrideSegRatesNew.overrideSegRate1); \r\n      setOverrideSegRate2(OverrideSegRate2 = dataState.NewOverrideSegRatesNew.overrideSegRate2); \r\n      setOverrideSegRate3(OverrideSegRate3 = dataState.NewOverrideSegRatesNew.overrideSegRate3);\r\n    }\r\n  }, [dataState.DetailsFetchedData, /*dataState.DetailsFetchedData.overrideSegRatesNew,*/ dataState.NewOverrideSegRatesNew]);\r\n\r\n\r\n  const setPlanDetailsTab = () => {\r\n   //console.log('=================CB=====================FETCHED DATA', dataState.selectedPlan, '=', DetailsFetchedData.planId, DetailsFetchedData.planName);\r\n\r\n    if (DetailsFetchedData && DetailsFetchedData.planName){\r\n     //console.log(\"has Data\");\r\n      let UserCB = DetailsFetchedData;\r\n      //console.log(UserCB.isPBGCCovered,UserCB.preRetMortality,UserCB.mortalityTableCombined, UserCB.fundingForLumpSum, UserCB.imputeDisparity);\r\n\r\n      setIsPBGCCovered(IsPBGCCovered = UserCB.isPBGCCovered === true ? 1 : 2); \r\n      setCBInterestCredit(CBInterestCredit = UserCB.cbInterestCredit.toString())\r\n      setOverrideSegRate1(OverrideSegRate1 = UserCB.overrideSegRate1.toString()); \r\n      setOverrideSegRate2(OverrideSegRate2 = UserCB.overrideSegRate2.toString()); \r\n      setOverrideSegRate3(OverrideSegRate3 = UserCB.overrideSegRate3.toString());\r\n      setPreRetMortality(PreRetMortality = UserCB.preRetMortality === true ? 1 : 2);\r\n      setMortalityTableCombined(MortalityTableCombined = UserCB.mortalityTableCombined === true ? 1 : 2);\r\n      setFundingForLumpSum(FundingForLumpSum = UserCB.fundingForLumpSum === true ? 1 : 2);\r\n      setImputeDisparity(ImputeDisparity = UserCB.imputeDisparity === true ? 1 : 2);\r\n      setAEPostRetMortalityTable(AEPostRetMortalityTable = UserCB.aePostRetMortalityTable);\r\n      setAEPreRetInt(AEPreRetInt = UserCB.aePreRetInt.toString());\r\n      setAEPostRetInt(AEPostRetInt = UserCB.aePostRetInt.toString()); \r\n      setTAPostRetMort(TAPostRetMort = UserCB.taPostRetMort);\r\n      setTAPreRetInt(TAPreRetInt = UserCB.taPreRetInt.toString());\r\n      setTAPostRetInt(TAPostRetInt = UserCB.taPostRetInt.toString()); \r\n\r\n      \r\n    } //edit this with dataState.DetailsFetchedData\r\n  }\r\n\r\n  \r\n\r\n  //console.log(\"Balance\", Balance)\r\n  const { colors } = useTheme();\r\n\r\n  const RadioBtn = [\r\n    {\r\n      id: 1, // required\r\n      label: 'Yes', //required\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'No',\r\n    },\r\n  ];\r\n\r\n  const RbtnData = [\r\n    {\r\n      id: 1,\r\n      label: 'Yes'\r\n     },\r\n     {\r\n      id: 2,\r\n      label: 'No'\r\n     }\r\n    ];\r\n\r\n    const toBool = (int) =>{\r\n     //console.log('toBoool=============>',int);\r\n      if (int){\r\n        setIsPBGCCovered(IsPBGCCovered = true);\r\n      } else {\r\n        setIsPBGCCovered(IsPBGCCovered = false);\r\n      }\r\n    } \r\n    \r\n    \r\n    return(\r\n    \r\n      <View style= {[styles.container,{backgroundColor: colors.primary}]}>\r\n      <View style= {styles.inputContainer}>\r\n      <ScrollView ref={CBScroll} style= {styles.ScrollContainer}>\r\n        <View style={{marginBottom: 20}}> \r\n          <Text style={styles.title}>Will Plan be covered by PBGC?</Text>\r\n          <RadioButtonRN\r\n            data={RbtnData}\r\n            activeOpacity={2}\r\n            initial={IsPBGCCovered}\r\n            animationTypes={['pulse']}\r\n            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n            textStyle={{paddingLeft: 10}}\r\n            boxStyle={{width: 70}}\r\n\t\t\t\t\t  box={false}\r\n            selectedBtn={(e) => setIsPBGCCovered(IsPBGCCovered = e.id)}\r\n            circleSize={13}\r\n            activeColor={'#333333'}\r\n            deactiveColor={'grey'}\r\n            textColor={'#333333'}\r\n          />\r\n          <Text style={[styles.title,{marginTop: 10}]}>Cash Balance Interest Credit</Text>\r\n\r\n            <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0.00\"\r\n              style={[styles.textInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={CBInterestCredit}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setCBInterestCredit(CBInterestCredit = val)}\r\n            />\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n            <Text style={[styles.title,{marginTop: 10}]}>FUNDING INTEREST RATE</Text>\r\n            <TouchableOpacity style={styles.icon} onPress={() => setOpen(Open = !Open)}>\r\n              <Material name=\"file-table\" size={25} backgroundColor=\"#1f65ff\"/>\r\n            </TouchableOpacity>\r\n            {/*\r\n            <TouchableOpacity style={styles.icon} onPress={() => _handlePressButtonAsync()}>\r\n              <Material name=\"globe-model\" size={25} backgroundColor=\"#1f65ff\"/>\r\n            </TouchableOpacity>\r\n            */}\r\n            \r\n          </View>\r\n\r\n          {/*modal*/}\r\n            <Interest Open={Open} setOpen={setOpen} setModalData={setModalData} ModalData={ModalData}/>\r\n          {/*end*/}\r\n\r\n          <View style={{paddingLeft: 10,}}>\r\n              {/*\r\n            <Text style={styles.subNames}>Interest Rates </Text>*/}\r\n            <Text style={styles.subNames}>Yrs 0 - 5 Segment 1</Text>\r\n\r\n              <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0.00\"\r\n              style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={OverrideSegRate1}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setOverrideSegRate1(OverrideSegRate1 = val)}\r\n              />\r\n\r\n            <Text style={styles.subNames}>Yrs 6 - 20 Segment 2</Text>\r\n\r\n              <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0.00\"\r\n              style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value={OverrideSegRate2}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setOverrideSegRate2(OverrideSegRate2 = val)}\r\n              />\r\n\r\n            <Text style={styles.subNames}>Yrs Over 20 Segment 3 </Text>\r\n\r\n              <TextInput \r\n              placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n              placeholder=\"0.00\"\r\n              style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n              //autoCapitalize=\"none\"\r\n              value = {OverrideSegRate3}\r\n              keyboardType='numeric'\r\n              onChangeText={(val) => setOverrideSegRate3(OverrideSegRate3 = val)}\r\n              />\r\n\r\n            <Text style={styles.subNames}>Pre-Retirement Mortality </Text>\r\n\r\n            <RadioButtonRN\r\n              data={RadioBtn} //required\r\n              activeOpacity={1}\r\n                initial={PreRetMortality}\r\n                animationTypes={['pulse']}\r\n                style={{paddingLeft: 5,flexDirection: 'row'}}\r\n                textStyle={{paddingLeft: 10}}\r\n                boxStyle={{width: 70}}\r\n                box={false}\r\n                selectedBtn={(e) => setPreRetMortality(PreRetMortality = e.id)}\r\n                circleSize={13}\r\n                activeColor={'#333333'}\r\n                deactiveColor={'grey'}\r\n                textColor={'#333333'}\r\n              />\r\n            <Text style={styles.subNames}>Combined Mortality Table</Text>\r\n\r\n              <RadioButtonRN\r\n                data={RadioBtn} //required\r\n                activeOpacity={1}\r\n                initial={MortalityTableCombined}\r\n                animationTypes={['pulse']}\r\n                style={{paddingLeft: 5,flexDirection: 'row'}}\r\n                textStyle={{paddingLeft: 10}}\r\n                boxStyle={{width: 70}}\r\n                box={false}\r\n                selectedBtn={(e) => setMortalityTableCombined(MortalityTableCombined = e.id)}\r\n                circleSize={13}\r\n                activeColor={'#333333'}\r\n                deactiveColor={'grey'}\r\n                textColor={'#333333'}\r\n              />\r\n            <Text style={styles.subNames}>Funding for Lump Sum</Text>\r\n\r\n              <RadioButtonRN\r\n                data={RadioBtn} //required\r\n                activeOpacity={1}\r\n                initial={FundingForLumpSum}\r\n                animationTypes={['pulse']}\r\n                style={{paddingLeft: 5,flexDirection: 'row'}}\r\n                textStyle={{paddingLeft: 10}}\r\n                boxStyle={{width: 70}}\r\n                box={false}\r\n                selectedBtn={(e) => setFundingForLumpSum(FundingForLumpSum = e.id)}\r\n                circleSize={13}\r\n                activeColor={'#333333'}\r\n                deactiveColor={'grey'}\r\n                textColor={'#333333'}\r\n              />\r\n\r\n            <Text style={styles.subNames}>Impute Disparity</Text>\r\n\r\n              <RadioButtonRN\r\n                \r\n                data={RadioBtn} //required\r\n                activeOpacity={1}\r\n                initial={ImputeDisparity}\r\n                animationTypes={['pulse']}\r\n                style={{paddingLeft: 5,flexDirection: 'row'}}\r\n                textStyle={{paddingLeft: 10}}\r\n                boxStyle={{width: 70}}\r\n                box={false}\r\n                selectedBtn={(e) => setImputeDisparity(ImputeDisparity = e.id)}\r\n                circleSize={13}\r\n                activeColor={'#333333'}\r\n                deactiveColor={'grey'}\r\n                textColor={'#333333'}\r\n              />\r\n          </View>\r\n\r\n          <Text style={[styles.title,{marginTop: 10}]}>ACTUARIAL EQUIVALENCE</Text>\r\n          \r\n              \r\n               \r\n              <View style={{paddingLeft: 10,}}>\r\n              <Text style={styles.subNames}>Pre-Retirement Interest</Text>\r\n\r\n                <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0.00\"\r\n                style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={AEPreRetInt}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setAEPreRetInt(AEPreRetInt = val)}\r\n                />\r\n\r\n                               \r\n\r\n              <Text style={[styles.subNames,{}]}>Post Retirement Interest</Text>\r\n\r\n                <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0.00\"\r\n                style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={AEPostRetInt}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setAEPostRetInt(AEPostRetInt = val)}\r\n                />\r\n\r\n              <Text style={[styles.subNames,{paddingLeft: 0}]}>Post Retirement Mortality</Text>\r\n\r\n              <DropDownPicker\r\n                items={DropdownData.aePostRetMortalityTable}\r\n                  isVisible={ACTUARIALhideDrop}\r\n                  defaultIndex={0}\r\n                  defaultValue={AEPostRetMortalityTable.toString()} //value\r\n                  placeholder=\"Select an retirement mortality\"\r\n                  placeholderStyle={{color: colors.Logintext}}\r\n                  activeLabelStyle={{color: 'green'}}\r\n                  labelStyle={{color: colors.Logintext}}\r\n                  style={{borderWidth: 1}}\r\n                  itemStyle={{justifyContent: 'flex-start'}}\r\n                  dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                  containerStyle={{ height: 38, flex: 1,marginTop: 10, marginBottom: ACTUARIALMargin}}\r\n                  searchable={true}\r\n                  searchablePlaceholder=\"Search...\"\r\n                  searchableError={() => alert('Not found from dropdown')}\r\n                  searchableStyle={{color: 'rgba(51,51,51,0.5)'}}\r\n                  arrowColor='rgba(51,51,51,0.5)'\r\n                  onOpen={() => [CashDropSelected = 1,DropdownCashController(CashDropSelected),CBScroll.current.scrollTo({ x: 0, y: 500, animated: true })]}\r\n                onClose={() => {[setACTUARIALhideDrop(ACTUARIALhideDrop = false),setACTUARIALMargin(ACTUARIALMargin = 0)]}}\r\n                  onChangeItem={item => setAEPostRetMortalityTable(AEPostRetMortalityTable = item.value)}\r\n              /> \r\n            </View>\r\n          <Text style={[styles.title,{marginTop: 10}]}>TESTING ASSUMPTIONS</Text>\r\n            <View style={{paddingLeft: 10}}>\r\n              \r\n                <Text style={styles.subNames}>Pre-Retirement Interest</Text>\r\n                  <TextInput \r\n                  placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                  placeholder=\"0.00\"\r\n                  style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                  //autoCapitalize=\"none\"\r\n                  value={TAPreRetInt}\r\n                  keyboardType='numeric'\r\n                  onChangeText={(val) => setTAPreRetInt(TAPreRetInt = val)}\r\n                  />\r\n                            \r\n                <Text style={styles.subNames}>Post Retirement Interest</Text>\r\n                  <TextInput \r\n                  placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                  placeholder=\"0.00\"\r\n                  style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                  //autoCapitalize=\"none\"\r\n                  value={TAPostRetInt}\r\n                  keyboardType='numeric'\r\n                  onChangeText={(val) => setTAPostRetInt(TAPostRetInt = val)}\r\n                  />\r\n                  <Text style={styles.subNames}>Post Retirement Mortality</Text>  \r\n                  <DropDownPicker\r\n                    items={DropdownData.taPostRetMort}\r\n                    isVisible={TESTINGhideDrop}\r\n                    defaultIndex={0}\r\n                    defaultValue={TAPostRetMort} //value\r\n                    placeholder=\"Select an retirement mortality\"\r\n                    placeholderStyle={{color: colors.Logintext}}\r\n                    activeLabelStyle={{color: 'green'}}\r\n                    labelStyle={{color: colors.Logintext}}\r\n                    style={{borderWidth: 1}}\r\n                    itemStyle={{justifyContent: 'flex-start'}}\r\n                    dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                    containerStyle={{ height: 38, flex: 1,marginTop: 10, marginBottom: TESTINGMargin}}\r\n                    searchable={true}\r\n                    searchablePlaceholder=\"Search...\"\r\n                    searchableError={() => alert('Not found from dropdown')}\r\n                    searchableStyle={{color: 'rgba(51,51,51,0.5)'}}\r\n                    arrowColor='rgba(51,51,51,0.5)'\r\n                    onOpen={() => [CashDropSelected = 2,DropdownCashController(CashDropSelected),\r\n                        setTimeout(() => {\r\n                          CBScroll.current.scrollTo({ x: 0, y: 750, animated: true })\r\n                        }, 1)\r\n                      ]}\r\n                    onClose={() => {[setTESTINGhideDrop(TESTINGhideDrop = false),setTESTINGMargin(TESTINGMargin = 0)]}}\r\n                    onChangeItem={item => setTAPostRetMort(TAPostRetMort = item.value)}\r\n                />     \r\n            </View>\r\n        </View>\r\n      </ScrollView>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nexport default CashBalance;\r\n\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      flex: 1,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      paddingTop: 10\r\n     \r\n    },\r\n    inputContainer: {\r\n      flex: 1,\r\n      marginTop: 10,\r\n      backgroundColor: 'white',\r\n      borderTopLeftRadius: 20,\r\n      borderTopRightRadius: 20,\r\n    },\r\n    ScrollContainer: {\r\n      marginTop: 20,\r\n      paddingHorizontal: 16,\r\n    },\r\n    title: {\r\n      fontSize: height > 800 ? 18 : 14,\r\n      fontWeight: 'bold',\r\n      marginBottom: 7\r\n    },\r\n    subNames: {\r\n      paddingRight: 10,\r\n      marginTop: 7,\r\n      fontSize: height > 800 ? 15 : 12\r\n    },\r\n    icon: {\r\n      padding: 2,\r\n      marginTop: 5,\r\n      marginLeft: 5,\r\n      marginBottom: 5\r\n    },\r\n    textInput: {\r\n      flex: 1,  \r\n      borderBottomWidth: 1.5,\r\n      borderBottomColor: '#989c9d',\r\n    },\r\n    SubtextInput: {\r\n      flex: 1,  \r\n      marginLeft: 2,\r\n      marginBottom: 5,\r\n      marginTop: 5,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#989c9d',\r\n    },\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,ScrollView,TextInput,Dimensions } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport CheckBox from 'react-native-check-box';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst FOI = ({ navigation }) => {\r\n    const [{},dataState] = React.useContext(AuthContext);\r\n    const DefaultPlan = dataState.DefaultPlan;\r\n    let Details = dataState.Details;\r\n    let DetailsFetchedData = dataState.DetailsFetchedData;\r\n\r\n    \r\n   //console.log('My Catchup ========>', dataState.DetailsFetchedData.catchUp)    \r\n    //console.log('Is401kChecked',dataState.Is401kChecked)\r\n    let [TotOwnerCost, setTotOwnerCost] = React.useState(DefaultPlan.totOwnerCost ? DefaultPlan.totOwnerCost.toString() : null); \r\n    let [TotNonOwnerCost, setTotNonOwnerCost] = React.useState(DefaultPlan.totNonOwnerCost ? DefaultPlan.totNonOwnerCost.toString() : null); \r\n    let [CatchUp, setCatchUp] = React.useState(DefaultPlan.catchUp == \"Y\" ? 1:2); \r\n    let [IncludeMatch, setIncludeMatch] = React.useState(DefaultPlan.includeMatch == 0 ? 1:2); \r\n    let [MatchPercent1, setMatchPercent1] = React.useState(DefaultPlan.matchPercent1 ? DefaultPlan.matchPercent1.toString() : \"0.0\");\r\n    let [MatchLimit1, setMatchLimit1] = React.useState(DefaultPlan.matchLimit1 ? DefaultPlan.matchLimit1.toString() : \"0.0\");\r\n    let [MatchPercent2, setMatchPercent2] = React.useState(DefaultPlan.matchPercent2 ? DefaultPlan.matchPercent2.toString() : \"0.0\");\r\n    let [MatchLimit2, setMatchLimit2] = React.useState(DefaultPlan.matchLimit2 ? DefaultPlan.matchLimit2.toString() : \"0.0\" );\r\n    let [MatchPercent3, setMatchPercent3] = React.useState(DefaultPlan.matchPercent3 ? DefaultPlan.matchPercent3.toString() : \"0.0\");\r\n    let [MatchLimit3, setMatchLimit3] = React.useState(DefaultPlan.matchLimit3 ? DefaultPlan.matchLimit3.toString() : \"0.0\");\r\n    let [IsSafeHarborContrib, setIsSafeHarborContrib] = React.useState(DefaultPlan.isSafeHarborContrib);\r\n    let [Exclusions, setExclusions] = React.useState(DefaultPlan.exclusions == 0 ? 4:1); \r\n\r\n    //changing value of loginstate details\r\n    Details.totOwnerCost = TotOwnerCost ? TotOwnerCost.toString() : \"0\";\r\n    Details.totNonOwnerCost = TotNonOwnerCost ? TotNonOwnerCost.toString() : \"0\";\r\n    Details.catchUp = CatchUp === undefined ? 'Y': CatchUp === 1? 'Y': 'N';\r\n\r\n    if(IsSafeHarborContrib === true && IncludeMatch === 3)//IsSafeHarborContrib is true and Discretionary Match is selected\r\n    {\r\n      Details.includeMatch = 3;//Discretionary Match\r\n    }\r\n    else if(IsSafeHarborContrib === true && IncludeMatch === 2)//IsSafeHarborContrib is true and Regular Match is selected\r\n    {\r\n      Details.includeMatch = 1;//Regular Match\r\n    }\r\n    else if(IsSafeHarborContrib === true && IncludeMatch === 1)//IsSafeHarborContrib is true and no match is selected\r\n    {\r\n      Details.includeMatch = 0;//No Match\r\n    }\r\n    else if(IsSafeHarborContrib === false)//IsSafeHarborContrib is false\r\n    {\r\n      switch(IncludeMatch) {\r\n        case 1://No Match\r\n          Details.includeMatch = 0;\r\n          break;\r\n        \r\n        case 2://Regular Match \r\n          Details.includeMatch = 1;\r\n          break;\r\n   \r\n        case 3://Safe Harbor Match\r\n          Details.includeMatch = 2;\r\n          break;\r\n   \r\n        case 4://Discretionary Match\r\n          Details.includeMatch = 3;\r\n          break;\r\n   \r\n        default:\r\n          Details.includeMatch = null;\r\n          //Details.includeMatch = IncludeMatch === undefined ? null : IncludeMatch;\r\n        }\r\n    }\r\n    Details.matchPercent1 = MatchPercent1 ? MatchPercent1.toString() : \"0\";\r\n    Details.matchLimit1 = MatchLimit1 ? MatchLimit1.toString() : \"0\";\r\n    Details.matchPercent2 = MatchPercent2 ? MatchPercent2.toString() : \"0\";\r\n    Details.matchLimit2 = MatchLimit2 ? MatchLimit2.toString() : \"0\";\r\n    Details.matchPercent3 = MatchPercent3 ? MatchPercent3.toString() : \"0\";\r\n    Details.matchLimit3 = MatchLimit3 ? MatchLimit3.toString() : \"0\";\r\n    Details.isSafeHarborContrib = IsSafeHarborContrib;\r\n\r\n    switch(Exclusions) {\r\n      case 1://Owner in mobile\r\n      Details.exclusions = 3;\r\n        break;\r\n      \r\n      case 2://HCE in mobile\r\n      Details.exclusions = 2;\r\n        break;\r\n\r\n      case 3://Non-owner HCE in mobile\r\n      Details.exclusions = 1;\r\n        break;\r\n\r\n      case 4://None in mobile\r\n      Details.exclusions = 0;\r\n        break;\r\n\r\n      default:\r\n        Details.includeMatch = null;\r\n    }\r\n    \r\n   \r\n    \r\n   //console.log('Details',Details)\r\n   const catchRbt = [\r\n    {\r\n      id: 1, \r\n      //text: 'Yes', \r\n      label: 'Yes'\r\n    },\r\n    {\r\n      id: 2,\r\n      //text: 'No',\r\n      label: 'No'\r\n    },\r\n  ];\r\n\r\n  const matchRbt = [\r\n    {\r\n      id: 1, \r\n      label: 'No Match'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Regular Match'\r\n    },\r\n    {\r\n      id: 3, \r\n      label: 'Safe Harbor Match'\r\n    },\r\n    {\r\n      id: 4,\r\n      label: 'Discretionary Match'\r\n    },\r\n  ];\r\n  /*\r\n  const SubmatchRbt = [\r\n    {\r\n      id: 1, \r\n      label: 'No Match'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Regular Match'\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'Discretionary Match'\r\n    },\r\n  ];\r\n  */\r\n  \r\n \r\n  const exclusionRbt = [\r\n    {\r\n      id: 1,\r\n      label: 'Owner'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'HCE'\r\n    },\r\n    {\r\n      id: 3, \r\n      label: 'Non-owner HCE'\r\n    },\r\n    {\r\n      id: 4,\r\n      label: 'None'\r\n    },\r\n  ];\r\n    \r\n    const { colors } = useTheme();\r\n    //includeMatchArray\r\n    let [matchChoice, setmatchChoice] = React.useState(matchRbt); \r\n\r\n    React.useEffect(() => {\r\n      //Api Data\r\n      //console.log(\"useEffect ====PLAN DETAILS DATA STATE ======================ROUTE========> \", route, dataState[\"Plan Details\"]);\r\n     //console.log(\"USE EFFECT 401 TAB+++++++++++++++++\");\r\n      if (dataState[\"Plan Details\"] === null || (dataState[\"Plan Details\"] && dataState[\"Plan Details\"].Name === 'Plan Details')){\r\n        setPlanDetailsTab();     \r\n      }\r\n    }, [dataState.DetailsFetchedData]);\r\n  \r\n  \r\n    const setPlanDetailsTab = () => {\r\n     //console.log('==============401K==================FETCHED DATA', DetailsFetchedData.planName);\r\n      \r\n      if (DetailsFetchedData && DetailsFetchedData.planName){\r\n       //console.log(\"has Data\"); ////edit this with dataState.DetailsFetchedData\r\n\r\n        let User401k = DetailsFetchedData\r\n        setTotOwnerCost(TotOwnerCost = User401k.totOwnerCost.toString());\r\n        setTotNonOwnerCost(TotNonOwnerCost = User401k.totNonOwnerCost.toString());\r\n        setCatchUp(CatchUp = User401k.catchUp === 'Y' ? 1 : 2);\r\n        /*\r\n        if(User401k.isSafeHarborContrib === true && User401k.includeMatch === 4)// checking User401k.includeMatch\r\n        {\r\n          setIncludeMatch(IncludeMatch = 3);\r\n        }\r\n        else{\r\n          setIncludeMatch(IncludeMatch = User401k.includeMatch);\r\n        }*/\r\n\r\n        if(User401k.isSafeHarborContrib === true && User401k.includeMatch === 3)//IsSafeHarborContrib is true and Discretionary Match is selected\r\n        {\r\n          setIncludeMatch(IncludeMatch = 3);\r\n        }\r\n        else if(User401k.isSafeHarborContrib === true && User401k.includeMatch === 1)//IsSafeHarborContrib is true and Regular Match is selected\r\n        {\r\n          setIncludeMatch(IncludeMatch = 2);\r\n        }\r\n        else if(User401k.isSafeHarborContrib === true && User401k.includeMatch === 0)//IsSafeHarborContrib is true and no match is selected\r\n        {\r\n          setIncludeMatch(IncludeMatch = 1);\r\n        }\r\n        else if(IsSafeHarborContrib === false)//IsSafeHarborContrib is false\r\n        {\r\n          switch(User401k.includeMatch) {\r\n            case 0://No Match in website\r\n            setIncludeMatch(IncludeMatch = 1);\r\n              break;\r\n            \r\n            case 1://Regular Match in website\r\n            setIncludeMatch(IncludeMatch = 2);\r\n              break;\r\n      \r\n            case 2://Safe Harbor Match in website\r\n            setIncludeMatch(IncludeMatch = 3);\r\n              break;\r\n      \r\n            case 3://Discretionary Match in website\r\n            setIncludeMatch(IncludeMatch = 4);\r\n              break;\r\n      \r\n            default:\r\n              Details.includeMatch = null;\r\n          }\r\n        }\r\n\r\n\r\n        setMatchPercent1(MatchPercent1 = User401k.matchPercent1.toString());\r\n        setMatchLimit1(MatchLimit1 = User401k.matchLimit1.toString());\r\n        setMatchPercent2(MatchPercent2 = User401k.matchPercent2.toString());\r\n        setMatchLimit2(MatchLimit2 = User401k.matchLimit2.toString());\r\n        setMatchPercent3(MatchPercent3 = User401k.matchPercent3.toString());\r\n        setMatchLimit3(MatchLimit3 = User401k.matchLimit3.toString());\r\n        setIsSafeHarborContrib(IsSafeHarborContrib = User401k.isSafeHarborContrib);\r\n\r\n        switch(User401k.exclusions) {\r\n          case 3://Owner in website\r\n            setExclusions(Exclusions = 1);\r\n            break;\r\n          \r\n          case 2://HCE in website\r\n            setExclusions(Exclusions = 2);\r\n            break;\r\n    \r\n          case 1://Non-owner HCE in website\r\n            setExclusions(Exclusions = 3);\r\n            break;\r\n    \r\n          case 0://None in website\r\n            setExclusions(Exclusions = 4);\r\n            break;\r\n    \r\n          default:\r\n            //Details.includeMatch = null;\r\n        }\r\n        //setExclusions(Exclusions = User401k.exclusions);\r\n        \r\n        //IsSafeHarborContrib if true or false\r\n        SetIncludeMatchAarry();\r\n      }\r\n    }\r\n\r\n    const SetIncludeMatchAarry = () => {\r\n      if(IsSafeHarborContrib === true)\r\n        {\r\n          setmatchChoice(matchChoice =  [\r\n            {\r\n              id: 1, \r\n              label: 'No Match'\r\n            },\r\n            {\r\n              id: 2,\r\n              label: 'Regular Match'\r\n            },\r\n            {\r\n              id: 3,\r\n              label: 'Discretionary Match'\r\n            },\r\n          ])\r\n          setMatchPercent1(MatchPercent1 = '0')\r\n          setMatchLimit1(MatchLimit1 = '0')\r\n          setMatchPercent2(MatchPercent2 = '0')\r\n          setMatchLimit2(MatchLimit2 = '0')\r\n          setMatchPercent3(MatchPercent3 = '0')\r\n          setMatchLimit3(MatchLimit3 = '0')\r\n        }\r\n        else\r\n        {\r\n          //IsSafeHarborContrib = false\r\n          setmatchChoice(matchChoice =  [\r\n            {\r\n              id: 1, \r\n              label: 'No Match'\r\n            },\r\n            {\r\n              id: 2,\r\n              label: 'Regular Match'\r\n            },\r\n            {\r\n              id: 3, \r\n              label: 'Safe Harbor Match'\r\n            },\r\n            {\r\n              id: 4,\r\n              label: 'Discretionary Match'\r\n            },\r\n          ])\r\n        }\r\n    }\r\n\r\n    const CurrentMatch = (id) => {\r\n      if(id !== IncludeMatch)\r\n      {\r\n        if(id === 3 && IsSafeHarborContrib === false)\r\n        {\r\n          //console.log('id ', id)\r\n          setIncludeMatch(IncludeMatch = id);\r\n          setMatchPercent1(MatchPercent1 = '100');\r\n          setMatchLimit1(MatchLimit1 = '3');\r\n          setMatchPercent2(MatchPercent2 = '50');\r\n          setMatchLimit2(MatchLimit2 = '2');\r\n          setMatchPercent3(MatchPercent3 = '0');\r\n          setMatchLimit3(MatchLimit3 = '0');\r\n\r\n        }\r\n        else\r\n        {\r\n          //console.log('id 2 ', id)\r\n          setIncludeMatch(IncludeMatch = id);\r\n          setMatchPercent1(MatchPercent1 = '0');\r\n          setMatchLimit1(MatchLimit1 = '0');\r\n          setMatchPercent2(MatchPercent2 = '0');\r\n          setMatchLimit2(MatchLimit2 = '0');\r\n          setMatchPercent3(MatchPercent3 = '0');\r\n          setMatchLimit3(MatchLimit3 = '0');\r\n        }\r\n      }\r\n    }\r\n\r\n    const Is3Percentcheck = () => {\r\n      setIsSafeHarborContrib(IsSafeHarborContrib = !IsSafeHarborContrib);\r\n      if(IsSafeHarborContrib === true && IncludeMatch === 3) //when 3% is check and match is 3\r\n      {\r\n        setmatchChoice(matchChoice =  [\r\n          {\r\n            id: 1, \r\n            label: 'No Match'\r\n          },\r\n          {\r\n            id: 2,\r\n            label: 'Regular Match'\r\n          },\r\n          {\r\n            id: 3,\r\n            label: 'Discretionary Match'\r\n          },\r\n        ])\r\n        setIncludeMatch(IncludeMatch = 1);\r\n        setMatchPercent1(MatchPercent1 = '0')\r\n        setMatchLimit1(MatchLimit1 = '0')\r\n        setMatchPercent2(MatchPercent2 = '0')\r\n        setMatchLimit2(MatchLimit2 = '0')\r\n        setMatchPercent3(MatchPercent3 = '0')\r\n        setMatchLimit3(MatchLimit3 = '0')\r\n       // alert('Safe Harbor Match is deactivated')\r\n      }\r\n      else if(IsSafeHarborContrib === true && IncludeMatch === 4)// 3% is check and match is 4\r\n      {\r\n        setmatchChoice(matchChoice =  [\r\n          {\r\n            id: 1, \r\n            label: 'No Match'\r\n          },\r\n          {\r\n            id: 2,\r\n            label: 'Regular Match'\r\n          },\r\n          {\r\n            id: 3,\r\n            label: 'Discretionary Match'\r\n          },\r\n        ])\r\n        setIncludeMatch(IncludeMatch = 3);\r\n        setMatchPercent1(MatchPercent1 = '0')\r\n        setMatchLimit1(MatchLimit1 = '0')\r\n        setMatchPercent2(MatchPercent2 = '0')\r\n        setMatchLimit2(MatchLimit2 = '0')\r\n        setMatchPercent3(MatchPercent3 = '0')\r\n        setMatchLimit3(MatchLimit3 = '0')\r\n       // alert('Safe Harbor Match is deactivated')\r\n      }\r\n      else if(IsSafeHarborContrib === false && IncludeMatch === 3)// 3% is not check and match is 3\r\n      {\r\n        setmatchChoice(matchChoice =   [\r\n          {\r\n            id: 1, \r\n            label: 'No Match'\r\n          },\r\n          {\r\n            id: 2,\r\n            label: 'Regular Match'\r\n          },\r\n          {\r\n            id: 3, \r\n            label: 'Safe Harbor Match'\r\n          },\r\n          {\r\n            id: 4,\r\n            label: 'Discretionary Match'\r\n          },\r\n        ])\r\n        setIncludeMatch(IncludeMatch = 4);\r\n        setMatchPercent1(MatchPercent1 = '0')\r\n        setMatchLimit1(MatchLimit1 = '0')\r\n        setMatchPercent2(MatchPercent2 = '0')\r\n        setMatchLimit2(MatchLimit2 = '0')\r\n        setMatchPercent3(MatchPercent3 = '0')\r\n        setMatchLimit3(MatchLimit3 = '0')\r\n       // alert('Safe Harbor Match is deactivated')\r\n      }\r\n      else if(IsSafeHarborContrib === true) // when match is not 3 or 4 ... array will only change\r\n      {\r\n        setmatchChoice(matchChoice =  [\r\n          {\r\n            id: 1, \r\n            label: 'No Match'\r\n          },\r\n          {\r\n            id: 2,\r\n            label: 'Regular Match'\r\n          },\r\n          {\r\n            id: 3,\r\n            label: 'Discretionary Match'\r\n          },\r\n        ])\r\n        //setIncludeMatch(IncludeMatch = 3);\r\n        setMatchPercent1(MatchPercent1 = '0')\r\n        setMatchLimit1(MatchLimit1 = '0')\r\n        setMatchPercent2(MatchPercent2 = '0')\r\n        setMatchLimit2(MatchLimit2 = '0')\r\n        setMatchPercent3(MatchPercent3 = '0')\r\n        setMatchLimit3(MatchLimit3 = '0')\r\n       // alert('Safe Harbor Match is deactivated')\r\n      }\r\n      else // default\r\n      {\r\n        setmatchChoice(matchChoice =  [\r\n          {\r\n            id: 1, \r\n            label: 'No Match'\r\n          },\r\n          {\r\n            id: 2,\r\n            label: 'Regular Match'\r\n          },\r\n          {\r\n            id: 3, \r\n            label: 'Safe Harbor Match'\r\n          },\r\n          {\r\n            id: 4,\r\n            label: 'Discretionary Match'\r\n          },\r\n        ])\r\n        if(IncludeMatch === 3)\r\n        {\r\n          setIncludeMatch(IncludeMatch = 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return(\r\n    \r\n    <View style= {[styles.container,{backgroundColor: colors.primary}]}>\r\n    <View style= {styles.inputContainer}>\r\n      <ScrollView style= {styles.ScrollContainer}>\r\n\r\n        <View style={{marginBottom: 20, marginTop: height > 800 ? 20 : 0}}>\r\n          <Text style={styles.title}>Deferral %</Text>\r\n            \r\n            <View style={{flexDirection: 'row'}}>\r\n              <Text style={styles.subNames}>Owner</Text>\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0.00\"\r\n                style={[styles.textInput,{color: colors.Logintext}]}\r\n                value={TotOwnerCost}\r\n                //autoCapitalize=\"none\"\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setTotOwnerCost(TotOwnerCost = val)}\r\n              />\r\n              <Text style={styles.subNames}>Non-Owner</Text>\r\n\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0.00\"\r\n                style={[styles.textInput2,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={TotNonOwnerCost}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setTotNonOwnerCost(TotNonOwnerCost = val)}\r\n              />\r\n            </View>\r\n\r\n          <Text style={[styles.title,{marginTop: 10}]}>Catch-Up</Text>\r\n\r\n          <RadioButtonRN\r\n              data={catchRbt}\r\n              activeOpacity={2}\r\n              initial={CatchUp}\r\n              animationTypes={['pulse']}\r\n              style={{paddingLeft: 10,flexDirection: 'row'}}\r\n              textStyle={{paddingLeft: 10}}\r\n              boxStyle={{width: 70}}\r\n              box={false}\r\n              selectedBtn={(e) => setCatchUp(CatchUp = e.id)}\r\n              circleSize={13}\r\n              activeColor={'#333333'}\r\n              deactiveColor={'grey'}\r\n              textColor={'#333333'}\r\n            />\r\n\r\n\r\n          <Text style={[styles.title,{marginTop: 10}]}>Match %</Text>\r\n\r\n          <RadioButtonRN\r\n              data={matchChoice}\r\n              activeOpacity={2}\r\n              initial={IncludeMatch}\r\n              animationTypes={['pulse']}\r\n              style={{paddingLeft: 0}}\r\n              textStyle={{paddingLeft: 10}}\r\n              boxStyle={{width: 200}}\r\n              box={false}\r\n              selectedBtn={(e) => CurrentMatch(e.id)}\r\n              circleSize={13}\r\n              activeColor={'#333333'}\r\n              deactiveColor={'grey'}\r\n              textColor={'#333333'}\r\n            />\r\n\r\n            <View style={{flexDirection: 'row', marginTop: 5}}>\r\n\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput,{color: colors.Logintext}]}\r\n                value={MatchPercent1}\r\n                //autoCapitalize=\"none\"\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchPercent1(MatchPercent1 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>% of first</Text>\r\n\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput2,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={MatchLimit1}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchLimit1(MatchLimit1 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>%</Text>\r\n\r\n            </View>\r\n\r\n            <View style={{flexDirection: 'row'}}>\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={MatchPercent2}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchPercent2(MatchPercent2 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>% of first</Text>\r\n\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput2,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={MatchLimit2}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchLimit2(MatchLimit2 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>%</Text>\r\n            </View>\r\n\r\n            <View style={{flexDirection: 'row'}}>\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={MatchPercent3}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchPercent3(MatchPercent3 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>% of first</Text>\r\n\r\n              <TextInput \r\n                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                placeholder=\"0\"\r\n                style={[styles.textInput2,{color: colors.Logintext}]}\r\n                //autoCapitalize=\"none\"\r\n                value={MatchLimit3}\r\n                keyboardType='numeric'\r\n                onChangeText={(val) => setMatchLimit3(MatchLimit3 = val)}\r\n              />\r\n              <Text style={styles.MatchNum}>%</Text>\r\n            </View>\r\n\r\n          <Text style={[styles.title,{marginTop: 10}]}>3% Safe Harbor Contribution </Text>\r\n\r\n          <View style={{flexDirection: 'row'}}>\r\n              <CheckBox \r\n              style={{paddingRight: 5}}\r\n              checkedCheckBoxColor = {'#333333'}\r\n              uncheckedCheckBoxColor\t= {colors.Logintext}\r\n              isChecked={IsSafeHarborContrib} onClick = {()=> Is3Percentcheck()}/>\r\n              <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Yes</Text>\r\n          </View>\r\n          <Text style={[styles.title,{marginTop: 10}]}>Exclusions</Text>\r\n\r\n          <RadioButtonRN\r\n              data={exclusionRbt}\r\n              activeOpacity={2}\r\n              initial={Exclusions}\r\n              animationTypes={['pulse']}\r\n              style={{paddingLeft: 0}}\r\n              textStyle={{paddingLeft: 10}}\r\n              boxStyle={{width: 200}}\r\n              box={false}\r\n              selectedBtn={(e) => setExclusions(Exclusions = e.id)}\r\n              circleSize={13}\r\n              activeColor={'#333333'}\r\n              deactiveColor={'grey'}\r\n              textColor={'#333333'}\r\n            />\r\n\r\n          </View>\r\n      </ScrollView>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nexport default FOI;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      paddingTop: 10\r\n    },\r\n    inputContainer: {\r\n      flex: 1,\r\n      marginTop: 10,\r\n      backgroundColor: 'white',\r\n      borderTopLeftRadius: 20,\r\n      borderTopRightRadius: 20,\r\n    },\r\n    ScrollContainer: {\r\n      marginTop: 20,\r\n      paddingHorizontal: height > 800 ? 20 : 16,\r\n    },\r\n    title: {\r\n      fontSize: height > 800 ? 18 : 14,\r\n      fontWeight: 'bold',\r\n      marginBottom: 7\r\n    },\r\n    subNames: {\r\n      paddingRight: 10,\r\n      marginTop: 7,\r\n      paddingLeft: 5,\r\n      fontSize: height > 800 ? 15 : 12\r\n    },\r\n    textInput: {\r\n      flex: 1,  \r\n      borderBottomWidth: 1.5,\r\n      borderBottomColor: '#989c9d',\r\n      \r\n    },\r\n    textInput2: {\r\n      flex: 1, \r\n      borderBottomWidth: 1.5,\r\n      borderBottomColor: '#989c9d',\r\n    },\r\n    MatchNum: {\r\n      paddingRight: 10,\r\n      marginTop: 7,\r\n      paddingLeft: 10,\r\n      fontSize: height > 800 ? 18 : 15\r\n    }\r\n  });","import React from 'react';\r\nimport { Alert, Dimensions} from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport PDGeneralScreen from './PlanDetailsGeneralTab';\r\nimport PDCashbalanceScreen from './PlanDetailsCashBalanceTab';\r\nimport PD401kScreen from './PlanDetails401(k)Tab';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\nconst TopTab = createMaterialTopTabNavigator();\r\n\r\nconst TopTabs = ({navigation, route,error,set_Error}) => {\r\n    //let [check1, setcheck] = React.useState(false); \r\n    //console.log(route,'nested details ------------------->')\r\n    const [{},dataState] = React.useContext(AuthContext);\r\n  \r\n   //console.log('dataState.Details.PlanName', dataState.Details.planName)\r\n    const { colors } = useTheme();\r\n    return (\r\n        \r\n      <TopTab.Navigator swipeEnabled={false}  /*initialRouteName=\"General\"*/\r\n        tabBarOptions={{\r\n          activeTintColor: '#fff',\r\n          indicatorStyle: { backgroundColor: '#f3ad2b'},\r\n          //labelStyle: { fontSize: 12 },\r\n          style: { backgroundColor: colors.secondary },\r\n        }}\r\n        initialLayout={{\r\n          width: Dimensions.get('window').width\r\n        }}\r\n      >\r\n\r\n        <TopTab.Screen name=\"General\" //component={PDGeneralScreen} \r\n          listeners={({ navigation }) => ({\r\n          tabPress: event => {\r\n           //console.log('Gen Tab Click');\r\n            //dataState.Details.tabClicked = \"General\";\r\n            //navigation.popToTop()\r\n          }\r\n          })\r\n        }\r\n        >\r\n               {props => <PDGeneralScreen {...props} Error={error} SetError={set_Error} />}\r\n        </TopTab.Screen>\r\n        <TopTab.Screen name=\"Cash Balance\" component={PDCashbalanceScreen} \r\n           listeners={({ }) => ({\r\n            tabPress: event => {\r\n              //dataState.Details.tabClicked = \"Cash Balance\";  \r\n              if(dataState.Details.planName === undefined || dataState.Details.planName === \"\")\r\n              {\r\n                event.preventDefault();\r\n                Alert.alert('Error','Please enter Plan Name'); //dataState.Details.PlanName\r\n              }\r\n            }\r\n            })\r\n          }\r\n        />\r\n        <TopTab.Screen name=\"401(k)\" component={PD401kScreen} \r\n           listeners={({ }) => ({\r\n            tabPress: event => {\r\n              //dataState.Details.tabClicked = \"401(k)\";\r\n              if(dataState.Details.planName === undefined || dataState.Details.planName === \"\")\r\n              {\r\n                event.preventDefault();\r\n                Alert.alert('Error','Please enter Plan Name'); //dataState.Details.PlanName\r\n              }\r\n              else if(dataState.Is401kChecked === false)\r\n              {\r\n                event.preventDefault();\r\n                //Alert.alert('Not Editable','Please check 401(k) first');\r\n              }\r\n            }\r\n            })\r\n          }\r\n        />\r\n      </TopTab.Navigator>\r\n    )\r\n  };\r\n\r\n  export default TopTabs;","import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  Image,\r\n  Alert,\r\n  ScrollView,\r\n  TextInput,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Dimensions\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport{ AuthContext } from '../../components/context';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { color } from 'react-native-reanimated';\r\nimport moment from 'moment';\r\nimport * as DocumentPicker from 'expo-document-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport XLSX from 'xlsx';\r\nimport Settings from '../../settings.json';\r\nconst baseURL = Settings.domain;\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst CensusScreen = ({ navigation, CensusToggle, CensusLoading,DocumentType }) => {\r\n\r\n  let RightAction = ({item}) =>\r\n  {\r\n    return(\r\n      <View style={{flexDirection: 'row'}}>\r\n        <TouchableOpacity  style={styles.DeleteAction} onPress={() => CensusDeleteClickEventListener(item)}>\r\n            <Icon style={styles.actionText} name=\"delete\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.EditAction} onPress={() => CensusEditClickEventListener(item)}>\r\n            <Icon style={styles.actionText} name=\"account-edit\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  };\r\n  \r\n  const { colors } = useTheme();\r\n  const [{setScreen,setDropdownData },dataState] = React.useContext(AuthContext);\r\n\r\n  //let search = dataState.search;\r\n  let [CensusIndexChecked, setCensusIndexChecked] = React.useState(0);\r\n  let [CensusSearchVal, setCensusSearchVal] = React.useState(null);\r\n  //console.log('dataState.censusUpload in census page: ',dataState.censusUpload)\r\n\r\n  const data = null; //dataState.censusData;\r\n  //for search and flatlist\r\n  let [CensusInfo, setCensusInfo] = React.useState(data);\r\n  //for search\r\n  let [CensusInmemory, setCensusInmemory] = React.useState(data);\r\n  /*\r\n  if(dataState.censusUpload === true)\r\n  {\r\n    setCensusInfo(CensusInfo = dataState.censusData);\r\n    dataState.censusUpload = false;\r\n  }\r\n  */\r\n  //console.log('census Data from datastate',dataState.censusData.length)\r\n  //console.log('census Data from state',data.length)\r\n  //console.log('census Data from state',CensusInfo.length)\r\n  //console.log('CensusLoading from census: ', CensusLoading);\r\n  const [censusData, setCensusData] = React.useState(null);\r\n  const [oldCensusData, setOldCensusData] = React.useState(null);\r\n\r\n  const SaveCensus = async(body, planId) => {\r\n    let url = baseURL + '/Participants/ParticipantUpload';\r\n    let method = 'POST';\r\n    let headers = new Headers();\r\n   \r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n    \r\n    body = JSON.stringify(body);\r\n   //console.log('save census >>>>>>', url,method,headers, body);\r\n    let req = new Request(url, {\r\n        method,\r\n        headers,\r\n        body\r\n    });\r\n  \r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        \r\n        if (responseJson.isSuccess){\r\n          setScreen({Name: \"Census\", Method: \"Load\"});\r\n        } else{\r\n          Alert.alert(\"Save Error\", responseJson.message);\r\n          getCensus(dataState.plan.planId);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        getCensus(dataState.plan.planId);\r\n        return false;\r\n    });\r\n  }\r\n  \r\n  //uploading excel file\r\n  const PickAndUpload = async (planId) => {\r\n    \r\n    \r\n    let result = await DocumentPicker.getDocumentAsync({type: DocumentType,copyToCacheDirectory: true}); //type: '*/*' for all files\r\n    //alert(result.uri);\r\n    \r\n    if(result.uri != undefined)\r\n    {\r\n      const info =  await FileSystem.getInfoAsync(result.uri)\r\n      //?console.log('read file res: ', info);\r\n  \r\n      await FileSystem.readAsStringAsync(result.uri, {encoding: FileSystem.EncodingType.Base64}).then(b64 => XLSX.read(b64, {type: 'base64',cellText:true,cellNF: false,cellDates: true})).then(wb => { \r\n        /* sheet name */\r\n        const wsname = wb.SheetNames[1];\r\n        const ws = wb.Sheets[wsname];\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws, { raw: true,defval:null, dateNF:'mm/dd/yyyy'}); // or dateNF:'mm-dd-yyyy'\r\n        let payload = {};\r\n        let censusData = [];\r\n        \r\n        if (data && data.length){\r\n          payload.planId = planId;\r\n          data.forEach(function(item, idx) {        \r\n            let censusD = {};\r\n            censusD.CashBalance = item[\"Cash Balance\"] == null ? \"\" : item[\"Cash Balance\"].toString();\r\n            censusD.ClassCode = item[\"Class Code\"];\r\n            censusD.DateOfBirth = moment(item[\"Date of Birth\"]).add(1, 'days');\r\n            censusD.DateOfHire = moment(item[\"Date of Hire\"]).add(1, 'days');\r\n            censusD.Deferral = item.Deferral == null ? null : item.Deferral.toString();\r\n            censusD.W2Earnings = item.Earnings;\r\n            censusD.FamCode = item[\"Family Code\"];\r\n            censusD.Firstname = item[\"First Name\"];\r\n            censusD.Sex = item.Gender;\r\n            censusD.WorkHours = item.Hours;\r\n            censusD.LastName = item[\"Last Name\"];\r\n            censusD.LastYearComp = item[\"Last Year Earnings\"] == null ? 0 : item[\"Last Year Earnings\"];\r\n            censusD.PercentOwnership = item[\"Ownership Percentage\"];\r\n            censusD.Principal = item.Principal;\r\n            censusD.ProfitSharing = item[\"Profit Sharing\"] == null ? \"\" : item[\"Profit Sharing\"].toString();\r\n            censusData.push(censusD);\r\n          });\r\n          payload.census = censusData;\r\n          //console.log('before send to api ===================>',censusData);\r\n        }\r\n  \r\n        if (payload.census && payload.census.length){\r\n            SaveCensus(payload, planId);\r\n          }else{\r\n            alert('Invalid File');\r\n            setCensusData(censusData => oldCensusData);\r\n          }\r\n        \r\n  \r\n      \r\n      });\r\n    }else{\r\n          \r\n          setCensusData(censusData => oldCensusData);\r\n        }\r\n  } \r\n  \r\n\r\n  React.useEffect(() => {\r\n    //Api Data\r\n    if (dataState.Census === null || (dataState.Census && dataState.Census.Name === 'Census')){\r\n    setCensusData(censusData => null);\r\n    //console.log(\"useEffect =====CENSUS SCREEN========> \");\r\n      if (dataState.Census && dataState.Census.Method === 'PickAndUpload') {\r\n        PickAndUpload(dataState.plan.planId);\r\n      } else {\r\n        //console.log('=====================getCensus==========================');\r\n        getCensus(dataState.plan.planId);\r\n        getClass(dataState.plan.planId);\r\n      }\r\n    }\r\n  },  [dataState.Census/*,dataState.Classes*/]);\r\n\r\n\r\n  const getCensus = async (planId) => {\r\n    let url = baseURL + '/Participants/ParticipantList?planid=' +  planId + '&sortBy=Lastname';\r\n    let method = 'GET';\r\n    let headers = new Headers();\r\n    //console.log(url);\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n    \r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n     //console.log('CHECKING ERROR================>');\r\n      if (responseJson.isSuccess && responseJson.obj){\r\n         //console.log(\"FROM UseEffect =====Api Called CENSUS========> \");\r\n          TransfromCensusData(responseJson.obj);\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n          //setCensusData(censusData => []);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  const getClass = async (planId) => {\r\n    let url = baseURL + '/Classes/ClassList?planId=' +  planId;\r\n    let method = 'GET';\r\n    let headers = new Headers();\r\n    //console.log(url);\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n   \r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        if (responseJson.isSuccess && responseJson.obj){\r\n         //console.log(\"FROM UseEffect =====Api Called CLASS========> \",responseJson.obj);\r\n          //setClassData(classData => responseJson.obj);\r\n          let responseArray = responseJson.obj\r\n          let NewArray = responseArray.map(function(object) {\r\n              for (let key in object) {\r\n                return { label: object.classCode + ' - ' + object.description, value: object.classCode };\r\n              }\r\n          });\r\n         //console.log('NewArray',NewArray)\r\n          setDropdownData(NewArray)\r\n         //console.log('dataState.censusDropDownData',dataState.censusDropDownData)\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n          //setPlanData(planData => []);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  const TransfromCensusData = (data) => {\r\n    \r\n    let censusTransformData = [];\r\n    if (data && data.length){\r\n      //console.log (\"census data-->\",data);\r\n      data.forEach(function(item, idx) {\r\n        let tags = [];\r\n        let censusD = {};\r\n        censusD.participantID = item.participantID;\r\n        censusD.id = item.id;\r\n        censusD.dateOfBirth = moment(item[\"dateOfBirth\"]).format('MM/DD/YYYY');\r\n        censusD.dateOfHire = moment(item[\"dateOfHire\"]).format('MM/DD/YYYY');\r\n        censusD.workHours = item.workHours;\r\n        censusD.age = item.age;\r\n        censusD.sex = item.sex;\r\n        censusD.name = item.fullName;\r\n        censusD.Firstname = item.firstName;\r\n        censusD.Lastname = item.lastName;\r\n        censusD.Sex = item.sex;\r\n        censusD.Principal = item.principal\r\n        censusD.IsOwner = item.isOwner;\r\n        censusD.FamilyCode = item.familyCode;\r\n        censusD.W2Earnings = item.w2Earnings;\r\n        censusD.PastService = item.pastService;\r\n        censusD.HceOverride = item.hceOverride;\r\n        censusD.DeferCode = item.deferCode;\r\n        censusD.HasCatchUp = item.hasCatchUp;\r\n        censusD.CbPercent = item.cbPercent;\r\n        censusD.CbCode = item.cbCode;\r\n        censusD.PsCode = item.psCode;\r\n        censusD.PsPercent = item.psPercent;\r\n        censusD.DeferralPercent = item.deferralPercent;\r\n        censusD.OverrideParticipationDate = item.overrideParticipationDate;\r\n        censusD.lastYearComp = item.lastYearComp;\r\n        censusD.percentOwnership = item.percentOwnership;\r\n        censusD.age = item.age;\r\n        censusD.highlyComp = item.highlyComp;\r\n        censusD.classId = item.classId;\r\n        censusD.retAge = item.retAge;\r\n        censusD.classCode = item.classCode;\r\n        censusD.catchUpOverride = item.catchUpOverride\r\n        censusD.matchCode = item.matchCode \r\n        censusD.matchPercent = item.matchPercent \r\n        censusD.shCode = item.shCode \r\n        censusD.shPercent = item.shPercent \r\n        \r\n        censusD.participationDate = item.participationDate;\r\n        if (item[\"percentOwnership\"]) censusD.own = parseInt(item[\"percentOwnership\"]);\r\n        \r\n        if (item.principal && item.principal == \"Y\" || item.principal == \"Yes\") tags.push(\"Is PR? Yes\");\r\n        if (item[\"percentOwnership\"]) tags.push(item[\"percentOwnership\"].toString() + \"% Own\");\r\n        if (item[\"pastService\"]) tags.push(\"pastService: \" + item[\"pastService\"].toString());\r\n        if (item.w2Earnings) tags.push(\"W-2 Earnings: \" + item.w2Earnings.toString());\r\n        if (item[\"lastYearComp\"]) tags.push(item[\"lastYearComp\"].toString());\r\n        if (item.classCode) tags.push(\"Class Code: \" + item.classCode.toString());\r\n\r\n        censusD.tags = tags;\r\n        censusTransformData.push(censusD);\r\n        \r\n      });      \r\n    }  \r\n    //console.log(censusTransformData);\r\n    setCensusData(censusData => censusTransformData);\r\n    setOldCensusData(oldCensusData => censusTransformData);\r\n  }\r\n\r\n  const deleteParticipant = async (id) => {\r\n    let url = baseURL + '/Participants/Participant?id=' +  id; \r\n    let method = 'DELETE';\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n   //console.log('Delete Participant ======>', url, method, headers);\r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      if (responseJson.isSuccess && responseJson.obj){\r\n          setCensusData(censusData => null);\r\n          getCensus(dataState.plan.planId);\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n     \r\n  const cardClickEventListener = (item) => {\r\n   //console.log(item.name);\r\n  }\r\n\r\n  const CensusEditClickEventListener = (item) => {\r\n    navigation.navigate('Add',{CensusInfo: item})\r\n  }\r\n\r\n  const CensusDeleteClickEventListener = (item) => {\r\n   //console.log(item);\r\n    Alert.alert(\"Delete\", \"Are you sure you want to delete \" + item.name + \" ?\", \r\n    [{ text: \"Yes\", onPress: () => deleteParticipant(item.participantID) }, //CalculatePlan(dataState, setScreen)\r\n    { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n    { cancelable: false }); \r\n  }\r\n\r\n  const tagClickEventListener = (tagName) => {\r\n    Alert.alert(tagName);\r\n  }\r\n  \r\n  const CensusToggleshow = (item) => {\r\n    if(CensusIndexChecked === item.id)\r\n    {\r\n      setCensusIndexChecked(CensusIndexChecked = 0);\r\n      //console.log('option1')\r\n    }\r\n    else{\r\n      setCensusIndexChecked(CensusIndexChecked = item.id);\r\n      //console.log('option2',indexChecked)\r\n    }\r\n  }\r\n\r\n  const CensusOnSearch = (value) => {\r\n    let filteredName = CensusInmemory.filter(\r\n      Name => {\r\n        let namelowercase = (Name.name).toLowerCase()\r\n\r\n        let searchTermlowercase = value.toLowerCase()\r\n\r\n        return namelowercase.indexOf(searchTermlowercase) > -1\r\n      }\r\n    )\r\n    setCensusSearchVal(CensusSearchVal = value)\r\n    setCensusInfo(CensusInfo = filteredName)\r\n    //Alert.alert(value);\r\n  }\r\n  // {tagClickEventListener(tag)}\r\n  const renderTags = (item) =>{\r\n    return item.tags.map((tag, key) => {\r\n      return (\r\n        <TouchableOpacity key={key} style={styles.btnColor} onPress={() => CensusToggleshow(item)}>\r\n          <Text style={styles.tag}>{tag}</Text>\r\n        </TouchableOpacity> \r\n      );\r\n    })\r\n  }\r\n\r\n    return (\r\n      <View key={dataState.censusUpload} style={styles.container}>\r\n        {CensusToggle === true &&\r\n          <View style={styles.formContent}>\r\n          <View style={styles.inputContainer}>\r\n            <Icon style={styles.inputIcon} name=\"account-search\" size={25} color=\"grey\" />\r\n            <TextInput style={styles.inputs}\r\n              //ref={'txtSearch'}\r\n              value={CensusSearchVal}\r\n              placeholder=\"Search\"\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(value) => CensusOnSearch(value)}/>\r\n          </View>\r\n        </View> }\r\n        {!censusData || CensusLoading ?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          : \r\n          <View style = {styles.container}>\r\n          {censusData.length === 0 ?   \r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n              <Text style={[{fontSize:16, color: color.secondary}]}>No Records Found</Text>\r\n          </View>\r\n          :   \r\n          <SafeAreaView style={{marginTop: 5, flex: 1}}>\r\n            <Text style={{fontSize:17, color: color.secondary, textAlign: 'center', fontWeight: 'bold'}}>{dataState.plan.planName}</Text>  \r\n            <FlatList \r\n              style={styles.notificationList}\r\n              data={censusData} //CensusInfo\r\n              //extraData={CensusInfo,data}\r\n              keyExtractor= {(item) => {\r\n                return item.id.toString();\r\n              }}\r\n              renderItem={({item}) => {\r\n                let color = \"#95a5a6\"; //Purple: #6A5ACD Red: #FF4500 Pink: #FF69B4 //item.color\r\n                let own = null;\r\n                let avatar = require(\"../../assets/user.jpg\");\r\n                if (item.sex){\r\n                    if (item.sex.toUpperCase() == 'M'){\r\n                        color = \"#4682B4\";\r\n                        if (item.age && item.age >= 10 && item.age <= 39){\r\n                            avatar = require(\"../../assets/men1.jpg\");    \r\n                        } else if (item.age && item.age >= 40 && item.age <= 51){\r\n                            avatar = require(\"../../assets/men2.jpg\");\r\n                        } else{\r\n                            avatar = require(\"../../assets/men3.jpg\");\r\n                        }\r\n                    }else{\r\n                        color = \"#FF69B4\";\r\n                        if (item.age && item.age >= 10 && item.age <= 39){\r\n                            avatar = require(\"../../assets/women1.jpg\");    \r\n                        } else if (item.age && item.age >= 40 && item.age <= 51){\r\n                            avatar = require(\"../../assets/women2.jpg\");\r\n                        } else{\r\n                            avatar = require(\"../../assets/women3.jpg\");\r\n                            color = \"#FF4500\";\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n                if (item.own)avatar = require(\"../../assets/Owner.jpg\");\r\n                if (item.own) own =item.own.toString() +'%';\r\n\r\n                color=colors.icon;\r\n                //{cardClickEventListener(item)}\r\n                return (\r\n                <Swipeable \r\n                  renderRightActions={() => <RightAction item={item}/>}\r\n                  overshootRight={false}\r\n                >\r\n                <TouchableHighlight underlayColor={'transparent'} key={item.id} onPress={()=> CensusToggleshow(item)}>\r\n                  <View style={[styles.card,  {borderColor:color, backgroundColor: colors.iconDes}]}>\r\n                    <View style={styles.cardContent}>                \r\n                      <Image style={[styles.image, styles.imageContent]} source={avatar}/>\r\n                      <View style={styles.navbar}>\r\n                        <TouchableOpacity style={{flexDirection: 'row'}} onPress={() => CensusToggleshow(item)}>                 \r\n                            <Text style={[styles.name, {color: '#ffffff'}]}>{item.name}</Text>\r\n                        </TouchableOpacity>\r\n                        {/*CensusIndexChecked === item.id &&\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TouchableOpacity onPress={() => {CensusEditClickEventListener(item)}}>\r\n                                <Icon style={{paddingRight:15}} name=\"account-edit\" size={25} color=\"#ffffff\" />\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={() => {CensusDeleteClickEventListener(item)}}>\r\n                                <Icon style={{paddingRight:8}} name=\"account-remove\" size={25} color=\"#ffffff\" />\r\n                            </TouchableOpacity>\r\n                        </View>*/}  \r\n                      </View>\r\n                              \r\n                    </View>\r\n                    <TouchableOpacity onPress={() => CensusToggleshow(item)}>\r\n                    <View style={styles.dateHeader}>\r\n                        <Text style={[styles.date, {color: colors.planDes}]}>Birth Date</Text>\r\n                        <Text style={[styles.date, {color: colors.planDes}]}>Hire Date</Text> \r\n                        <Text style={[styles.date, {color: colors.planDes}]}>Hours Worked</Text> \r\n                    </View> \r\n                    <View style={styles.dateValue}>\r\n                        <Text style={[styles.date, {color: colors.planDes}]}>{item.dateOfBirth}</Text>\r\n                        <Text style={[styles.date, {marginLeft:-50, color: colors.planDes}]}>{item.dateOfHire}</Text> \r\n                        <Text style={[styles.date, {marginTop:0,color: colors.planDes}]}>{item.workHours}</Text> \r\n                    </View>  \r\n                    <View style={{flexDirection: 'row'}}>\r\n                        {own ?\r\n                        <View>\r\n                        <Icon style={[styles.crown, {}]} name=\"crown\" size={35} color=\"#f1c40f\" />\r\n                        <Text style={[styles.own, {}]}>{own}</Text>  \r\n                        </View>\r\n                        : null}\r\n                    </View>\r\n                    <View style={{flexDirection: 'row'}}>\r\n                        <Text style={[styles.age, {}]}>Age: {item.age}</Text>    \r\n                    </View>\r\n                    {CensusIndexChecked === item.id &&\r\n                    <View style={[styles.cardContent, styles.tagsContent]}>\r\n                      {renderTags(item)}\r\n                    </View>}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </TouchableHighlight>\r\n                </Swipeable>\r\n                )\r\n              }}/>\r\n          </SafeAreaView>\r\n          }\r\n          </View> \r\n        }\r\n      </View>\r\n      \r\n    );\r\n  \r\n}\r\nexport default CensusScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#EBEBEB',\r\n  },\r\n  navbar: {\r\n    flex: 1,  \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginTop:-80\r\n  },\r\n  formContent:{\r\n    flexDirection: 'row',\r\n    marginTop: 5,\r\n  },\r\n  inputContainer: {\r\n    borderBottomColor: '#F5FCFF',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius:30,\r\n    borderBottomWidth: 1,\r\n    height:45,\r\n    flexDirection: 'row',\r\n    alignItems:'center',\r\n    flex:1,\r\n    //margin:10,\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n    marginRight: 10\r\n  },\r\n  icon:{\r\n    width:30,\r\n    height:30,\r\n  },\r\n  iconBtnSearch:{\r\n    alignSelf:'center'\r\n  },\r\n  inputs:{\r\n    height:45,\r\n    marginLeft:16,\r\n    borderBottomColor: '#FFFFFF',\r\n    flex:1,\r\n  },\r\n  inputIcon:{\r\n    marginLeft:15,\r\n    justifyContent: 'center'\r\n  },\r\n  notificationList:{\r\n    marginTop: 5,\r\n    //padding:10,\r\n    //paddingTop: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n  },\r\n  card: {\r\n    height:null,\r\n    paddingTop:10,\r\n    paddingBottom:10,\r\n    marginTop:5,\r\n    flexDirection: 'column',\r\n    borderTopWidth:40,\r\n    marginBottom:5,\r\n  },\r\n  cardContent:{\r\n    flexDirection:'row',\r\n    marginLeft:10, \r\n  },\r\n  imageContent:{\r\n    marginTop:-40,\r\n  },\r\n  tagsContent:{\r\n    marginTop:10,\r\n    flexWrap:'wrap'\r\n  },\r\n  image:{\r\n    width:60,\r\n    height:60,\r\n    borderRadius:30,\r\n  },\r\n  name:{\r\n    fontSize: height > 800 ? 20 : 17,\r\n    fontWeight: 'bold',\r\n    marginLeft:10,\r\n    alignSelf: 'center'\r\n  },\r\n  crown:{\r\n    marginLeft:22,\r\n    alignSelf: 'center',\r\n    marginTop:-85,\r\n  },\r\n  own:{\r\n    fontSize:9,\r\n    fontWeight:\"bold\",\r\n    marginLeft:23,\r\n    alignSelf: 'center',\r\n    marginTop:-5,\r\n    color: '#ffffff'\r\n  },\r\n  age:{\r\n    fontSize: 9,\r\n    fontWeight:\"bold\",\r\n    marginLeft:24,\r\n    alignSelf: 'center',\r\n    marginTop: height > 800 ? -55 : -35,\r\n    color: '#ffffff'\r\n  },\r\n  date:{\r\n    fontSize: height > 800 ? 15 : 12,\r\n    alignSelf: 'center'\r\n  },\r\n  tag:{\r\n    fontSize: height > 800 ? 13 : 11,\r\n    alignSelf: 'center'\r\n  },\r\n  btnColor: {\r\n    padding:5,\r\n    borderRadius:40,\r\n    marginHorizontal:3,\r\n    backgroundColor: \"#eee\",\r\n    marginTop:5,\r\n  },\r\n  dateHeader: {\r\n    flex: 1,  \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingLeft:80,\r\n    paddingRight: 10,\r\n    marginTop:-25\r\n  },\r\n  dateValue: {\r\n    flex: 1,  \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingLeft:75,\r\n    paddingRight: 10,\r\n    },\r\n    DeleteAction: {\r\n      backgroundColor: '#dd2c00',\r\n      justifyContent: 'center',\r\n      //alignItems: 'flex-end',\r\n      //flex: 1,\r\n      marginBottom: 5,\r\n      marginTop: 5\r\n    },\r\n    EditAction: {\r\n      backgroundColor: '#72be03',\r\n      justifyContent: 'center',\r\n      //alignItems: 'flex-end',\r\n      //flex: 1,\r\n      marginBottom: 5,\r\n      marginTop: 5\r\n    },\r\n    actionText: {\r\n      padding: 15,\r\n      //color: 'white'\r\n    }\r\n});   ","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button,ScrollView, Alert, ActivityIndicator, Modal,TextInput,Dimensions,TouchableHighlight } from 'react-native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport CheckBox from 'react-native-check-box';\r\nimport{ AuthContext } from '../../components/context';\r\nimport { color } from 'react-native-reanimated';\r\nimport Settings from '../../settings.json';\r\nconst baseURL1 = Settings.calc;\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst ReportStandardScreen = ({ navigation }) => {\r\n    const { colors } = useTheme();\r\n    const [{ },dataState] = React.useContext(AuthContext);\r\n    let [ReportsName, setReportsName] = React.useState(null);\r\n    let [ReportModal, setReportModal] = React.useState(false);\r\n\r\n    let [isLoading, setIsLoading] = React.useState(false); \r\n    let [selectAll, setselectAll] = React.useState(false); \r\n    let [cover, setcover] = React.useState(false); \r\n    let [standing, setstanding] = React.useState(false); \r\n    let [provision, setprovision] = React.useState(false); \r\n    let [employee, setemployee] = React.useState(false);\r\n    let [contriReport, setcontriReport] = React.useState(false);\r\n    let [chartReport, setchartReport] = React.useState(false);\r\n    let [taxReport, settaxReport] = React.useState(false);\r\n    let [costReport, setcostReport] = React.useState(false);\r\n    let [testReport, settestReport] = React.useState(false);\r\n    let [percentReport, setpercentReport] = React.useState(false);\r\n    let [gateway, setgateway] = React.useState(false); \r\n    let [grouptestReport, setgrouptestReport] = React.useState(false);\r\n    let [mostValue, setmostValue] = React.useState(false);\r\n    let [detailReport, setdetailReport] = React.useState(false); \r\n    let [maxCash, setmaxCash] = React.useState(false); \r\n    let [testRes, settestRes] = React.useState(false); \r\n\r\n    const select = () => {\r\n      setselectAll(selectAll = !selectAll)\r\n      setcover(cover = selectAll)\r\n      setstanding(standing = selectAll)\r\n      setprovision(provision = selectAll)\r\n      setemployee(employee = selectAll)\r\n      setcontriReport(contriReport = selectAll)\r\n      setchartReport(chartReport = selectAll)\r\n      settaxReport(taxReport = selectAll)\r\n      setcostReport(costReport = selectAll)\r\n      settestReport(testReport = selectAll)\r\n      setpercentReport(percentReport = selectAll)\r\n      setgateway(gateway = selectAll)\r\n      setgrouptestReport(grouptestReport = selectAll)\r\n      setmostValue(mostValue = selectAll)\r\n      setdetailReport(detailReport = selectAll)\r\n      setmaxCash(maxCash = selectAll)\r\n      settestRes(testRes = selectAll)\r\n    }\r\n\r\n    const setParams = () => {\r\n      let params = \"\";\r\n      if (cover) params += \"'CoverPage.rdlc',\";\r\n      if (standing) params += \"'UnderstandingCB.rdlc',\";\r\n      if (provision) params += \"'PlanProvision.rdlc',\";\r\n      if (employee) params += \"'EmployeeCensusListingReport.rdlc',\";\r\n      if (contriReport) params += \"'ContributionListingReport.rdlc',\";\r\n      if (chartReport) params += \"'ContributionChartReport.rdlc',\";\r\n      if (taxReport) params += \"'CBTaxSummaryReport.rdlc',\";\r\n      if (costReport) params += \"'TargetNormalCost.rdlc',\";\r\n      if (testReport) params += \"'MinimumParticipationTest.rdlc',\";\r\n      if (percentReport) params += \"'AverageBenefitTest.rdlc',\";\r\n      if (gateway) params += \"'MinimumAllocationGateway.rdlc',\";\r\n      if (grouptestReport) params += \"'NormalAccrualRateForRateGroup.rdlc',\";\r\n      if (mostValue) params += \"'MostValuableEBAR.rdlc',\";\r\n      if (detailReport) params += \"'RateGroupTestingDetailReport.rdlc',\";\r\n      if (maxCash) params += \"'MaximumCashBalanceContributionReport.rdlc',\";\r\n\r\n      params += \"'NonDiscriminationTest.rdlc'\";\r\n      return params;\r\n    }\r\n\r\n    const YesClicked = () => {\r\n      setReportModal(!ReportModal);\r\n      setReport();\r\n    }\r\n\r\n    const setReport = async() => {\r\n      let name = ReportsName === null ? 'MultipleReports' : ReportsName;\r\n      let params = \"planId=\" + dataState.selectedPlan + \"&fundingYears=0&participantId=0\";\r\n      params += \"&reportNameList=\" + setParams();\r\n      params += \"&reportAlias=\" + name;\r\n      setIsLoading(true);\r\n      //console.log(params);\r\n      let url = baseURL1 + '/MultipleReports?' + params;\r\n      let method = 'GET';\r\n      let headers = new Headers();\r\n\r\n      //console.log(url);\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Authorization', dataState.userToken);\r\n      //console.log('Report =====>', url, method, headers);\r\n      let req = new Request(url, {\r\n          method,\r\n          headers\r\n      });\r\n  \r\n      await fetch(req)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          if (responseJson.isSuccess){\r\n           //console.log(\"FROM Report =====Api Called Generate report========> \", responseJson);\r\n            setReportsName(ReportsName = \"\");\r\n            navigation.navigate(\"Report list\")\r\n          } else {\r\n            Alert.alert(\"Data Error\", responseJson.message);              \r\n          }\r\n          setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n          Alert.alert(\"Connection Error\", error.message);\r\n          setIsLoading(false);\r\n          return false;\r\n      });\r\n    }\r\n\r\n  \r\n    return(\r\n        <ScrollView>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={ReportModal}\r\n            onRequestClose={() => {\r\n             //console.log(\"Modal has been closed.\");\r\n            }}\r\n          >\r\n            <TouchableHighlight underlayColor={'rgba(51,51,51,0.7)'} style={styles.centeredView} onPress={() => {setReportModal(!ReportModal);}}>\r\n              <View style={styles.modalView}>\r\n                <View style={{flexDirection: 'column'}}>\r\n                  <Text style={{...styles.modalText, fontWeight: 'bold', fontSize: 18}}>Reports</Text>\r\n                  <Text style={{...styles.modalText}}>Report Name</Text>\r\n                  <TextInput \r\n                    placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                    placeholder=\"Name...\"\r\n                    style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                    //autoCapitalize=\"none\"\r\n                    value={ReportsName}\r\n                    //keyboardType='numeric'\r\n                    onChangeText={(val) => setReportsName(ReportsName = val)}\r\n                  />\r\n                  <Text style={{...styles.modalText}}>Are you sure you want to create a new Report?</Text>\r\n                </View>\r\n                <View style={{flexDirection: 'row', alignItems: 'flex-end' , justifyContent: 'flex-end'}}>\r\n                  <TouchableHighlight underlayColor={\"#72be03\"}\r\n                    style={{ ...styles.openButton, backgroundColor: \"#72be03\", marginRight: 5 }}onPress={() => {YesClicked();}}\r\n                  >\r\n                    <Text style={styles.textStyle}>Yes</Text>\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight underlayColor={\"#72be03\"}\r\n                    style={{ ...styles.openButton, backgroundColor: \"#72be03\" }}onPress={() => {[setReportModal(!ReportModal),setReportsName(ReportsName = \"\")]}}\r\n                  >\r\n                    <Text style={styles.textStyle}>No</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            </TouchableHighlight>\r\n          </Modal>\r\n\r\n\r\n          <LinearGradient \r\n            colors={[colors.linearlight,colors.linearDark]}\r\n            style = {styles.listcontainer}\r\n          >  \r\n            <View style={{ flexDirection: 'column', marginTop: 5}}>\r\n            <Text style={{fontSize:17, color: color.secondary, paddingBottom: 5, textAlign: 'center', fontWeight: 'bold'}}>{dataState.plan.planName}</Text>\r\n              <View style={{backgroundColor: colors.plan, padding: 10, borderTopWidth: 5, borderColor: 'green'}}>\r\n                <Text style={styles.header}>Standard Reports</Text>\r\n              </View>\r\n              <View  style={{backgroundColor: 'white', padding: 10}}>\r\n\r\n                <View style={{flexDirection: 'row',flexWrap: 'wrap',flexShrink: 1,justifyContent: 'space-between',marginBottom: 10}}>\r\n                  <TouchableOpacity disabled = {isLoading} style={[styles.buttoncontainer,{backgroundColor: colors.icon}] } onPress={() => setReportModal(!ReportModal)/*setReport()*/}>\r\n                  { isLoading ?\r\n                    <ActivityIndicator size=\"large\" color=\"white\"/>\r\n                    :\r\n                    <Text style={styles.buttons}>Generate Reports</Text>\r\n                  } \r\n                    \r\n                  </TouchableOpacity>\r\n                  {/*<TouchableOpacity style={[styles.buttoncontainer,{backgroundColor: colors.icon}]} >\r\n                    <Text style={styles.buttons}>Generate PDF Reports</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity style={[styles.buttoncontainer,{backgroundColor: colors.icon}]} >\r\n                    <Text style={styles.buttons}>Generate Excel Reports</Text>\r\n                  </TouchableOpacity>*/}\r\n                </View>\r\n                <View style={{flexDirection: 'row',borderColor: 'grey',borderBottomWidth: 1.5,marginTop: 10}}>\r\n                  <View style={{flexDirection: 'row'}}>\r\n                    <CheckBox \r\n                    style={styles.CheckBox}\r\n                    checkedCheckBoxColor = {'#333333'}\r\n                    uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                    isChecked={selectAll} onClick = {()=> select()}/>\r\n                    <View style={styles.titlecontainer}>\r\n                      <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Select All</Text>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                <View style={{marginTop: 5}}>\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={cover} onClick = {()=> {setcover(cover = !cover)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Cover Sheet</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={standing} onClick = {()=> {setstanding(standing = !standing)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Understanding Cash Balance Plans</Text>\r\n                  </View>\r\n                </View>\r\n                \r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={provision} onClick = {()=> {setprovision(provision = !provision)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Plan Provision</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={employee} onClick = {()=> {setemployee(employee = !employee)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Employee Census Listing Report</Text>\r\n                  </View>\r\n                </View>\r\n                \r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={contriReport} onClick = {()=> {setcontriReport(contriReport = !contriReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Contribution Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={chartReport} onClick = {()=> {setchartReport(chartReport = !chartReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Contribution Chart Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={taxReport} onClick = {()=> {settaxReport(taxReport = !taxReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Tax Summary Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={costReport} onClick = {()=> {setcostReport(costReport = !costReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Target Normal Cost Report</Text>\r\n                  </View>\r\n                </View>\r\n                \r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={testReport} onClick = {()=> {settestReport(testReport = !testReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Minimum Participation Test Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={percentReport} onClick = {()=> {setpercentReport(percentReport = !percentReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Average Benefit Percentage Test Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={gateway} onClick = {()=> {setgateway(gateway = !gateway)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Minimum Allocation Gateway Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={grouptestReport} onClick = {()=> {setgrouptestReport(grouptestReport = !grouptestReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Normal Accrual Rate For Rate Group Testing Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={mostValue} onClick = {()=> {setmostValue(mostValue = !mostValue)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Most Valuable Accrual Rate for Rate Group Testing</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={detailReport} onClick = {()=> {setdetailReport(detailReport = !detailReport)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Rate Group Test Detail Report</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={maxCash} onClick = {()=> {setmaxCash(maxCash = !maxCash)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Maximum Cash Balance Contribution</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection: 'row'}}>\r\n                  <CheckBox \r\n                  style={styles.CheckBox}\r\n                  checkedCheckBoxColor = {'#333333'}\r\n                  uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                  isChecked={testRes} onClick = {()=> {settestRes(testRes = !testRes)}}/>\r\n                  <View style={styles.titlecontainer}>\r\n                    <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Test Result</Text>\r\n                  </View>\r\n                </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </LinearGradient>\r\n          </ScrollView>\r\n    )\r\n}\r\nexport default ReportStandardScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    header: {\r\n      fontSize: height > 800 ? 18 : 15,\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    },\r\n    listcontainer: {\r\n      flex: 1\r\n    },\r\n    titlecontainer: {\r\n      width: '80%',\r\n      justifyContent: 'center',\r\n      paddingBottom: 5,\r\n      //backgroundColor: 'red'\r\n    },\r\n    CheckBox: {\r\n      margin: 7,\r\n      padding: height > 800 ? 2.5 : 0,\r\n      justifyContent: 'center',\r\n      //backgroundColor: 'grey'\r\n    },\r\n    buttons: {\r\n      fontSize: height > 800 ? 16 : 13,\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    },\r\n    buttoncontainer: {\r\n      width: '30%',\r\n      padding: height > 800 ? 7 :5,\r\n      borderRadius: 10\r\n    },\r\n\r\n    \r\n  centeredView: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(52, 52, 52, 0.5)',\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    //marginTop: 22\r\n  },\r\n  modalView: {\r\n    //margin: 20,\r\n    width: width - 80,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 5,\r\n    padding: 20,\r\n    //alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 10,\r\n    textAlign: \"left\"\r\n  },\r\n  SubtextInput: {\r\n    //flex: 1,  \r\n    marginBottom: 5,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button } from 'react-native';\r\n\r\nconst ReportFavorite = ({ navigation }) => (\r\n    <View style= {{flex: 1, alignItems: 'center',justifyContent: 'center'}}>\r\n      <Text>ReportFavorite</Text>\r\n    </View>\r\n  )\r\n\r\nexport default ReportFavorite;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button } from 'react-native';\r\n\r\nconst ReportSmart = ({ navigation }) => (\r\n    <View style= {{flex: 1, alignItems: 'center',justifyContent: 'center'}}>\r\n      <Text>ReportSmart</Text>\r\n    </View>\r\n  )\r\n\r\nexport default ReportSmart;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,Button } from 'react-native';\r\n\r\nconst ReportAdmin = ({ navigation }) => (\r\n    <View style= {{flex: 1, alignItems: 'center',justifyContent: 'center'}}>\r\n      <Text>ReportAdmin</Text>\r\n    </View>\r\n  )\r\n\r\nexport default ReportAdmin;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });","import React from 'react';\r\nimport { Text,View} from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport ReportStandard from './ReportStandardScreen';\r\nimport ReportFavorite from './ReportFavoriteScreen';\r\nimport ReportSmart from './ReportSmartScreen';\r\nimport ReportAdmin from './ReportAdminScreen';\r\n\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\nconst TopTab = createMaterialTopTabNavigator();\r\n\r\nconst TopTabs = ({navigation}) => {\r\n  \r\n    const { colors } = useTheme();\r\n    return (\r\n        \r\n      <TopTab.Navigator tabBarOptions={{\r\n        activeTintColor: '#fff',\r\n        indicatorStyle: { backgroundColor: '#f3ad2b'},\r\n        //labelStyle: { fontSize: 12 },\r\n        style: { backgroundColor: colors.primary },\r\n        labelStyle: {\r\n          fontSize: 11,\r\n        },\r\n      }}>\r\n\r\n        <TopTab.Screen name=\"Standard Reports\" component={ReportStandard} />\r\n        <TopTab.Screen name=\"Favorite Reports\" component={ReportFavorite} />\r\n        <TopTab.Screen name=\"Smart Projection Report\" component={ReportSmart} />\r\n        <TopTab.Screen name=\"Admin Report\" component={ReportAdmin} />\r\n      </TopTab.Navigator>\r\n    )\r\n  };\r\n\r\n  export default TopTabs;","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,FlatList,Dimensions,TouchableHighlight,SafeAreaView, Alert, ActivityIndicator } from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport moment from 'moment';\r\nimport Settings from '../../settings.json';\r\nimport { color } from 'react-native-reanimated';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst {width,height} = Dimensions.get('window');\r\nconst baseURL = Settings.domain;\r\nlet ReportRightAction = ({item,index}) =>\r\n{\r\n  return(\r\n    <View style={{flexDirection: 'row'}}>\r\n      <TouchableOpacity  style={styles.DownloadAction} disabled = {item.Status != \"Completed\"} onPress={() => ReportDownload(item,index)}>\r\n          <Icon style={styles.actionText} name=\"download\" size={25} color=\"white\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n};\r\nconst ReportListScreen = ({ navigation, CalculateLoading }) => {\r\n    const { colors } = useTheme();\r\n    const [{ },dataState] = React.useContext(AuthContext);\r\n    const [reportData, setReportData] = React.useState(null);\r\n    \r\n    React.useEffect(() => { \r\n        setReportData(reportData => null)\r\n        getReportData(dataState.plan.planId);           \r\n    }, [dataState.Report]);\r\n    \r\n    const ReportDATA = [\r\n        {\r\n            id: '1',\r\n            Status: 'Complete',\r\n            Date: '7/20/2020', \r\n            Num: 2\r\n        },\r\n        {\r\n            id: '2',\r\n            Status: 'Pending',\r\n            Date: '7/22/2020',    \r\n            Num: 1\r\n        },\r\n        {\r\n            id: '3',\r\n            Status: 'Pending',\r\n            Date: '7/24/2020',\r\n            Num: 1\r\n        },\r\n      ];\r\n      \r\n      const getReportData = async (planId) => {\r\n        let url = baseURL + '/Calculation/ReportRequestList?queStatus=&sortBy=RequestDate&sortOrder=D&maxRows=10&planId=' +  planId;\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        //console.log(url);\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       //console.log('GET CALC PLAN =====>', url, method, headers);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n          if (responseJson.isSuccess && responseJson.obj){\r\n           //console.log(\"FROM UseEffect =====Api Called GET Report========> \", responseJson.obj);\r\n            let data = [];\r\n            responseJson.obj.forEach(function(item, idx) {        \r\n              let rptData = {};\r\n              rptData.id = item[\"id\"];\r\n              rptData.Status = item[\"requestStatusDesc\"];\r\n              rptData.Date = moment(item.requestDate).format('MM/DD/YYYY HH:MM:ss');\r\n              rptData.Num = item[\"reportName\"].split(',').length;\r\n              rptData.ReportName = item[\"reportAliasName\"];\r\n              data.push(rptData);\r\n            });\r\n\r\n            setReportData(reportData => data);            \r\n          } else {\r\n            //console.log(responseJson)\r\n            setReportData(reportData => []);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n      }\r\n\r\n\r\n      const viewReportById = async (item) => {\r\n        let url = baseURL + '/Calculation/ViewReport?id=' + item.id;\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        //console.log(url);\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       //console.log('GET REPORT PLAN =====>', url, method, headers);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n         //console.log(\"FROM UseEffect =====Api Called GET Report========> \", responseJson.obj);\r\n          \r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n      }\r\n\r\n  \r\n\r\n      const ReportDownload = async (item,index) => {\r\n       //console.log('item ===REPORT DOWNLOAD=====>',item,index)\r\n        //'http://africau.edu/images/default/sample.pdf'\r\n        \r\n        //let result = viewReportById(item);\r\n        let url = baseURL + '/Calculation/ViewReport?repid=' + item.id + '.pdf&Authorization=' + dataState.userToken.replace('bearer', '').trim();\r\n       //console.log('URL==>', url);\r\n        let result = await WebBrowser.openBrowserAsync(url);\r\n       //console.log(result);\r\n      }\r\n\r\n      const Reporttoggle = (item) => {\r\n        //Alert.alert('info:',item.id + \" \" + item.Class);\r\n       //console.log('info:',item.id + \" \" + item.Status + \" \" + item.Date);\r\n      }\r\n\r\n    return (\r\n        <LinearGradient \r\n        colors={[colors.linearlight,colors.linearDark]}\r\n        style = {styles.container}\r\n        >  \r\n        {!reportData ?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          :\r\n          <View style = {styles.container}>\r\n            {reportData.length === 0 ?   \r\n            <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n                <Text allowFontScaling={false} style={[{fontSize:16, color: color.secondary}]}>No Records Found</Text>\r\n            </View>\r\n            :\r\n            <SafeAreaView style={{marginTop: 5, marginBottom: 25}}>\r\n              <Text allowFontScaling={false} style={[styles.title,{fontSize:17, color: color.secondary, paddingBottom: 3}]}>{dataState.plan.planName}</Text>\r\n            <FlatList\r\n              data={reportData}\r\n              //extraData={}\r\n              renderItem={({ item,index }) => <Item index={index} item={item} /> }\r\n              keyExtractor={item => item.id.toString()}\r\n              //onEndReached={() => {}}\r\n            />\r\n        </SafeAreaView>\r\n            }\r\n          </View> \r\n        }\r\n        </LinearGradient>\r\n    );\r\n    function Item({ index,item }) {\r\n        let reportName = item.ReportName;\r\n        //console.log(\">>>\",item,\">>>\");\r\n        return (\r\n          \r\n          <View style={styles.listContainer}>\r\n            <Swipeable \r\n              disabled = {item.requestStatus != \"C\"}\r\n              renderRightActions={() => <ReportRightAction item={item} index={index + 1}/>}\r\n              overshootRight={false}\r\n            >\r\n\r\n            <TouchableHighlight underlayColor={'transparent'} key={index} disabled = {item.requestStatus != \"C\"} onPress={() => Reporttoggle(item)}>  \r\n              <View style={[styles.item,{borderTopColor: colors.icon, borderBottomColor: colors.icon}]}>\r\n              \r\n                <View style={[styles.TextContainer, {backgroundColor: colors.iconDes}]}>\r\n                    {reportName === \"\"  && item.Status !== \"Failed\" && \r\n                    <View>\r\n                      <ActivityIndicator size=\"small\" color={colors.icon}/>\r\n                    </View>}\r\n\r\n                    {reportName !== null &&  \r\n                    <View style={{justifyContent: 'flex-start',  flexDirection: 'row', paddingLeft: 3, paddingBottom: 3}}>\r\n                      <Text allowFontScaling={false} style={[styles.title,{fontSize: height > 800 ? 16 : 14, color: colors.textLight, fontStyle: 'italic'}]}>{item.Status !== \"Failed\"? item.ReportName: \"Report Failed\"}</Text>\r\n                    </View>}\r\n\r\n                    <View style={{justifyContent: 'space-around',  flexDirection: 'row',}}>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>No</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{index + 1}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Status</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{item.Status}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Run Date</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{item.Date}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Reports</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{item.Num}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n              \r\n              </View>\r\n            </TouchableHighlight>\r\n            </Swipeable>\r\n          </View>\r\n        );\r\n      }\r\n};\r\n\r\nexport default ReportListScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n  },\r\n  listContainer: {\r\n    marginHorizontal: 10,\r\n  },\r\n  item: {\r\n    marginBottom: 5,\r\n    //marginTop: 5,\r\n    //height: height/6,\r\n    borderTopWidth: 4,\r\n    borderBottomWidth: 4,\r\n  },\r\n  TextContainer: {\r\n    width: '100%',\r\n    padding: 10,\r\n    //borderBottomRightRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',   \r\n    fontSize: height > 800 ? 15 : 13,\r\n    //color: 'white'\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    fontSize: height > 800 ? 13 : 10,\r\n    //color: 'white'\r\n  },\r\n  DownloadAction: {\r\n    backgroundColor: '#00BFFF',\r\n    justifyContent: 'center',\r\n    //alignItems: 'flex-end',\r\n    //flex: 1,\r\n    marginBottom: 5,\r\n    //marginTop: 5\r\n  },\r\n  actionText: {\r\n    padding: 15,\r\n    //color: 'white'\r\n  }\r\n});","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,FlatList,Dimensions,TouchableHighlight,SafeAreaView, Alert, ActivityIndicator, Button, Modal,TextInput } from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport moment from 'moment';\r\nimport Settings from '../../settings.json';\r\nimport { color } from 'react-native-reanimated';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst {width,height} = Dimensions.get('window');\r\nconst baseURL = Settings.domain;\r\nconst baseURL1 = Settings.calc;\r\n//CalculateDownloadActionClickEventListener(item,index)\r\n\r\n\r\n\r\nconst CalculateScreen = ({ navigation, CalculateLoading, CalculateModal,SetCalculateModal }) => {\r\n  let CalculateRightAction = ({item,index}) =>\r\n  {\r\n    return(\r\n      <View style={{flexDirection: 'row'}}>\r\n        {(item.requestStatus === 'C')?\r\n        <TouchableOpacity  style={styles.DownloadAction} onPress={() => handleDownload(item)}>\r\n            <Icon style={styles.actionText} name=\"download\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n        : null\r\n        }\r\n      </View>\r\n    )\r\n  };\r\n    const { colors } = useTheme();\r\n    const [{ },dataState] = React.useContext(AuthContext);\r\n   //console.log(CalculateModal);\r\n    let [CalculateIndex, setCalculateIndex] = React.useState(null);//default 1\r\n    let [CalReportName, setCalReportName] = React.useState(null);\r\n    const CalculateDATA = [\r\n        {\r\n            id: '1',\r\n            Status: 'Complete',\r\n            Date: '7/20/2020', \r\n        },\r\n        {\r\n            id: '2',\r\n            Status: 'Pending',\r\n            Date: '7/22/2020',    \r\n        },\r\n        {\r\n            id: '3',\r\n            Status: 'Pending',\r\n            Date: '7/24/2020',\r\n        },\r\n      ];\r\n      const [calculateData, setCalculateData] = React.useState(null);\r\n  \r\n      \r\n      const handleDownload = async (item) => {\r\n        let reportLink = item.reportOutputName.replace('DownloadReport','ViewReport');\r\n        reportLink = reportLink.replace('?id', '?repid') + '.pdf&Authorization=' + dataState.userToken.replace('bearer', '').trim();\r\n       //console.log(item.reportOutputName, reportLink);\r\n        let result = await WebBrowser.openBrowserAsync(reportLink);\r\n        //setresult(thisresult = result)\r\n      };      \r\n      \r\n      React.useEffect(() => {\r\n        if (dataState.Calculate === null || (dataState.Calculate && dataState.Calculate.Name === 'Calculate')){\r\n          setCalculateData(calculateData => null);\r\n         //console.log(\"useEffect =====CALCULATE SCREEN========> \", dataState.plan);\r\n          if (dataState.Calculate && dataState.Calculate.Method === 'Calculate') {\r\n            \r\n            calculatePlan(dataState.plan.planId);\r\n          } else {\r\n            getCalculatedPlan(dataState.plan.planId);\r\n          }\r\n        }\r\n        \r\n      }, [dataState.Calculate]);\r\n      \r\n\r\n      const ConfirmCalcualte = (planId) => {\r\n        Alert.alert(\"Calculate\", \"Are you sure you want to Calculate current Plan?\", \r\n        [{ text: \"Yes\", onPress: () => calculatePlan(planId) },\r\n        { text: \"No\", onPress: () => getCalculatedPlan(planId), style: \"cancel\" }],\r\n        { cancelable: false }); \r\n      }\r\n\r\n      const YesClicked = () => {\r\n        SetCalculateModal(!CalculateModal);\r\n        calculatePlan(dataState.plan.planId);\r\n      }\r\n\r\n\r\n      const calculatePlan = async (planId) => {\r\n        let name = CalReportName === null ? 'ReportFromCalculation' : CalReportName;\r\n        let url = baseURL1 + '/GetCalculationResult?planId=' + planId + '&reportAlias=' + name;\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n       //console.log(url);\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       //console.log('CALC PLAN =====>', url, method, headers);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson.isSuccess){\r\n             //console.log(\"FROM UseEffect =====Api Called CALCULATE========> \", responseJson);\r\n              setCalReportName(CalReportName = \"\");\r\n            } else {\r\n              Alert.alert(\"Data Error\", responseJson.message);              \r\n            }\r\n            setTimeout(() => {\r\n              getCalculatedPlan(planId);\r\n            }, 1000)\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            getCalculatedPlan(planId);\r\n            return false;\r\n        });\r\n      }\r\n\r\n      const getCalculatedPlan = async (planId) => {\r\n        let url = baseURL + '/Calculation/CalculationRequestList?planId=' +  planId;\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        //console.log(url);\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       //console.log('GET CALC PLAN =====>', url, method, headers);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n          if (responseJson.isSuccess && responseJson.obj){\r\n           //console.log(\"FROM UseEffect =====Api Called GET CALCULATE========> \", responseJson.obj);\r\n            setCalculateData(calculateData => responseJson.obj);            \r\n          } else {\r\n            //Alert.alert(\"Data Error\", responseJson.message);\r\n            //getCalculatedPlan(planId);\r\n           //console.log(responseJson)\r\n            setCalculateData(calculateData => []);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n      }\r\n\r\n      const toggleCalculate = (item,index) => {\r\n        //Alert.alert('info:',item.id + \" \" + item.Class);\r\n       //console.log('info:',item.id + \" \" + item.Status + \" \" + item.Date);\r\n        setCalculateIndex(CalculateIndex = index)\r\n\r\n        //console.log('All info----------------->:',item)\r\n      }\r\n\r\n      const data = (datas, DBInNature) => {\r\n        //const keys = Object.entries(datas); // data info\r\n      \r\n        return datas.map((item) => {\r\n          //console.log('===================================>', item.ndtFieldVal);\r\n          let id = item.ndtFieldId;\r\n          let text = item.ndtFieldName.replace(\"\\\\n\", \"\\n\");\r\n          let value = item.ndtFieldVal;\r\n          if (value === \"True\" && id === \"MinAllocationPassed\" && DBInNature === true){\r\n            value = <Icon name=\"check\" size={20} color={colors.email}>*</Icon>\r\n          }\r\n          else if (value === \"True\"){\r\n            value = <Icon name=\"check\" size={20} color=\"green\"/>\r\n          } \r\n          else if (value === \"False\"){\r\n            value = <Icon name=\"window-close\" size={20} color=\"red\"/>\r\n          }\r\n\r\n        return (\r\n          [<View key={1} style={{flex:1,flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\r\n              {id === \"IsDBInNature\" ?\r\n                  <Text allowFontScaling={false} key={id} style={[styles.infotext,{color: colors.email,fontSize: 10, marginLeft: 15}]}>{text}</Text>\r\n                  :\r\n                  <Text allowFontScaling={false} key={id} style={[styles.infotext,{color: colors.textLight}]}>{text}</Text>\r\n              }\r\n      \r\n              {value !== \"*\" &&\r\n                <Text allowFontScaling={false} style={[styles.infotext,{color: colors.textLight}]}>{value}</Text>\r\n              }\r\n          </View>]\r\n          )\r\n        })\r\n      }\r\n\r\n      console.log('calculateData---> ', calculateData)\r\n    return (\r\n        <LinearGradient \r\n        colors={[colors.linearlight,colors.linearDark]}\r\n        style = {styles.container}\r\n        >  \r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={CalculateModal}\r\n          onRequestClose={() => {\r\n           //console.log(\"Modal has been closed.\");\r\n          }}\r\n        >\r\n          <TouchableHighlight underlayColor={'rgba(51,51,51,0.7)'} style={styles.centeredView} onPress={() => {SetCalculateModal(!CalculateModal);}}>\r\n            <View style={styles.modalView}>\r\n              <View style={{flexDirection: 'column'}}>\r\n                <Text allowFontScaling={false} style={{...styles.modalText, fontWeight: 'bold', fontSize: 18}}>Calculate</Text>\r\n                <Text allowFontScaling={false} style={{...styles.modalText}}>Report Name</Text>\r\n                <TextInput \r\n                  placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                  placeholder=\"Name...\"\r\n                  style={[styles.SubtextInput,{color: colors.Logintext}]}\r\n                  //autoCapitalize=\"none\"\r\n                  value={CalReportName}\r\n                  //keyboardType='numeric'\r\n                  onChangeText={(val) => setCalReportName(CalReportName = val)}\r\n                />\r\n                <Text allowFontScaling={false} style={{...styles.modalText}}>Are you sure you want to Calculate Plan?</Text>\r\n              </View>\r\n              <View style={{flexDirection: 'row', alignItems: 'flex-end' , justifyContent: 'flex-end'}}>\r\n                <TouchableHighlight underlayColor={\"#72be03\"}\r\n                  style={{ ...styles.openButton, backgroundColor: \"#72be03\", marginRight: 5 }}onPress={() => {YesClicked()}}\r\n                >\r\n                  <Text allowFontScaling={false} style={styles.textStyle}>Yes</Text>\r\n                </TouchableHighlight>\r\n                <TouchableHighlight underlayColor={\"#72be03\"}\r\n                  style={{ ...styles.openButton, backgroundColor: \"#72be03\" }}onPress={() => {[SetCalculateModal(!CalculateModal),setCalReportName(CalReportName = \"\")]}}\r\n                >\r\n                  <Text allowFontScaling={false} style={styles.textStyle}>No</Text>\r\n                </TouchableHighlight>\r\n              </View>\r\n            </View>\r\n          </TouchableHighlight>\r\n        </Modal>\r\n\r\n        {!calculateData ?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          :\r\n          <View style = {styles.container}>\r\n            {calculateData.length === 0 ?   \r\n            <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n                <Text allowFontScaling={false} style={[{fontSize:16, color: color.secondary}]}>No Records Found</Text>\r\n            </View>\r\n            :\r\n            <SafeAreaView style={{marginTop: 5, marginBottom: 25}}>\r\n            <Text allowFontScaling={false} style={[styles.title,{fontSize:17, color: color.secondary, paddingBottom: 3}]}>{dataState.plan.planName}</Text>\r\n            <FlatList\r\n              data={calculateData}\r\n              //extraData={}\r\n              renderItem={({ item,index }) => <Item index={index} item={item} /> }\r\n              keyExtractor={item => item.id.toString()}\r\n              //onEndReached={() => {}}\r\n            />\r\n        </SafeAreaView>\r\n            }\r\n          </View> \r\n        }\r\n        </LinearGradient>\r\n    );\r\n\r\n    function Item({ index,item }) {\r\n        let requestDate = moment(item.requestDate).format('MM/DD/YYYY HH:MM:ss');\r\n        let requestCompleted = 'Running';\r\n        let reportName = item.reportName;\r\n        let DBInNature = false;\r\n        //console.log(\"item.ndtResult---> \", item.ndtResult);\r\n\r\n        item.ndtResult.map((object) => {\r\n            let id = object.ndtFieldId;\r\n            if(id === \"IsDBInNature\"){\r\n              DBInNature = true;\r\n            }\r\n        })\r\n\r\n        if (item.requestStatus === \"C\") requestCompleted = moment(item.requestCompleted).format('MM/DD/YYYY HH:MM:ss');\r\n        return (\r\n          <View style={styles.listContainer}>\r\n            <Swipeable \r\n              renderRightActions={() => <CalculateRightAction item={item} index={index + 1}/>}\r\n              overshootRight={false}\r\n            >\r\n\r\n            <TouchableHighlight underlayColor={'transparent'} disabled = {item.requestStatus != \"C\"} key={index} onPress={() => toggleCalculate(item,index)}>  \r\n              <View style={[styles.item,{borderTopColor: colors.icon, borderBottomColor: colors.icon}]}>\r\n                <View style={[styles.TextContainer, {backgroundColor: colors.iconDes}]}>\r\n                    {reportName !== null &&                \r\n                    <View style={{justifyContent: 'flex-start',  flexDirection: 'row', paddingLeft: 3, paddingBottom: 3}}> \r\n                      <Text allowFontScaling={false} style={[styles.title,{fontSize: height > 800 ? 18 : 14, color: colors.textLight, fontStyle: 'italic'}]}>{item.reportName}</Text>\r\n                    </View>\r\n                    }\r\n                    {reportName === null && item.requestStatus !== \"F\" && \r\n                    <View>\r\n                      <ActivityIndicator size=\"small\" color={colors.icon}/>\r\n                    </View>\r\n                    }\r\n                    <View style={{justifyContent: 'space-around',  flexDirection: 'row',}}>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>No</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{index + 1}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Status</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{item.requestStatusDesc}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Run Date</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>{requestDate}</Text>\r\n                        </View>\r\n                        <View style={{flexDirection: 'column'}}>\r\n                            <Text allowFontScaling={false} style={[styles.title,{color: colors.textLight}]}>Reports</Text>\r\n                            <Text allowFontScaling={false} style={[styles.subtitle,{color: colors.textLight}]}>16</Text>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                  \r\n                    {item.ndtResult !== null && CalculateIndex === index && \r\n                      <View style={{ paddingLeft: 10, marginTop: 10}}>\r\n                        {data(item.ndtResult, DBInNature)}\r\n                      </View>\r\n                    }\r\n\r\n                </View>\r\n              </View>\r\n            </TouchableHighlight>\r\n            </Swipeable>\r\n          </View>\r\n        );\r\n      }\r\n\r\n     \r\n};\r\n\r\nexport default CalculateScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n  },\r\n  listContainer: {\r\n    marginHorizontal: 10,\r\n  },\r\n  item: {\r\n    marginBottom: 5,\r\n    //marginTop: 5,\r\n    //height: height/6,\r\n    borderTopWidth: 4,\r\n    borderBottomWidth: 4,\r\n  },\r\n  TextContainer: {\r\n    width: '100%',\r\n    padding: 10,\r\n    //borderBottomRightRadius: 10,\r\n    //justifyContent: 'center',\r\n    //alignContent: 'center',\r\n  },\r\n  infotext: {\r\n    textAlign: 'left',\r\n    //fontWeight: 'bold',   \r\n    fontSize: 11,\r\n    padding: 2,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',   \r\n    fontSize: height > 800 ? 16 : 13,\r\n    //color: 'white'\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    fontSize: height > 800 ? 13 : 10,\r\n    //color: 'white'\r\n  },\r\n  DownloadAction: {\r\n    backgroundColor: '#00BFFF',\r\n    justifyContent: 'center',\r\n    //alignItems: 'flex-end',\r\n    //flex: 1,\r\n    marginBottom: 5,\r\n    //marginTop: 5\r\n  },\r\n  EditAction: {\r\n    backgroundColor: '#72be03',\r\n    justifyContent: 'center',\r\n    //alignItems: 'flex-end',\r\n    //flex: 1,\r\n    marginBottom: 5,\r\n    //marginTop: 5\r\n  },\r\n  actionText: {\r\n    padding: 15,\r\n    //color: 'white'\r\n  },\r\n\r\n  centeredView: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(52, 52, 52, 0.5)',\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    //marginTop: 22\r\n  },\r\n  modalView: {\r\n    //margin: 20,\r\n    width: width - 80,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 5,\r\n    padding: 20,\r\n    //alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 10,\r\n    textAlign: \"left\"\r\n  },\r\n  SubtextInput: {\r\n    //flex: 1,  \r\n    marginBottom: 5,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#989c9d',\r\n  },\r\n \r\n});","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,FlatList,Dimensions,TouchableHighlight,Alert, ActivityIndicator } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\r\nimport { color } from 'react-native-reanimated';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport Settings from '../../settings.json';\r\nconst {width,height} = Dimensions.get('window');\r\nconst baseURL = Settings.domain;\r\n\r\nlet RightAction = ({item}) =>\r\n{\r\n  return(\r\n    <View style={{flexDirection: 'row'}}>\r\n    {(item.classCode === 'A' || item.classCode === 'B' || item.classCode === 'C')? null:\r\n    <TouchableOpacity  style={styles.DeleteAction} onPress={() =>  ClassesdeleteClickEventListener(item)}>\r\n        <Icon style={styles.actionText} name=\"delete\" size={25} color=\"white\" />\r\n    </TouchableOpacity>\r\n    }\r\n    <TouchableOpacity style={styles.EditAction} onPress={() => ClassesEditEventListener(item)}>\r\n        <Icon style={styles.actionText} name=\"pencil-outline\" size={25} color=\"white\" />\r\n    </TouchableOpacity>\r\n  </View>\r\n  )\r\n};\r\nconst ClassesScreen = ({ navigation }) => {\r\n    const { colors } = useTheme();\r\n    const [{setDropdownData},dataState] = React.useContext(AuthContext);\r\n    dataState.Classes;\r\n    \r\n    const ClassDATA = [\r\n        {\r\n            classId: '1',\r\n            classCode: 'A',\r\n            description: 'Owner HCEs',\r\n            contributionTypeDesc: 'Entire class gets the same percent as the 415 max for youngest',\r\n            cbValue: \"\",\r\n            cbValueType: \"%\",\r\n            psValue: '2.00',\r\n            psValueType: \"%\"\r\n         \r\n        },\r\n        {\r\n            classId: '2',\r\n            classCode: 'B',\r\n            description: 'Non HCEs',\r\n            contributionTypeDesc: 'Fixed Contribution per Individual',\r\n            cbValue: '2.50',\r\n            cbValueType: \"%\",\r\n            psValue: '4.00',\r\n            psValueType: \"%\"\r\n        },\r\n        {\r\n            classId: '3',\r\n            classCode: 'C',\r\n            description: 'Non-Owner HCEs',\r\n            contributionTypeDesc: 'Fixed Contribution per Individual',\r\n            cbValue: '5.00',\r\n            cbValueType: \"%\",\r\n            psValue: '5.00',\r\n            psValueType: \"%\"\r\n        },\r\n        {\r\n          classId: '4',\r\n          classCode: 'D',\r\n          description: 'Non-Owner HCEs',\r\n          contributionTypeDesc: 'Fixed Contribution per Individual',\r\n          cbValue: '5.00',\r\n          cbValueType: \"%\",\r\n          psValue: '5.00',\r\n          psValueType: \"%\"\r\n      },\r\n        {\r\n          classId: '5',\r\n          classCode: 'E',\r\n          description: 'Non-Owner HCEs',\r\n          contributionTypeDesc: 'Fixed Contribution per Individual',\r\n          cbValue: '5.00%',\r\n          cbValueType: \"%\",\r\n          psValue: '5.00%',\r\n          psValueType: \"%\"\r\n        },\r\n      ];\r\n      const [classData, setClassData] = React.useState(null);\r\n      \r\n      dataState.classData = classData;\r\n\r\n      React.useEffect(() => {\r\n        //Api Data\r\n        //console.log('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',dataState.Classes, dataState.Classes.Name);\r\n        \r\n        if (dataState.Classes === null || (dataState.Classes && dataState.Classes.Name === 'Classes')){\r\n          setClassData(classData => null);\r\n         //console.log(\"useEffect =====CLASS SCREEN========> \", dataState.plan.planId);\r\n          getClass(dataState.plan.planId);\r\n          //alert('called');\r\n        }\r\n        \r\n      }, [dataState.Classes]);\r\n\r\n      const getClass = async (planId) => {\r\n        let url = baseURL + '/Classes/ClassList?planId=' +  planId;\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        //console.log(url);\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n       \r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson.isSuccess && responseJson.obj){\r\n             //console.log(\"FROM UseEffect =====Api Called CLASS========> \");\r\n              setClassData(classData => responseJson.obj);\r\n              let responseArray = responseJson.obj\r\n              let NewArray = responseArray.map(function(object) {\r\n                  for (let key in object) {\r\n                    return { label: object.classCode + ' - ' + object.description, value: object.classCode };\r\n                  }\r\n              });\r\n             //console.log('NewArray from class page',NewArray)\r\n              setDropdownData(NewArray)\r\n              \r\n            } else {\r\n              Alert.alert(\"Data Error\", responseJson.message);\r\n              setPlanData(planData => []);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n      }\r\n\r\n      const ClassesdeleteClickEventListener = (item) => {\r\n       //console.log(dataState.userToken );\r\n        //deleteClass(item)\r\n        //Alert.alert('delete ' + item.classCode);\r\n        Alert.alert(\"Delete Class\", \"Are you sure you want to delete Class Code \" + item.classCode, \r\n        [{ text: \"Yes\", onPress: () => deleteClass(item) }, \r\n        { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n        { cancelable: false }); \r\n      }\r\n    \r\n      const ClassesEditEventListener = (item) => {\r\n        navigation.navigate('Class Detail Entry',{Info: item});\r\n        //Alert.alert('Edit ' + item.classCode);\r\n      }\r\n    \r\n\r\n      const toggleClass = (item) => {\r\n        //Alert.alert('info:',item.classId + \" \" + item.classCode);\r\n        navigation.navigate('Class Detail Entry',{Info: item});\r\n      }\r\n\r\n      const deleteClass = async (item) => {\r\n        let url = baseURL + '/Classes/Class?id=' + item.classId;\r\n        let method = 'DELETE';\r\n        let headers = new Headers();\r\n                    \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n    \r\n        //console.log(\"==================SAVE UPDATE PLAN====TOKEN===>\",  url, method, headers, body); //,\r\n       \r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n         //console.log(responseJson);\r\n            \r\n            if (responseJson.isSuccess && responseJson.obj){\r\n              //alert(JSON.stringify(responseJson));\r\n              setClassData(classData => null);\r\n              getClass(dataState.plan.planId);\r\n            } else {\r\n              Alert.alert(\"Data Error\", responseJson.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n      }\r\n\r\n\r\n\r\n    return(\r\n        <LinearGradient \r\n        colors={[colors.linearlight,colors.linearDark]}\r\n        style = {styles.container}\r\n        >     \r\n          {!classData?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          : \r\n          <SafeAreaView style={{marginTop: 5, flex: 1}}>\r\n            \r\n            <Text style={[styles.title,{fontSize: 17, color: color.secondary, paddingBottom: 3, textAlign: 'center'}]}>{dataState.plan.planName}</Text>\r\n            <FlatList\r\n              data={classData}\r\n              //extraData={}\r\n              renderItem={({ item,index }) => <Item index={index} item={item} /> }\r\n              keyExtractor={item => item.classId.toString()}\r\n              //onEndReached={() => {}}\r\n            />\r\n          </SafeAreaView>\r\n          }\r\n        </LinearGradient>\r\n    )\r\n\r\n    function Item({ index, item }) {\r\n          \r\n        return (\r\n          \r\n          <View style={styles.listContainer}>\r\n          <Swipeable \r\n          renderRightActions={() => <RightAction item={item} />}\r\n          overshootRight={false}\r\n          > \r\n\r\n            <TouchableHighlight underlayColor={'transparent'} key={index} onPress={() => toggleClass(item)}>  \r\n              <View style={[styles.item,{borderTopColor: colors.icon}]}>\r\n              \r\n                <View style={[styles.ClassContainer, {backgroundColor: colors.icon}]}>\r\n                    <Text style={[styles.Class,{color: colors.plantitle}]}>{item.classCode}</Text>\r\n                </View> \r\n                <View style={[styles.TextContainer, {backgroundColor: colors.iconDes}]}>\r\n                  <Text style={[styles.title,{color: colors.icontitle}]}>{item.description}</Text>\r\n                  <View style={{borderBottomWidth: 1,borderBottomColor: colors.text,marginBottom: 2,marginTop: 2 }}></View>\r\n                  <Text style={[styles.Description,{ color: colors.text}]}>{item.contributionTypeDesc}</Text>\r\n                  <View style={{ borderBottomWidth: 1,borderBottomColor: colors.text,marginBottom: 2,marginTop: 2 }}></View>\r\n\r\n                  <View style={{flexDirection: 'row', justifyContent: 'space-evenly'}}>\r\n                    <View style={{flexDirection: 'column',marginTop: 5}}>\r\n                        <Text style={[styles.Description,{ color: colors.icontitle}]}>Cash Balance</Text>\r\n                        <Text style={[styles.Description,{ color: colors.text}]}>{item.cbValue}{item.cbValueType}</Text>\r\n                    </View>\r\n                    <View style={{flexDirection: 'column',marginTop: 5}}>\r\n                        <Text style={[styles.Description,{ color: colors.icontitle}]}>Profit Shares</Text>\r\n                        <Text style={[styles.Description,{ color: colors.text}]}>{item.psValue}{item.psValueType}</Text>\r\n                    </View>\r\n                    </View>\r\n                </View>\r\n              \r\n              </View>\r\n            </TouchableHighlight>\r\n          </Swipeable>\r\n          </View>\r\n        );\r\n      }\r\n}\r\nexport default ClassesScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      //backgroundColor: '#fff',\r\n      //alignItems: 'center',\r\n      //justifyContent: 'center',\r\n    },\r\n    listContainer: {\r\n      marginHorizontal: 10,\r\n    },\r\n    \r\n    item: {\r\n        flexDirection: 'row',\r\n        marginBottom: 5,\r\n        marginTop: 5,\r\n        \r\n        //height: height/6,\r\n        borderTopWidth: 4,\r\n      },\r\n    ClassContainer: {\r\n        width: '30%',\r\n        //padding: 30,\r\n        //borderTopLeftRadius: 5,\r\n        borderBottomLeftRadius: 20,\r\n        //backgroundColor: 'white',    \r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n      },\r\n    \r\n    TextContainer: {\r\n        width: '70%',\r\n        padding: 10,\r\n        //borderBottomRightRadius: 10,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n    },\r\n      \r\n    title: {\r\n        //textAlign: 'center',\r\n        textAlign: 'left',\r\n        fontWeight: 'bold',   \r\n        fontSize: height > 800 ? 25 :20,\r\n    },\r\n\r\n    Class: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',   \r\n        fontSize: 50,\r\n    },\r\n\r\n    Description: {\r\n        textAlign: 'left',\r\n        fontSize: height > 800 ? 17 :12\r\n    },\r\n    DeleteAction: {\r\n      backgroundColor: '#dd2c00',\r\n      justifyContent: 'center',\r\n      //alignItems: 'flex-end',\r\n      //flex: 1,\r\n      marginBottom: 5,\r\n      marginTop: 5\r\n    },\r\n    EditAction: {\r\n      backgroundColor: '#72be03', //72be03 388e3c\r\n      justifyContent: 'center',\r\n      //alignItems: 'flex-end',\r\n      //flex: 1,\r\n      marginBottom: 5,\r\n      marginTop: 5\r\n    },\r\n    actionText: {\r\n      padding: 15,\r\n      //color: 'white'\r\n    }\r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,Dimensions,ScrollView, KeyboardAvoidingView, TextInput,ActivityIndicator, Alert,Platform } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\n//import CheckBox from 'react-native-check-box';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n//import RadioButton from 'react-native-customizable-radio-button';\r\n\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst ClassUpdate = ({ navigation,route }) => {\r\n    const [{ClassAddorEdit },dataState] = React.useContext(AuthContext);\r\n    let [Classload, setClassload] = React.useState(false); \r\n    let [isLoading, setIsLoading] = React.useState(false);\r\n    let currentClasses = dataState.classData;\r\n    let token = dataState.userToken;\r\n\r\n    let planId = dataState.selectedPlan;\r\n    //console.log('classEdited',dataState.classEdited)\r\n    //console.log('classAdded',dataState.classAdded)\r\n    //console.log('currentClass',currentClasses);\r\n    //console.log(route.params?.State, 'State for classes')\r\n    //console.log('Info in the Classupdatescreen',route.params?.Info)\r\n    const { colors } = useTheme();\r\n\r\n    let Edited = route.params?.Info;\r\n    let contriTypeDes = null;\r\n    \r\n   //console.log('Edited', Edited);\r\n    //let Edited = dataState.censusEdited;\r\n    if(route.params?.State !== 'addnew')\r\n    {\r\n        let contriTypeTrim = Edited.contributionTypeDesc.trim();\r\n        if(contriTypeTrim === 'Fixed Contribution per Individual')\r\n        {\r\n            contriTypeDes = 1;\r\n        }\r\n        else if(contriTypeTrim === 'Entire class gets the same percent as the 415 max for youngest')\r\n        {\r\n            contriTypeDes = 4;\r\n        }\r\n        else if(contriTypeTrim === 'Maximize Class to 415 Limit')\r\n        {\r\n            contriTypeDes = 3;\r\n        }\r\n        \r\n        \r\n        //error\r\n    }\r\n    let [classId, setclassId] = React.useState(route.params?.State === 'addnew' ? null : Edited.classId);\r\n    let [classcode, setclasscode] = React.useState(route.params?.State === 'addnew' ? null : Edited.classCode); \r\n    let [classDes, setclassDes] = React.useState(route.params?.State === 'addnew' ? null : Edited.description); \r\n    let [contritype, setcontritype] = React.useState(route.params?.State === 'addnew' ? 1 : contriTypeDes); \r\n    let [cashBalance, setcashBalance] = React.useState(route.params?.State === 'addnew' ? null : Edited.cbValue); \r\n    let [cashAmt, setcashAmt] = React.useState( route.params?.State === 'addnew' ? \"%\" : Edited.cbValueType); \r\n    let [profitSharing, setprofitSharing] = React.useState(route.params?.State === 'addnew' ? null : Edited.psValue); \r\n    let [profitAmt, setprofitAmt] = React.useState(route.params?.State === 'addnew' ? \"%\" : Edited.psValueType);\r\n\r\n\r\n    const CUpdateScroll = React.useRef();\r\n    let [CB_Disable, setCB_Disable] = React.useState(contritype === 3 || contritype === 4 ? true : false);\r\n    let [CB_DisableTxt, setCB_DisableTxt] = React.useState(contritype === 3 || contritype === 4 ? false : true);\r\n    let [ContriTypeMargin, setContriTypeMargin] = React.useState(0);\r\n    let [ContriTypeMarginhideDrop, setContriTypeMarginhideDrop] = React.useState(false); \r\n\r\n    let [CB_DisableCode, setCB_DisableCode] = React.useState(route.params?.State === 'addnew' ? true : Edited.classCode && (Edited.classCode === 'A' || Edited.classCode === 'B' || Edited.classCode === 'C') ? false : true);\r\n\r\n    let ContriTypeSelected = null;\r\n    const DropContriTypeController = (ContriTypeSelected) => {\r\n\r\n        if(ContriTypeSelected === 1)//ContriType\r\n        {\r\n            setContriTypeMargin(ContriTypeMargin = 150);\r\n            setContriTypeMarginhideDrop(ContriTypeMarginhideDrop = true);\r\n        }\r\n    };\r\n\r\n    const Disable_CB = (id) => {\r\n        if(id === 3 || id === 4)\r\n        {\r\n            setCB_Disable(CB_Disable = true);\r\n            setCB_DisableTxt(CB_DisableTxt = false);\r\n        }\r\n        else\r\n        {\r\n            setCB_Disable(CB_Disable = false);\r\n            setCB_DisableTxt(CB_DisableTxt = true);\r\n        }\r\n    }\r\n\r\n\r\n    const SaveArray = (navigation,Classload, setClassload, currentClasses, token) => {\r\n        let hasError = false;\r\n        \r\n        //check if Class Code is blank\r\n        if (classcode === null | classcode === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            hasError = true;\r\n            Alert.alert(\"Error:\", \"Class code cannot be blank.\");\r\n        }\r\n        \r\n        if (classDes === null | classDes === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            hasError = true;\r\n            Alert.alert(\"Error:\", \"Class description cannot be blank.\");\r\n        }\r\n        //check if Class Code already Exist\r\n        /*\r\n        if (route.params?.State === 'addnew') {\r\n            currentClasses.forEach(cls => {\r\n                if (classcode === cls.classCode){\r\n                    setClassload(Classload = false);\r\n                    hasError = true;\r\n                    Alert.alert(\"Error:\", \"Class code \" + classcode + \" already exist.\");    \r\n                }\r\n            });\r\n        }\r\n        */\r\n\r\n        //invalid CB\r\n        if (cashBalance && isNaN(cashBalance)) {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            hasError = true;\r\n            let err = \"Invalid Cash balance value.\"; //\"Cash balance percent (%) must be from 0 to 200.\";\r\n            //if (cashAmt === '$') err = \"Invalid Cash balance amount.\";\r\n            Alert.alert(\"Error:\", err );\r\n        } //else if (cashBalance && cashBalance)\r\n\r\n\r\n        //invalid PS\r\n        if (profitSharing && isNaN(profitSharing)) {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            hasError = true;\r\n            let err = \"Invalid Profit sharing amount.\"; //\"Profit sharing percent (%) must be from 0 to 100.\";\r\n            //if (profitAmt === 'S') err = \"Invalid Profit sharing amount.\";\r\n            Alert.alert(\"Error:\", err); \r\n        }\r\n        \r\n        if (!hasError) {\r\n            let ClassesState = 'ClassEdit';\r\n            let StateArray = {\r\n                PlanId: planId,\r\n                ClassCode: classcode,\r\n                Description: classDes === null ? \"\" : classDes.trim(),\r\n                ContributionType: contritype,\r\n                CBValue: cashBalance === null || cashBalance === \"\" ? \"0\" : cashBalance,\r\n                CBValueType: cashAmt,\r\n                PSValue: profitSharing === null || profitSharing === \"\" ? \"0\" : profitSharing,\r\n                PSValueType: profitAmt\r\n            }\r\n            //console.log('check ',cashBalance);\r\n            //console.log('check2 ',StateArray);\r\n            if (route.params?.State === 'addnew') {\r\n                ClassesState = 'ClassAdd';             \r\n            } else {\r\n                StateArray.classId = classId;\r\n            }\r\n            setTimeout(() => {\r\n                //setClassload(Classload = false);\r\n                //setIsLoading(isLoading = false)\r\n                ClassAddorEdit(navigation, StateArray, ClassesState, token, setIsLoading , isLoading);\r\n            }, 500);\r\n        }\r\n        \r\n    }  \r\n\r\n    var contribution = [\r\n        {label: 'Fixed Contribution per Individual', value: 1},\r\n        {label: 'Entire class gets the same percent as the 415 max for youngest', value: 4},\r\n        {label: 'Maximize Class to 415 Limit', value: 3},\r\n    ]\r\n    var Amt = [\r\n        {label: '$', value: '$'},\r\n        {label: '%', value: '%'},\r\n    ]\r\n   \r\n       \r\n    return(\r\n        \r\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style ={styles.container}>\r\n        {Classload === true ?\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n          </View>\r\n          :\r\n            <ScrollView ref={CUpdateScroll} style ={styles.scroll}>\r\n                {/*<Text style={styles.header}>CLASS DETAIL ENTRY</Text>*/}\r\n                <Text style={styles.columnNames}>Class Code {classcode === null | classcode === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n                    <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"Code\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            editable={CB_DisableCode}\r\n                            value={classcode}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setclasscode(classcode = val)}}\r\n                        />\r\n                <Text style={styles.columnNames}>Class Description</Text>\r\n                    <TextInput \r\n                        multiline={true}\r\n                        numberOfLines={height > 800 ? 8 : 4}\r\n                        placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                        placeholder=\"Description\"\r\n                        style={[styles.textArea,{color: colors.Logintext}]}\r\n                        //autoCapitalize=\"none\"\r\n                        value={classDes}\r\n                        keyboardType='default'\r\n                        onChangeText={(val) => {setclassDes(classDes = val)}}\r\n                    />\r\n                <Text style={styles.columnNames}>Contribution Type</Text>\r\n                \r\n                    <DropDownPicker\r\n                            items={contribution}\r\n                            isVisible={ContriTypeMarginhideDrop}\r\n                            defaultIndex={0}\r\n                            defaultValue={contritype}\r\n                            zIndex={3}\r\n                            //placeholder=\"Select number of years\"\r\n                            itemStyle={{justifyContent: 'flex-start'}}\r\n                            placeholderStyle={{color: colors.Logintext}}\r\n                            activeLabelStyle={{color: 'green'}}\r\n                            labelStyle={{color: colors.Logintext}}\r\n                            style={{borderWidth: 1}}\r\n                            dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                            containerStyle={{ height: 40, flex: 1, marginTop: 5, marginBottom: ContriTypeMargin}}\r\n                            arrowColor='rgba(51,51,51,0.5)'\r\n                            onOpen={() => [ContriTypeSelected = 1,DropContriTypeController(ContriTypeSelected)/*,CUpdateScroll.current.scrollTo({ x: 0, y: 100, animated: true })*/]}\r\n                            onClose={() => {[setContriTypeMarginhideDrop(ContriTypeMarginhideDrop = false),setContriTypeMargin(ContriTypeMargin = 0)]}}\r\n                            onChangeItem={item => {[setcontritype(contritype = item.value), Disable_CB(item.value)]}} //item.value\r\n                        />\r\n                        \r\n                <Text style={styles.columnNames}>Cash Balance Amt</Text>\r\n               \r\n                    <View  style={{...(Platform.OS !== 'android'? {zIndex: 10,flexDirection: 'row'} : {flexDirection: 'row'})}}>\r\n                        <TextInput \r\n                                placeholderTextColor = {CB_DisableTxt === false ? 'lightgrey' :'rgba(51,51,51,0.7)'}\r\n                                placeholder=\"Cash Amt\"\r\n                                editable={CB_DisableTxt}\r\n                                style={[styles.textInput,{color: CB_DisableTxt === false ? 'lightgrey' : colors.Logintext, borderBottomColor: CB_DisableTxt === false ? 'lightgrey' : '#989c9d'}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={cashBalance !== null ? cashBalance.toString() : null}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setcashBalance(cashBalance = val)}}\r\n                            />\r\n\r\n                        <DropDownPicker\r\n                                items={Amt}\r\n                                defaultIndex={0}\r\n                                defaultValue={cashAmt}\r\n                                zIndex={2}\r\n                                disabled={CB_Disable}\r\n                                //placeholder=\"Select number of years\"\r\n                                placeholderStyle={{color: colors.Logintext}}\r\n                                activeLabelStyle={{color: 'green'}}\r\n                                labelStyle={{color: colors.Logintext}}\r\n                                style={{borderWidth: 1}}\r\n                                itemStyle={{justifyContent: 'flex-start'}}\r\n                                dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                                containerStyle={{ height: 40,width: 60, marginTop: 5,marginLeft: 10}}\r\n                                arrowColor='rgba(51,51,51,0.5)'\r\n                                onChangeItem={item => {setcashAmt(cashAmt = item.value)}} //item.value\r\n                            />\r\n                    </View>\r\n                <Text style={styles.columnNames}>Profit Sharing Amt</Text>\r\n\r\n                    <View  style={{...(Platform.OS !== 'android'? {zIndex: 9,flexDirection: 'row'} : {flexDirection: 'row'})}}>\r\n                        <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"Profit Amt\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={profitSharing !== null ? profitSharing.toString() : null}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setprofitSharing(profitSharing = val)}}\r\n                            />\r\n\r\n                        <DropDownPicker\r\n                                items={Amt}\r\n                                defaultIndex={0}\r\n                                defaultValue={profitAmt}\r\n                                zIndex={2}\r\n                                //placeholder=\"Select number of years\"\r\n                                placeholderStyle={{color: colors.Logintext}}\r\n                                activeLabelStyle={{color: 'green'}}\r\n                                labelStyle={{color: colors.Logintext}}\r\n                                style={{borderWidth: 1}}\r\n                                itemStyle={{justifyContent: 'flex-start'}}\r\n                                dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                                containerStyle={{ height: 40,width: 60, marginTop: 5,marginLeft: 10}}\r\n                                arrowColor='rgba(51,51,51,0.5)'\r\n                                onChangeItem={item => {setprofitAmt(profitAmt = item.value)}} //item.value\r\n                            />\r\n                    </View>\r\n                \r\n                <View style={styles.button}>\r\n                <Text style={{color: 'grey',fontSize: 12, marginBottom: 10}}>*Note: You can only maximize one class to the 415 Limit. The design will not calculate if you attempt to maximize multiple classes.</Text>\r\n                    <TouchableOpacity style={styles.signIn} disabled={isLoading} onPress={() => {[/*setClassload(Classload = true),*/setIsLoading(isLoading = true), SaveArray(navigation,Classload, setClassload, currentClasses, token)]}}>\r\n                        <LinearGradient\r\n                            colors={['#72be03','#397e05']} //'#72be03','#397e05'\r\n                            style={styles.signIn}\r\n                            start={[0, 1]} end={[1, 0]}\r\n                        >\r\n                            {isLoading ?\r\n                                <ActivityIndicator size=\"large\" color={colors.icontitle}/>\r\n                                :\r\n                                <Text style={[styles.textSign, {color:'#fff'}]}>{route.params?.State === 'addnew' ? 'Save New' : 'Update'}</Text>\r\n                            }   \r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {borderColor: '#333333', borderWidth: 1.5,marginTop: 15,marginBottom: 20}]}>\r\n                        <Text style={[styles.textSign, {color: '#333333'}]}>Cancel</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n            }\r\n        </KeyboardAvoidingView>\r\n            \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ClassUpdate;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: 'white',\r\n      \r\n    },\r\n    scroll: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    header: {\r\n        color: '#333333',\r\n        fontSize: 17,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n    },\r\n    columnNames: {\r\n        fontSize: height > 800 ? 18 : 15,\r\n        marginTop: height > 800 ? 15 : 5,\r\n        marginBottom: height > 800 ? 15 : 5,\r\n        fontWeight: 'bold'\r\n    },\r\n    textArea: {\r\n        flex: 1,  \r\n        textAlignVertical: 'top',\r\n        padding: 5,\r\n        borderRadius: 5,\r\n        borderWidth: 1.5,\r\n        borderColor: '#989c9d',\r\n    },\r\n    textInput: {\r\n        flex: 1,  \r\n        height: 40,\r\n        borderBottomWidth: 1.5,\r\n        //borderBottomColor: '#989c9d',\r\n    },\r\n   \r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: height > 800 ? 30 : 10\r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        marginTop: height > 800 ? 10 : 0,\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n  });","import React, { Component, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity,TouchableHighlight,SafeAreaView,FlatList,Dimensions,Alert,TextInput,ActivityIndicator } from 'react-native';\r\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport{ AuthContext } from '../../components/context';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport { color } from 'react-native-reanimated';\r\nimport { Avatar } from 'react-native-elements';\r\nimport Settings from '../../settings.json';\r\nimport moment from 'moment';\r\nimport SettingsScreen from '../Menu/SettingsScreen';\r\nconst {width,height} = Dimensions.get('window');\r\nconst baseURL = Settings.domain;\r\n\r\nconst PlanScreen = ({ navigation,route,PlanToggle }) => {\r\n\r\n  let RightAction = ({item,index}) =>\r\n  {\r\n    return(\r\n      <View style={{flexDirection: 'row'}}>\r\n        <TouchableOpacity  style={styles.DeleteAction} onPress={() => deleteClickEventListener(item,index)}>\r\n            <Icon style={styles.actionText} name=\"delete\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.EditAction} onPress={() => editClickEventListener(item)}>\r\n          <Icon style={styles.actionText} name=\"pencil-outline\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity  style={styles.CopyAction} onPress={() => CopyClickEventListener(item)}>\r\n            <Icon style={styles.actionText} name=\"content-copy\" size={25} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  };\r\n\r\n  //console.log('toggle', PlanToggle)\r\n  ///console.log(route,'from list');\r\n  const [{updatePlanData, Delete,setPlanID, initScreen, setScreen},dataState] = React.useContext(AuthContext);\r\n\r\n  let planStorage = dataState.plan;\r\n  //let plansearch = dataState.plansearch;\r\n\r\n  //val of search input\r\n  let [SearchVal, setSearchVal] = React.useState(null);\r\n  //console.log(indexChecked)\r\n  const { colors } = useTheme();\r\n\r\n  if(dataState.MenuResponse === true)\r\n  {\r\n    //alert(dataState.MenuCurrent);\r\n    dataState.MenuResponse = false;\r\n    //?console.log(dataState.MenuCurrent)\r\n    //?console.log(dataState.MenuResponse)\r\n  }\r\n  //console.log('count',dataState.planData.length)\r\n  \r\n  //for search and flatlist\r\n  const [planData, setPlanData] = React.useState(null); //dataState.planData //null\r\n  //for search\r\n  let [inMemory, setInMemory] = React.useState(planData);\r\n\r\n  let num = dataState.SavePlanId === null ? 1 : dataState.SavePlanId;\r\n  let [indexChecked, setindexChecked] = React.useState(num);//default 1\r\n  let [isLoading, setIsLoading] = React.useState(false);\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    //for Sample data\r\n    //if (dataState.planData[0] && dataState.planData[0].planId) setindexChecked(indexChecked = dataState.planData[0].planId)\r\n    //Api Data\r\n    setPlanData(planData => null);\r\n    getPlanData(dataState.MenuCurrent);\r\n  }, [dataState.MenuCurrent, dataState[\"Plan List\"]]);\r\n\r\n  \r\n  const deletePlan = async (planId) => {\r\n    let url = baseURL + '/Plans/Plan?id=' +  planId; // + '&planType=C'\r\n    let method = 'DELETE';\r\n    let headers = new Headers();\r\n    setIsLoading(isLoading = true);\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n   //console.log('Delete Plan ======>', url, method, headers);\r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      if (responseJson.isSuccess && responseJson.obj){\r\n          setScreen({Name: \"Plan Details\", Method: dataState.selectedPlan});\r\n          getPlanData(dataState.MenuCurrent);\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n          setIsLoading(isLoading = false);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        setIsLoading(isLoading = false);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  const getPlanData = async (selectedMenu) => {\r\n    if (!selectedMenu) selectedMenu = 'In 24 hours';\r\n    let filter = '0';\r\n    switch (selectedMenu) {\r\n      case 'In 24 hours':\r\n        filter = '0';\r\n        break;\r\n      case 'In 48 hours':\r\n        filter = '1';\r\n        break;\r\n      case 'This Week':\r\n        filter = '2';\r\n        break;\r\n      case 'This Month':\r\n        filter = '3';\r\n        break;  \r\n      default:  \r\n        filter = '-1';\r\n    }\r\n    \r\n    let url = baseURL + '/Plans/PlanListQuery?lastModified=' + filter + '&filteredUserId=' + dataState.userName + '&maxRows=500'; //+ '&filteredCompanyName=EBG&filteredUserId=01247@noemail.com&maxRows=10';\r\n    if(filter === '-1')\r\n    {\r\n      url = baseURL + '/Plans/PlanListQuery?lastModified=' + filter + '&filteredUserId=' + dataState.userName;\r\n    }\r\n    \r\n    let method = 'GET';\r\n    let headers = new Headers();\r\n   //console.log(dataState.userToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', dataState.userToken);\r\n   //console.log('===PLAN LIST API CALL============>',url,headers);\r\n    let req = new Request(url, {\r\n        method,\r\n        headers\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        //console.log('Response:', responseJson);\r\n        //console.log('Response: API Called FOR PLAN LIST =======>' , responseJson);\r\n        if (responseJson.obj &&  responseJson.obj.length){\r\n         //console.log(responseJson.obj[0].planId);\r\n          //console.log('=======PLAN LIST====>', responseJson.obj);\r\n          initScreen(responseJson.obj[0].planId);\r\n          updatePlanData(responseJson.obj);\r\n          setindexChecked(indexChecked = responseJson.obj[0].planId);\r\n          \r\n          setPlanData(planData => responseJson.obj);\r\n          setInMemory(inMemory => responseJson.obj);\r\n          \r\n        } else if (responseJson.obj &&  responseJson.obj.length === 0){\r\n          //Alert.alert(selectedMenu + \" Filter\", \"No Record(s) Found.\");\r\n          dataState.selectedPlan = null;\r\n          setPlanData(planData => []);\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n          setPlanData(planData => []);\r\n        }\r\n        if (isLoading) setIsLoading(isLoading = false);\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        if (isLoading) setIsLoading(isLoading = false);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  if(route.params?.CopyPlan === true){\r\n      setPlanData(planData => null);\r\n      getPlanData(dataState.MenuCurrent);\r\n      route.params.CopyPlan = null;\r\n  }\r\n\r\n  \r\n  const deleteClickEventListener = (item,index) => {\r\n    Alert.alert(\"Plan Delete\", \"Are you sure you want to Delete this Plan?\", \r\n    [{ text: \"Yes\", onPress: () => deletePlan(item.planId) }, //CalculatePlan(dataState, setScreen)\r\n    { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n    { cancelable: false }); \r\n  }\r\n\r\n  const CopyClickEventListener = (item) => {\r\n    navigation.navigate('Copy modal', {CopyInfo: item});\r\n  }\r\n\r\n  const editClickEventListener = (item) => {\r\n    planStorage.planId = item.planId\r\n    planStorage.userNameOnly = item.userNameOnly\r\n    setindexChecked(indexChecked = item.planId);\r\n    navigation.navigate('Plan Details',{screen: 'General', params: {homeClick: null}});\r\n    //?console.log('plan',planStorage)\r\n    //Alert.alert('Edit' + \" \" + dataState.plan.planId + \" \" + dataState.plan.userNameOnly);\r\n   //console.log('Edit' + \" \" + dataState.plan.planId + \" \" + dataState.plan.userNameOnly);\r\n  }\r\n\r\n  const toggleshow = (item) => {\r\n    if(route.params?.AddCancel === 'cancel' && indexChecked === item.planId)\r\n    {\r\n      //alert(1);\r\n      dataState.selectedPlan = item.planId;\r\n      route.params.AddCancel = null\r\n      navigation.navigate('Plan Details',{screen: 'General', params: {homeClick: 'cancel'}});\r\n    }\r\n    else if(indexChecked === item.planId)\r\n    {\r\n      //let PlanId = item.planId;\r\n      //setPlanID(PlanId);\r\n      //alert(2)\r\n      dataState.selectedPlan = item.planId;\r\n      navigation.navigate('Plan Details',{screen: 'General', params: {homeClick: null}});\r\n     //console.log('Info' + \" \" + dataState.plan.planId + \" \" + dataState.plan.userNameOnly);\r\n    }\r\n    else{\r\n      let PlanId = item.planId;\r\n      setPlanID(PlanId, item.planName);\r\n      setindexChecked(indexChecked = item.planId);\r\n      planStorage.planId = item.planId\r\n      planStorage.userNameOnly = item.userNameOnly\r\n      //?console.log('plan2',planStorage)\r\n      //alert(indexChecked + \" \" + item.planId)\r\n    }\r\n  }\r\n\r\n  const OnSearch = (value) => {\r\n    let filteredName = inMemory.filter(\r\n      Name => {\r\n        let namelowercase = (Name.planName + \" \" + Name.userNameOnly).toLowerCase() \r\n\r\n        let searchTermlowercase = value.toLowerCase()\r\n\r\n        return namelowercase.indexOf(searchTermlowercase) > -1\r\n      }\r\n    )\r\n    setSearchVal(SearchVal = value)\r\n    setPlanData(planData => filteredName)\r\n  }\r\n\r\n\r\n  return(\r\n    <View style={{flex: 1}}>\r\n       {PlanToggle === true &&\r\n          <View style={styles.formContent}>\r\n            <View style={styles.inputContainer}>\r\n              <Icon style={styles.inputIcon} name=\"account-search\" size={25} color=\"grey\" />\r\n              <TextInput style={styles.inputs}\r\n                //ref={'txtSearch'}\r\n                value={SearchVal}\r\n                placeholder=\"Search\"\r\n                underlineColorAndroid='transparent'\r\n                onChangeText={(value) => OnSearch(value)}/>\r\n            </View>\r\n          </View> }\r\n    <LinearGradient \r\n      colors={[colors.linearlight,colors.linearDark]}\r\n      style = {styles.container}\r\n    >     \r\n     \r\n     {!planData || isLoading ?\r\n        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n          <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n        </View>\r\n        : \r\n        <View style = {styles.container}>\r\n        {planData.length === 0 ?   \r\n        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <Text style={[{fontSize:16, color: color.secondary}]}>No Records Found {dataState.MenuCurrent ? dataState.MenuCurrent : 'In 24 hours'}</Text>\r\n        </View>\r\n        :\r\n        <SafeAreaView style={{flex: 1}}>\r\n          <FlatList\r\n          //keyboardShouldPersistTaps={'never'}\r\n            data={planData}\r\n            extraData={planStorage}\r\n            renderItem={({ item,index }) => <Item Email={item.email} Company={item.planName} number={item.retAge} effectiveDate={item.planEffDate} createDate={item.dateCreated}  \r\n            N0s={item.noOfEE} Name={item.userNameOnly} Prepared={item.preparedBy} index={index} item={item} /> }\r\n            keyExtractor={item => item.planId.toString()}\r\n            //onEndReached={() => {}}\r\n          />\r\n        </SafeAreaView> \r\n         }\r\n         </View> \r\n      }\r\n    </LinearGradient>\r\n    </View>\r\n  );\r\n\r\n  function Item({ Email,Company,number,effectiveDate, createDate,N0s,Name,Prepared,index,item, }) {\r\n    let avatar = require(\"../../assets/user.jpg\");\r\n    let initials = Name.split(\" \").map((n)=>n[0]).join(\"\");\r\n    createDate = moment(createDate).format('MM/DD/YYYY');\r\n    effectiveDate = moment(effectiveDate).format('MM/DD/YYYY');\r\n    if (Email.length >= 26) Email = Email.substring(0,26) + '...';\r\n\r\n    let portrait = null;\r\n    if (initials == 'LD') portrait = 'https://randomuser.me/api/portraits/med/women/40.jpg';\r\n    \r\n    //automatic getting the first value\r\n    //console.log('=========================> indexChecked', indexChecked, item.planId);\r\n    if(indexChecked === item.planId )//indexChecked === 1 && \r\n    {\r\n      dataState.selectedPlan = item.planId;\r\n      planStorage.planId = item.planId;\r\n      planStorage.userNameOnly = item.userNameOnly;\r\n      planStorage.planName = item.planName;\r\n      \r\n      //?console.log('plan',planStorage);\r\n      //?console.log('PlanID',dataState.selectedPlan)\r\n    }\r\n    \r\n    return (\r\n      <View style={styles.listcontainer}>\r\n      <Swipeable \r\n        renderRightActions={() => <RightAction item={item} index={index} />}\r\n        overshootRight={false}\r\n      >\r\n      <TouchableHighlight underlayColor={'transparent'} key={index} onPress={()=> toggleshow(item)}>  \r\n          \r\n          <View style={[styles.card, {borderColor: colors.icon, backgroundColor: colors.background}]}>\r\n            \r\n            <View style={[styles.GreenContainer,{backgroundColor: indexChecked === item.planId ? colors.icon : colors.linearlight}]}>\r\n              <View style={styles.subContainer}>\r\n                <View style={{flexDirection:\"row\", paddingTop: 6, justifyContent: \"flex-start\"}}>\r\n                <Icon name=\"badge-account\" size={height > 800 ? 30 :25} color={indexChecked === item.planId ? colors.iconLight : colors.textGreen} />\r\n                <View style={[styles.tagColor,{marginTop: -2, marginLeft:-2,borderColor:  indexChecked === item.planId ? colors.textGreen : colors.iconLight, backgroundColor: indexChecked === item.planId ? colors.iconLight: colors.textGreen}]}>\r\n                <Text style={[styles.tag,{color:  indexChecked === item.planId ? colors.textGreen : colors.iconLight}]}>{N0s}</Text>\r\n                </View>\r\n                \r\n                </View>\r\n                <View style={{flexDirection:\"row\", paddingTop: 8}}>\r\n                <Icon name=\"human-handsup\" size={height > 800 ? 30 : 25} color={indexChecked === item.planId ? colors.iconLight : colors.textGreen} />\r\n                <Text style={[styles.age,{marginLeft:-2, color: indexChecked === item.planId ? colors.iconLight : colors.textGreen}]}>{number}</Text>\r\n                </View>\r\n                \r\n              </View>\r\n            </View>\r\n            <View style={styles.TextContainer}>\r\n              <View style={{height:70}}>\r\n                  <Text style={[styles.company, {paddingLeft: 12, color: colors.textGreen}]}>{Company}</Text>                                   \r\n                  <Text style={[styles.prepared, {paddingLeft: 12, color: colors.textLight}]}>{Prepared}</Text>\r\n              </View>\r\n\r\n              {indexChecked === item.planId && \r\n              <View style={{flexDirection:\"row\"}}>\r\n                {/*<Image style={[styles.image, styles.imageContent]} source={avatar}/>*/}\r\n                \r\n                {portrait? \r\n                <Avatar \r\n                  size={height > 800 ? 70 : 60}\r\n                  overlayContainerStyle={{borderWidth:2, borderColor: colors.imgBorder, backgroundColor: colors.imgBackground}}\r\n                  rounded\r\n                  title={initials}                 \r\n                  source={{ uri: portrait }}\r\n                  //onPress={() =>//console.log(\"Works!\")}\r\n                  containerStyle={styles.imageContent}\r\n                />\r\n                :\r\n                <Avatar \r\n                  size={height > 800 ? 70 : 60}\r\n                  overlayContainerStyle={{borderWidth:2, borderColor: colors.imgBorder, backgroundColor: colors.imgBackground}}\r\n                  rounded\r\n                  title={initials}                 \r\n                  containerStyle={styles.imageContent}\r\n                />\r\n                }\r\n                \r\n                <View >\r\n                  <Text style={[styles.name, {color: colors.textLight}]}>{Name}</Text>                   \r\n                  <Text style={[styles.email, {color: colors.email}]}>{Email}</Text>\r\n              </View>\r\n              </View> }\r\n              {indexChecked === item.planId && \r\n              <View style={{flexDirection:\"row\",  justifyContent: 'space-between', paddingBottom:15}}>\r\n                  <View>\r\n                    <Text style={[styles.dateLabel, {paddingLeft: 12, color: colors.textGreen}]}>Effective Date</Text>  \r\n                    <Text style={[styles.dateValue, {paddingLeft: 12, color: colors.textLight}]}>{effectiveDate}</Text>  \r\n                  </View>\r\n                                     \r\n                  <View style={{marginRight:-10}}>\r\n                    <Text style={[styles.dateLabel, {color: colors.textGreen}]}>Created Date</Text>  \r\n                    <Text style={[styles.dateValue, {color: colors.textLight}]}>{createDate}</Text>  \r\n                  </View>\r\n\r\n              </View>}\r\n            </View>          \r\n          </View>  \r\n      </TouchableHighlight>\r\n      </Swipeable>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default PlanScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  listcontainer: {\r\n    marginVertical: 5,\r\n    marginHorizontal:10,\r\n  },\r\n\r\n  formContent:{\r\n    flexDirection: 'row',\r\n    marginTop: 5,\r\n  },\r\n  inputContainer: {\r\n    //borderBottomColor: '#F5FCFF',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius:30,\r\n    //borderBottomWidth: 1,\r\n    height:45,\r\n    flexDirection: 'row',\r\n    alignItems:'center',\r\n    flex:1,\r\n    margin:10, \r\n  },\r\n  inputs:{\r\n    height:45,\r\n    marginLeft:16,\r\n    borderBottomColor: '#FFFFFF',\r\n    flex:1,\r\n  },\r\n  inputIcon:{\r\n    marginLeft:15,\r\n    justifyContent: 'center'\r\n  },\r\n\r\n\r\n  card:{\r\n    shadowColor: '#00000021',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 7,\r\n    },\r\n    shadowOpacity: 0.37,\r\n    shadowRadius: 7.49,\r\n    elevation: 12,\r\n\r\n    flexBasis: '100%',\r\n    padding: 0,\r\n    flexDirection:'row',\r\n    flexWrap: 'wrap',\r\n    borderLeftWidth:4,\r\n  },\r\n\r\n  GreenContainer: {\r\n    width: '22%',\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0, \r\n    alignContent: 'flex-start',\r\n  },\r\n\r\n  TextContainer: {\r\n    width: '70%',\r\n    borderTopRightRadius: 5,\r\n    borderBottomRightRadius: 5,\r\n\r\n  },\r\n  subContainer: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  company: {\r\n    fontSize: height > 800 ? 18 : 15,\r\n    fontWeight: 'bold',\r\n    marginTop:4,\r\n    color: \"#225216\"\r\n\r\n  },\r\n  prepared: {\r\n    fontSize: height > 800 ? 14 : 11,\r\n    fontWeight: 'bold',\r\n    marginTop:2,\r\n    color:\"#636e72\"\r\n  },\r\n  name: {\r\n    fontSize: height > 800 ? 18 : 15,\r\n    fontWeight: 'bold',\r\n    paddingLeft:8,\r\n    marginTop:15,\r\n    color:\"#636e72\"\r\n  },\r\n  email: {\r\n    fontSize: height > 800 ? 16 : 12,\r\n    //fontWeight: 'bold',\r\n    paddingLeft:8,\r\n    marginTop:8,\r\n    color: \"#225216\"\r\n  },\r\n  dateLabel: {\r\n    fontSize: height > 800 ? 14 : 11,\r\n    fontWeight: 'bold',\r\n    paddingLeft:8,\r\n    marginTop:12,\r\n    color: \"#225216\"\r\n  },\r\n  dateValue: {\r\n    fontSize: height > 800 ? 18 :15,\r\n    fontWeight: 'bold',\r\n    paddingLeft:8,\r\n    color:\"#636e72\",\r\n    marginTop: 0\r\n  },\r\n \r\n  employees:{\r\n    fontSize:18,\r\n    fontWeight:\"bold\",\r\n    paddingLeft: 1,\r\n    color: '#ffffff'\r\n  },\r\n  age:{\r\n    fontSize: height > 800 ? 18 :16,\r\n    fontWeight:\"bold\",\r\n    paddingLeft: 1,\r\n    color: '#ffffff'\r\n  },\r\n  imageContent:{\r\n    marginTop:10,\r\n    marginLeft:15,\r\n    marginRight:5,\r\n  },\r\n  image:{\r\n    width:60,\r\n    height:60,\r\n    borderRadius:30,\r\n    borderWidth:4\r\n  },\r\n  DeleteAction: {\r\n    backgroundColor: '#dd2c00',\r\n    justifyContent: 'center',\r\n  },\r\n  CopyAction: {\r\n    backgroundColor: '#00BFFF',\r\n    justifyContent: 'center',\r\n  },\r\n  EditAction: {\r\n    backgroundColor: '#72be03',\r\n    justifyContent: 'center',\r\n  },\r\n  actionText: {\r\n    padding: 15,\r\n  },\r\n  tag:{\r\n    fontSize: height > 800 ? 16 :14,\r\n    fontWeight:'bold',\r\n    alignSelf: 'center'\r\n  },\r\n  tagColor: {\r\n    padding:5,\r\n    borderRadius:40,\r\n    marginHorizontal:3,\r\n    marginTop: 0,\r\n    borderWidth:2\r\n  },\r\n tagsContent:{\r\n    marginTop:10,\r\n    flexWrap:'wrap'\r\n  },\r\n  \r\n});","import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\nconst PPACalculatorScreen = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>PPA Calculator Screen</Text>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default PPACalculatorScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n  },\r\n});","import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\nconst OwnerOnlyScreen = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Owner Only Screen</Text>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default OwnerOnlyScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n  },\r\n});","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,Dimensions,ScrollView,TextInput,Alert,ActivityIndicator } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport CheckBox from 'react-native-check-box';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n//import RadioButton from 'react-native-customizable-radio-button';\r\nimport moment from 'moment';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst AddModal = ({ navigation,route }) => {\r\n   //console.log(route.params?.State, 'State for census')\r\n    //console.log('Info in the Censusupdatescreen',route.params?.CensusInfo)\r\n  const { colors } = useTheme();\r\n    const [{CensusAddorEdit},dataState] = React.useContext(AuthContext);\r\n   ////console.log('censusEdited',dataState.censusEdited)\r\n   ////console.log('censusAdded',dataState.censusAdded)\r\n    let Censustoken = dataState.userToken;\r\n    let CensusPlanId = dataState.selectedPlan;\r\n    let parameter = route.params?.State;\r\n    let selectedUser = route.params?.CensusInfo; //'CensusAddUser'\r\n    let currentYear = new Date().getFullYear()\r\n\r\n    let [BirthShow, setBirthShow] = React.useState(false);\r\n    let [HireShow, setHireShow] = React.useState(false);\r\n    let [OverrideShow, setOverrideShow] = React.useState(false);\r\n    let [isLoading, setIsLoading] = React.useState(false);\r\n    \r\n   //console.log('selectected user ===>', selectedUser);\r\n   //console.log('dataState ===>', dataState.censusDropDownData);\r\n\r\n    let [paxId, setPaxId] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.participantID); \r\n    let [fname, setfname] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.Firstname); \r\n    let [lname, setlname] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.Lastname); \r\n    let [sex, setsex] = React.useState(parameter === 'CensusAddUser' ? 'M' : selectedUser.Sex); \r\n    let [pricipal, setpricipal] = React.useState(parameter === 'CensusAddUser' ? 1 : (selectedUser.Principal === 0 ? 2 : 1)); \r\n    let [owner, setowner] = React.useState(parameter === 'CensusAddUser' ? 2 : (selectedUser.IsOwner === 0 ? 2 : 1)); \r\n    let [familycode, setfamilycode] = React.useState(parameter === 'CensusAddUser' ? \" \" : selectedUser.FamilyCode); \r\n    let [datebirth, setdatebirth] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.dateOfBirth);\r\n    let [datehire, setdatehire] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.dateOfHire);\r\n    let [hourswork, sethourswork] = React.useState(parameter === 'CensusAddUser' ? '1000' : (selectedUser.workHours) ? selectedUser.workHours.toString() : \"0\");\r\n    let [pastservice, setpastservice] = React.useState(parameter === 'CensusAddUser' ? '0' : (selectedUser.PastService) ? selectedUser.PastService.toString() : \"0\" ); \r\n    let [LYcompensation, setLYcompensation] = React.useState(parameter === 'CensusAddUser' ? '0' : (selectedUser.lastYearComp) ? selectedUser.lastYearComp.toString() : \"0\"); \r\n    let [w2earnings, setw2earnings] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.W2Earnings.toString()); \r\n    let [catchup, setcatchup] = React.useState(parameter === 'CensusAddUser' ? 2 : (selectedUser.HasCatchUp === 0 ? 2 : 1)); //checking\r\n    let [classtype, setclasstype] = React.useState(parameter === 'CensusAddUser' ? \"A\" : selectedUser.classCode); //React.useState('A'); \r\n    let [deferral, setdeferral] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.DeferralPercent); \r\n    let [deferralchoice, setdeferralchoice] = React.useState(parameter === 'CensusAddUser' ? '%' : selectedUser.DeferCode); \r\n    let [CashbalanceInput, setCashbalanceInput] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.CbPercent); \r\n    let [Cashbalancechoice, setCashbalancechoice] = React.useState(parameter === 'CensusAddUser' ? '%' : selectedUser.CbCode); \r\n    let [Profitsharinginput, setProfitsharinginput] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.PsPercent); \r\n    let [Profitsharingchoice, setProfitsharingchoice] = React.useState(parameter === 'CensusAddUser' ? '%' : selectedUser.PsCode); \r\n    let [MatchContributioninput, setMatchContributioninput] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.matchPercent);//new \"MatchOverrideValue\":\"\",\"MatchOverrideType\":\"%\",\"SHOverrideValue\":\"\",\"SHOverrideType\":\"%\"\r\n    let [MatchContributionchoice, setMatchContributionchoice] = React.useState(parameter === 'CensusAddUser' ? '%' : selectedUser.matchCode);//new\r\n    let [SafeHarborContribinput, setSafeHarborContribinput] = React.useState(parameter === 'CensusAddUser' ? \"\" : selectedUser.shPercent);//new\r\n    let [SafeHarborContribchoice, setSafeHarborContribchoice] = React.useState(parameter === 'CensusAddUser' ? '%' : selectedUser.shCode);//new\r\n    let [HCEchoice, setHCEchoice] = React.useState(parameter === 'CensusAddUser' ? '-1' : (selectedUser.HceOverride === false) ?  '-1' : (selectedUser.highlyComp === 1) ? '1' : '0'); \r\n    let [Overridecheck, setOverridecheck] = React.useState(parameter === 'CensusAddUser' ? false : selectedUser.OverrideParticipationDate);\r\n    let [percentOwnership, setPercentOwnership] = React.useState(parameter === 'CensusAddUser' ? \"\" : (selectedUser.percentOwnership) ? selectedUser.percentOwnership.toString() : \"\"); \r\n    let [age, setAge] = React.useState(parameter === 'CensusAddUser' ? 0 : selectedUser.age); \r\n    let [highlyComp, setHighlyComp] = React.useState(parameter === 'CensusAddUser' ? 0 : selectedUser.highlyComp); \r\n    let [classId, setClassId] = React.useState(parameter === 'CensusAddUser' ? 65 : selectedUser.classId); \r\n    let [retAge, setRetAge] = React.useState(parameter === 'CensusAddUser' ? 0 : selectedUser.retAge); \r\n    let [CatchUpOverride, setCatchUpOverride] = React.useState(parameter === 'CensusAddUser' ? \"\" : (selectedUser.catchUpOverride === null ? \"\" : selectedUser.catchUpOverride)); \r\n    let [participationDate, setParticipationDate] = React.useState(parameter === 'CensusAddUser' ? '1/1/' + currentYear : moment(selectedUser.participationDate).format('MM/DD/YYYY')); \r\n    \r\n    //console.log(\"selectedUser----------------------->\", selectedUser)\r\n\r\n    const CensusUpdateScroll = React.useRef();\r\n    let [FamilyCodeMargin, setFamilyCodeMargin] = React.useState(0); \r\n    let [ClassTypeMargin, setClassTypeMargin] = React.useState(0); \r\n  \r\n    let [FamilyCodehideDrop, setFamilyCodehideDrop] = React.useState(false); \r\n    let [ClassTypehideDrop, setClassTypehideDrop] = React.useState(false); \r\n  \r\n    let CensusDropSelected = null;\r\n\r\n    const CheckClassCode = (code) => {\r\n        let arr = dataState.censusDropDownData;\r\n       //console.log(arr,code)\r\n        for (let i = 0; i < arr.length; i++) {\r\n           //console.log('testing'+i,arr[i].value);\r\n            if(arr[i].value == code) {\r\n               //console.log('testing2'+i,arr[i].value);\r\n                classtype = arr[i].value\r\n                return code;\r\n            }   \r\n        }\r\n        if(arr.length > 3) {\r\n            classtype = arr[3].value\r\n            return arr[3].value;\r\n        }\r\n        /*\r\n        if(arr.value.indexOf(code) == -1) {\r\n            if(arr.length > 3) {\r\n                return arr[3].value;\r\n            }\r\n        } else {\r\n            return code;\r\n        }*/\r\n        classtype = arr[0].value\r\n        return arr[0].value;\r\n    };\r\n    \r\n    const DropdownCensusController = (CensusDropSelected) => {\r\n      if(CensusDropSelected === 1)//family\r\n      {\r\n        setFamilyCodeMargin(FamilyCodeMargin = 150)\r\n        setFamilyCodehideDrop(FamilyCodehideDrop = true)\r\n  \r\n        setClassTypeMargin(ClassTypeMargin = 0)\r\n        setClassTypehideDrop(ClassTypehideDrop = false)\r\n      }\r\n      else if(CensusDropSelected === 2)//class\r\n      {\r\n        setFamilyCodeMargin(FamilyCodeMargin = 0)\r\n        setFamilyCodehideDrop(FamilyCodehideDrop = false)\r\n  \r\n        setClassTypeMargin(ClassTypeMargin = 125)\r\n        setClassTypehideDrop(ClassTypehideDrop = true)\r\n      }\r\n    };\r\n\r\n    //let required = fname === null | fname === \"\" | lname === null | lname === \"\" | datebirth === null | datebirth === \"\" | datehire === null | datehire === \"\" | w2earnings === null | w2earnings === \"\";\r\n    //alert(catchup)\r\n\r\n    const SaveUserArray = (navigation,Censustoken) => {\r\n        let CensushasError = false;\r\n        \r\n        //check if First Name is blank\r\n        if (fname === null | fname === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"First Name cannot be blank.\");\r\n        }\r\n\r\n        //check if Last Name is blank\r\n        if (lname === null | lname === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Last Name cannot be blank.\");\r\n        }\r\n\r\n        //check if Date of Birth is blank\r\n        if (datebirth === null | datebirth === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Date of Birth cannot be blank.\");\r\n        }\r\n\r\n        //check if Date of Hire is blank\r\n        if (datehire === null | datehire === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Date of Hire cannot be blank.\");\r\n        }\r\n\r\n        //check if W-2 Earnings is blank\r\n        if (w2earnings === null | w2earnings === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"W-2 Earnings cannot be blank.\");\r\n        }\r\n\r\n        //console.log(w2earnings, '>>>', /^\\d+\\.\\d+$|^\\d+$/.test(w2earnings));\r\n        //check if W-2 Earnings only has numbers\r\n        if(isNaN(w2earnings))\r\n        {\r\n            setIsLoading(isLoading = false)\r\n            Alert.alert(\"Data Error:\", \"You must enter a valid W-2 Earnings.\");\r\n            CensushasError = true;\r\n        }\r\n\r\n        if((CatchUpOverride !== null || CatchUpOverride !== \"\") && isNaN(CatchUpOverride))\r\n        {\r\n            setIsLoading(isLoading = false)\r\n            Alert.alert(\"Data Error:\", \"You must enter a valid Catch up override.\");\r\n            CensushasError = true;\r\n        }\r\n\r\n        if (pastservice === null | pastservice === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Past Service cannot be blank.\");\r\n        }\r\n\r\n        if (LYcompensation === null | LYcompensation === \"\") {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"LY Compensation cannot be blank.\");\r\n        }\r\n\r\n        //console.log(LYcompensation, '>>>', /^\\d+\\.\\d+$|^\\d+$/.test(LYcompensation));\r\n         //check if LYcompensation only has numbers\r\n         if(!/^\\d+\\.\\d+$|^\\d+$/.test(LYcompensation))\r\n         {\r\n            setIsLoading(isLoading = false)\r\n             Alert.alert(\"Data Error:\", \"You must enter a valid LY Compensation.\");\r\n             CensushasError = true;\r\n         }\r\n \r\n\r\n        if ((percentOwnership === null & owner === 1) | (percentOwnership === \"\" & owner === 1)) {\r\n            //setClassload(Classload = false);\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Percent Ownership cannot be blank.\");\r\n        }\r\n\r\n        if(deferralchoice === \"%\"  && (deferral < 0 || deferral > 100)){\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Deferral, between 0 and 100 percent is a valid value.\");\r\n        }\r\n        if(Cashbalancechoice === \"%\"  && (CashbalanceInput < 0 || CashbalanceInput > 100)){\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Cash Balance, between 0 and 100 percent is a valid value.\");\r\n        }\r\n        if(Profitsharingchoice === \"%\"  && (Profitsharinginput < 0 || Profitsharinginput > 100)){\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Profit Sharing, between 0 and 100 percent is a valid value.\");\r\n        }\r\n        if(MatchContributionchoice === \"%\"  && (MatchContributioninput < 0 || MatchContributioninput > 100)){\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Match Contribution, between 0 and 100 percent is a valid value.\");\r\n        }\r\n        if(SafeHarborContribchoice === \"%\"  && (SafeHarborContribinput < 0 || SafeHarborContribinput > 100)){\r\n            setIsLoading(isLoading = false)\r\n            CensushasError = true;\r\n            Alert.alert(\"Error:\", \"Safe Harbor Contrib, between 0 and 100 percent is a valid value.\");\r\n        }\r\n    \r\n        \r\n        if (!CensushasError) {\r\n            let CensusState = 'CensusEdituser';\r\n            if (route.params?.State === 'CensusAddUser') CensusState = 'CensusAdduser';\r\n            \r\n            let userArray = { \r\n                PlanId: CensusPlanId, \r\n                FirstName: fname.trim(),\r\n                LastName: lname.trim(),\r\n                Principal: (pricipal === 2 ? 0 : 1), //pricipal === 0 ? false: true,\r\n                Sex: sex,\r\n                IsOwner: (owner === 2 ? 0 : 1), \r\n                FamilyCode: familycode,\r\n                DateOfBirth: datebirth,\r\n                DateOfHire: datehire,\r\n                WorkHours: hourswork,\r\n                //Age?\r\n                PastService: pastservice,//??\r\n                LastYearComp: LYcompensation,\r\n                W2Earnings: w2earnings,\r\n                CatchUp: (catchup === 2 ? 0 : 1),\r\n                //HighlyComp?\r\n                //ClassId?\r\n                //RetAge\r\n                \r\n                ClassCode: classtype,\r\n                DeferralOverrideValue: deferral,\r\n                DeferralOverrideType: deferralchoice,\r\n                CBOverrideValue: CashbalanceInput,\r\n                CBOverrideType: Cashbalancechoice,\r\n                PSOverrideValue: Profitsharinginput,\r\n                PSOverrideType: Profitsharingchoice,\r\n                MatchOverrideValue: MatchContributioninput,\r\n                MatchOverrideType: MatchContributionchoice,\r\n                SHOverrideValue: SafeHarborContribinput,\r\n                SHOverrideType: SafeHarborContribchoice,\r\n                //ParticipationDate?\r\n                ParticipationDateOverride: Overridecheck,\r\n                HCEOverride: parseInt(HCEchoice, 10) > -1 ? true : false,\r\n                PercentOwnership: percentOwnership === \"\" ? 0 : percentOwnership,\r\n                Age: age,\r\n                HighlyComp: (parseInt(HCEchoice, 10) > -1 && HCEchoice === '1') ? 1 : 0,\r\n                ClassId: classId,\r\n                RetAge: retAge,\r\n                ParticipationDate: participationDate,\r\n                catchUpOverride: CatchUpOverride,\r\n                \r\n            }\r\n            if (CensusState === 'CensusEdituser') userArray.ParticipantId = paxId;\r\n            CensusAddorEdit(navigation,userArray,CensusState,Censustoken,setIsLoading,isLoading);\r\n        }\r\n        \r\n    }  \r\n    \r\n   const CensusBirthhandleConfirm = (BselectedDate) => {\r\n        let BirthcurrentDate = BselectedDate;\r\n        BirthcurrentDate = moment(BirthcurrentDate).format('MM/DD/YYYY');\r\n        //alert(currentDate)\r\n        setBirthShow(BirthShow = !BirthShow);\r\n        setdatebirth(datebirth = BirthcurrentDate);\r\n    };\r\n   const CensusHirehandleConfirm = (HselectedDate) => {\r\n        let HirecurrentDate = HselectedDate;\r\n        HirecurrentDate = moment(HirecurrentDate).format('MM/DD/YYYY');\r\n        //alert(currentDate)\r\n        setHireShow(HireShow = !HireShow);\r\n        setdatehire(datehire = HirecurrentDate);\r\n    };\r\n\r\n    const CensusOverridehandleConfirm = (OselectedDate) => {\r\n        let OverridecurrentDate = OselectedDate;\r\n        OverridecurrentDate = moment(OverridecurrentDate).format('MM/DD/YYYY');\r\n        //alert(currentDate)\r\n        setOverrideShow(OverrideShow = !OverrideShow);\r\n        setParticipationDate(participationDate = OverridecurrentDate);\r\n    };\r\n\r\n    \r\n    var Sex = [ //not tested\r\n        {\r\n            id: 'M', // required\r\n            //text: 'Male', //required\r\n            label: 'Male'\r\n        },\r\n        {\r\n            id: 'F',\r\n            //text: 'Female',\r\n            label: 'Female'\r\n        },\r\n    ];\r\n    var choice = [ //not tested\r\n        {\r\n            id: 1, // required\r\n            label: 'Yes'\r\n        },\r\n        {\r\n            id: 2,\r\n            //text: 'No',\r\n            label: 'No'\r\n        },\r\n    ];\r\n    var choiceCatchup = [ //not tested\r\n        {\r\n            id: 1, // required\r\n            label: 'Yes'\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'No'\r\n        },\r\n    ];\r\n    var HCE = [\r\n        {\r\n            id: '-1', // required\r\n            label: 'N/A'\r\n        },\r\n        {\r\n            id: '1',\r\n            label: 'Yes'\r\n        },\r\n        {\r\n            id: '0',\r\n            label: 'No'\r\n        },\r\n    ];\r\n    var Money = [ //not tested\r\n        {\r\n            id: '%', // required\r\n            label: '%'\r\n        },\r\n        {\r\n            id: '$',\r\n            label: '$'\r\n        },\r\n    ];\r\n       \r\n    return(\r\n    \r\n        <View style ={styles.container}>\r\n            <ScrollView ref={CensusUpdateScroll} style ={styles.scroll}>\r\n               \r\n                <Text style={styles.header}>General Info</Text>\r\n               \r\n\r\n                <View style={styles.ItemsSpace}>\r\n                    <Text style={styles.columnNames}>First Name {fname === null | fname === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"first name\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={fname}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setfname(fname = val)}}\r\n                        />\r\n\r\n                    <Text style={styles.columnNames}>Last Name  {lname === null | lname === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"last name\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={lname}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setlname(lname = val)}}\r\n                        />\r\n\r\n                    <Text style={styles.columnNames}>Sex</Text>\r\n                        <RadioButtonRN\r\n                            data={Sex}\r\n                            activeOpacity={2}\r\n                            initial={sex === 'M' ? 1 : 2}\r\n                            animationTypes={['pulse']}\r\n                            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                            textStyle={{paddingLeft: 10}}\r\n                            boxStyle={{width: 80}}\r\n                            box={false}\r\n                            selectedBtn={(e) => setsex(sex = e.id)}\r\n                            circleSize={13}\r\n                            activeColor={'#333333'}\r\n                            deactiveColor={'grey'}\r\n                            textColor={'#333333'}\r\n                        />\r\n                        {/*\r\n                        <RadioButton\r\n                            data={Sex} //required\r\n                            defaultOption={sex}\r\n                            formStyle = {{flexDirection: 'row'}} \r\n                            containerStyle={{marginBottom: 0}}\r\n                            labelStyle={{paddingRight: 10}}\r\n                            circleContainerStyle={{ }} // add your styles to each outer circle\r\n                            innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setsex(sex = value.id)}} //required\r\n                        />*/}\r\n\r\n                    <Text style={styles.columnNames}>Principal?</Text>\r\n                        \r\n                        <RadioButtonRN\r\n                            data={choice}\r\n                            activeOpacity={2}\r\n                            initial={pricipal}\r\n                            animationTypes={['pulse']}\r\n                            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                            textStyle={{paddingLeft: 10}}\r\n                            boxStyle={{width: 70}}\r\n                            box={false}\r\n                            selectedBtn={(e) => setpricipal(pricipal = e.id)}\r\n                            circleSize={13}\r\n                            activeColor={'#333333'}\r\n                            deactiveColor={'grey'}\r\n                            textColor={'#333333'}\r\n                        />\r\n                        \r\n    \r\n                        {/*\r\n                        <RadioButton\r\n                            data={choice} //required\r\n                            defaultOption={pricipal}\r\n                            formStyle = {{flexDirection: 'row'}} \r\n                            containerStyle={{marginBottom: 0}}\r\n                            labelStyle={{paddingRight: 10}}\r\n                            circleContainerStyle={{ }} // add your styles to each outer circle\r\n                            innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setpricipal(pricipal = value.id)}} //required\r\n                        />*/}\r\n                    <Text style={styles.columnNames}>Owner?</Text>\r\n                        <View style = {{ flexDirection: 'row'}}>\r\n                            <RadioButtonRN\r\n                                data={choice}\r\n                                activeOpacity={2}\r\n                                initial={owner}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setowner(owner = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                        {owner === 1 && (\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"% owned\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={percentOwnership}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setPercentOwnership(percentOwnership = val)}}\r\n                            />\r\n                        )}\r\n                        </View>    \r\n                        \r\n                        {/*\r\n                        <RadioButton\r\n                            data={choice} //required\r\n                            defaultOption={owner}\r\n                            formStyle = {{flexDirection: 'row'}} \r\n                            containerStyle={{marginBottom: 0}}\r\n                            labelStyle={{paddingRight: 10}}\r\n                            circleContainerStyle={{ }} // add your styles to each outer circle\r\n                            innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setowner(owner = value.id)}} //required\r\n                        />*/}\r\n                    <Text style={styles.columnNames}>Family Code</Text>\r\n                        <DropDownPicker\r\n                            items={[\r\n                                {label: 'N/A', value: \" \"},\r\n                                {label: 'A', value: 'A'},\r\n                                {label: 'B', value: 'B'},\r\n                                {label: 'C', value: 'C'},\r\n                                {label: 'D', value: 'D'},\r\n                                {label: 'E', value: 'E'},\r\n                                {label: 'F', value: 'F'},\r\n                                {label: 'G', value: 'G'},\r\n                                {label: 'H', value: 'H'},\r\n                                {label: 'I', value: 'I'},\r\n                                {label: 'K', value: 'K'},\r\n                            ]}\r\n                            isVisible={FamilyCodehideDrop}\r\n                            defaultIndex={0}\r\n                            defaultValue={familycode}\r\n                            zIndex={2}\r\n                            //placeholder=\"Select number of years\"\r\n                            placeholderStyle={{color: colors.Logintext}}\r\n                            activeLabelStyle={{color: 'green'}}\r\n                            labelStyle={{color: colors.Logintext}}\r\n                            style={{borderWidth: 1}}\r\n                            itemStyle={{justifyContent: 'flex-start'}}\r\n                            dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                            containerStyle={{ height: 40, flex: 1, marginTop: 5, marginBottom: FamilyCodeMargin}}\r\n                            arrowColor='rgba(51,51,51,0.5)'\r\n                            onOpen={() => [CensusDropSelected = 1,DropdownCensusController(CensusDropSelected),CensusUpdateScroll.current.scrollTo({ x: 0, y: 200, animated: true })]}\r\n                            onClose={() => {[setFamilyCodehideDrop(FamilyCodehideDrop = false),setFamilyCodeMargin(FamilyCodeMargin = 0)]}}\r\n                            onChangeItem={item => {setfamilycode(familycode = item.value)}} //item.value\r\n                        />\r\n                      \r\n                    <Text style={styles.columnNames}>Date of Birth {datebirth === null | datebirth === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n                    <View style = {{ flexDirection: 'row'}}>\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"date of birth\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={datebirth}\r\n                            keyboardType='default'\r\n                            editable={false}\r\n                            onChangeText={(val) => {setdatebirth(datebirth = val)}}\r\n                        />\r\n                        <TouchableOpacity onPress={() => setBirthShow(BirthShow = !BirthShow)}>\r\n                            <Feather style={{ marginLeft: 5}}\r\n                                name=\"calendar\"\r\n                                color=\"grey\"\r\n                                size={25}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                        {BirthShow && (\r\n                            <DateTimePickerModal\r\n                            isVisible={BirthShow}\r\n                            mode=\"date\"\r\n                            date={(datebirth) ? new Date(datebirth): new Date()}\r\n                            onConfirm={(val) => CensusBirthhandleConfirm(val)}\r\n                            onCancel={() => setBirthShow(BirthShow = !BirthShow)}\r\n                            />\r\n                        )}\r\n                    <Text style={styles.columnNames}>Date of Hire {datehire === null | datehire === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n                    <View style = {{ flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"date of hire\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={datehire}\r\n                                keyboardType='default'\r\n                                editable={false}\r\n                                onChangeText={(val) => {setdatehire(datehire = val)}}\r\n                            />\r\n                         <TouchableOpacity onPress={() => setHireShow(HireShow = !HireShow)}>\r\n                            <Feather style={{ marginLeft: 5}}\r\n                            name=\"calendar\"\r\n                            color=\"grey\"\r\n                            size={25}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                        {HireShow && (\r\n                            <DateTimePickerModal\r\n                            isVisible={HireShow}\r\n                            mode=\"date\"\r\n                            date={(datehire) ? new Date(datehire): new Date()}\r\n                            onConfirm={(val) => CensusHirehandleConfirm(val)}\r\n                            onCancel={() => setHireShow(HireShow = !HireShow)}\r\n                            />\r\n                        )}\r\n                    <Text style={styles.columnNames}>Hours Worked</Text>\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            //placeholder=\"date of hire\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={hourswork}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {sethourswork(hourswork = val)}}\r\n                        />\r\n                    <Text style={styles.columnNames}>Past Service</Text>\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"service\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={pastservice}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setpastservice(pastservice = val)}}\r\n                        />\r\n                    <Text style={styles.columnNames}>LY Compensation</Text>\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"compensation\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={LYcompensation}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setLYcompensation(LYcompensation = val)}}\r\n                        />\r\n                    <Text style={styles.columnNames}>W-2 Earnings {w2earnings === null | w2earnings === \"\" ?  <Text style={{color:'red'}}>*</Text> : null}</Text>\r\n                        <TextInput \r\n                            placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                            placeholder=\"Earnings\"\r\n                            style={[styles.textInput,{color: colors.Logintext}]}\r\n                            //autoCapitalize=\"none\"\r\n                            value={w2earnings}\r\n                            keyboardType='default'\r\n                            onChangeText={(val) => {setw2earnings(w2earnings = val)}}\r\n                        />\r\n                    <Text style={styles.columnNames}>Catch Up</Text>\r\n\r\n                        <RadioButtonRN\r\n                            data={choiceCatchup}\r\n                            activeOpacity={2}\r\n                            initial={catchup}//error changing to 2\r\n                            animationTypes={['pulse']}\r\n                            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                            textStyle={{paddingLeft: 10}}\r\n                            boxStyle={{width: 70}}\r\n                            box={false}\r\n                            selectedBtn={(e) => setcatchup(catchup = e.id)}\r\n                            circleSize={13}\r\n                            activeColor={'#333333'}\r\n                            deactiveColor={'grey'}\r\n                            textColor={'#333333'}\r\n                        />\r\n                        {/* \r\n                        <RadioButton\r\n                            data={choice} //required\r\n                            defaultOption={catchup}\r\n                            formStyle = {{flexDirection: 'row'}} \r\n                            containerStyle={{marginBottom: 0}}\r\n                            labelStyle={{paddingRight: 10}}\r\n                            circleContainerStyle={{ }} // add your styles to each outer circle\r\n                            innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setcatchup(catchup = value.id)}} //required\r\n                        />*/}\r\n                    <Text style={styles.columnNames}>Class Type</Text>\r\n                        <DropDownPicker\r\n                            items={dataState.censusDropDownData}\r\n                            isVisible={ClassTypehideDrop}\r\n                            defaultIndex={0}\r\n                            defaultValue={CheckClassCode(classtype)}\r\n                            zIndex={3}\r\n                            itemStyle={{justifyContent: 'flex-start'}}\r\n                            //placeholder=\"Select number of years\"\r\n                            placeholderStyle={{color: colors.Logintext}}\r\n                            activeLabelStyle={{color: 'green'}}\r\n                            labelStyle={{color: colors.Logintext}}\r\n                            style={{borderWidth: 1}}\r\n                            dropDownStyle={{backgroundColor: '#fafafa',borderWidth: 1}}\r\n                            containerStyle={{ height: 40, flex: 1, marginTop: 5, marginBottom: ClassTypeMargin}}\r\n                            arrowColor='rgba(51,51,51,0.5)'\r\n                            onOpen={() => [CensusDropSelected = 2,DropdownCensusController(CensusDropSelected),CensusUpdateScroll.current.scrollTo({ x: 0, y: 500, animated: true })]}\r\n                            onClose={() => {[setClassTypehideDrop(ClassTypehideDrop = false),setClassTypeMargin(ClassTypeMargin = 0)]}}\r\n                            onChangeItem={item => {setclasstype(classtype = item.value)}} //item.value\r\n                        />\r\n                </View>\r\n\r\n                <Text style={styles.header}>Overrides</Text>\r\n                \r\n                <View style={styles.ItemsSpace}>\r\n                    <Text style={styles.columnNames}>Deferral</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"deferral\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={deferral}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setdeferral(deferral = val)}}\r\n                            />\r\n                             <RadioButtonRN\r\n                                data={Money}\r\n                                activeOpacity={2}\r\n                                initial={deferralchoice === '%' ? 1 : 2}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setdeferralchoice(deferralchoice = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                            {/*\r\n                            <RadioButton\r\n                                data={Money} //required\r\n                                defaultOption={deferralchoice}\r\n                                formStyle = {{flexDirection: 'row'}} \r\n                                containerStyle={{marginBottom: 0, marginLeft: 10}}\r\n                                labelStyle={{paddingRight: 10}}\r\n                                circleContainerStyle={{ }} // add your styles to each outer circle\r\n                                innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                                onValueChange={(value) => {setdeferralchoice(deferralchoice = value.id)}} //required\r\n                            />*/}\r\n                        </View>\r\n                        {deferralchoice === \"%\"  && (deferral < 0 || deferral > 100) &&\r\n                            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>*Between 0 and 100 percent is a valid value.</Text>\r\n                        }\r\n                    <Text style={styles.columnNames}>Cash Balance</Text>\r\n                         <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"balance\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={CashbalanceInput}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setCashbalanceInput(CashbalanceInput = val)}}\r\n                            />\r\n                             <RadioButtonRN\r\n                                data={Money}\r\n                                activeOpacity={2}\r\n                                initial={Cashbalancechoice === '%' ? 1 : 2}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setCashbalancechoice(Cashbalancechoice = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                            {/*\r\n                            <RadioButton\r\n                                data={Money} //required\r\n                                defaultOption={Cashbalancechoice}\r\n                                formStyle = {{flexDirection: 'row'}} \r\n                                containerStyle={{marginBottom: 0, marginLeft: 10}}\r\n                                labelStyle={{paddingRight: 10}}\r\n                                circleContainerStyle={{ }} // add your styles to each outer circle\r\n                                innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setCashbalancechoice(Cashbalancechoice = value.id)}} //required\r\n                            /> */}\r\n                        </View>\r\n                        {Cashbalancechoice === \"%\"  && (CashbalanceInput < 0 || CashbalanceInput > 100) &&\r\n                            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>*Between 0 and 100 percent is a valid value.</Text>\r\n                        }\r\n                    <Text style={styles.columnNames}>Profit Sharing</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"profit\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={Profitsharinginput}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setProfitsharinginput(Profitsharinginput = val)}}\r\n                            />\r\n                            <RadioButtonRN\r\n                                data={Money}\r\n                                activeOpacity={2}\r\n                                initial={Profitsharingchoice === '%' ? 1 : 2}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setProfitsharingchoice(Profitsharingchoice = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                        </View>\r\n                        {Profitsharingchoice === \"%\"  && (Profitsharinginput < 0 || Profitsharinginput > 100) &&\r\n                            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>*Between 0 and 100 percent is a valid value.</Text>\r\n                        }\r\n                    <Text style={styles.columnNames}>Match Contribution</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"match contribution\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={MatchContributioninput}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setMatchContributioninput(MatchContributioninput = val)}}\r\n                            />\r\n                            <RadioButtonRN\r\n                                data={Money}\r\n                                activeOpacity={2}\r\n                                initial={MatchContributionchoice === '%' ? 1 : 2}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setMatchContributionchoice(MatchContributionchoice = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                        </View>\r\n                        {MatchContributionchoice === \"%\"  && (MatchContributioninput < 0 || MatchContributioninput > 100) &&\r\n                            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>*Between 0 and 100 percent is a valid value.</Text>\r\n                        }\r\n                    <Text style={styles.columnNames}>Safe Harbor Contrib</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"safe harbor contrib\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={SafeHarborContribinput}\r\n                                keyboardType='default'\r\n                                onChangeText={(val) => {setSafeHarborContribinput(SafeHarborContribinput = val)}}\r\n                            />\r\n                            <RadioButtonRN\r\n                                data={Money}\r\n                                activeOpacity={2}\r\n                                initial={SafeHarborContribchoice === '%' ? 1 : 2}\r\n                                animationTypes={['pulse']}\r\n                                style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                textStyle={{paddingLeft: 10}}\r\n                                boxStyle={{width: 70}}\r\n                                box={false}\r\n                                selectedBtn={(e) => setSafeHarborContribchoice(SafeHarborContribchoice = e.id)}\r\n                                circleSize={13}\r\n                                activeColor={'#333333'}\r\n                                deactiveColor={'grey'}\r\n                                textColor={'#333333'}\r\n                            />\r\n                        </View>\r\n                        {SafeHarborContribchoice === \"%\"  && (SafeHarborContribinput < 0 || SafeHarborContribinput > 100) &&\r\n                            <Text style={{color: 'red', marginLeft: 2.5, marginRight: 2.5, marginTop: 5, marginBottom: 10, fontSize: 11}}>*Between 0 and 100 percent is a valid value.</Text>\r\n                        }\r\n                    <Text style={styles.columnNames}>Catch up</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"Catch up override\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={CatchUpOverride.toString()}\r\n                                keyboardType='numeric'\r\n                                onChangeText={(val) => {setCatchUpOverride(CatchUpOverride = val)}}\r\n                            />\r\n                            <Text style={{marginLeft: 2.5, marginRight: 2.5, fontSize: 16}}>$</Text>\r\n                        </View>\r\n\r\n                    <Text style={styles.columnNames}>HCE Override?</Text>\r\n                        <RadioButtonRN\r\n                            data={HCE}\r\n                            activeOpacity={2}\r\n                            initial={HCEchoice === '-1' ? 1 : (HCEchoice === '1' ? 2 : 3)}\r\n                            animationTypes={['pulse']}\r\n                            style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                            textStyle={{paddingLeft: 10}}\r\n                            boxStyle={{width: 70}}\r\n                            box={false}\r\n                            selectedBtn={(e) => setHCEchoice(HCEchoice = e.id)}\r\n                            circleSize={13}\r\n                            activeColor={'#333333'}\r\n                            deactiveColor={'grey'}\r\n                            textColor={'#333333'}\r\n                        />\r\n                        {/*\r\n                        <RadioButton\r\n                            data={HCE} //required\r\n                            defaultOption={HCEchoice}\r\n                            formStyle = {{flexDirection: 'row'}} \r\n                            containerStyle={{marginBottom: 0}}\r\n                            labelStyle={{paddingRight: 10}}\r\n                            circleContainerStyle={{ }} // add your styles to each outer circle\r\n                            innerCircleStyle={{ /*backgroundColor: 'green' }} // add your styles to each inner circle\r\n                            onValueChange={(value) => {setHCEchoice(HCEchoice = value.id)}} //required\r\n                        />*/}\r\n                    <Text style={styles.columnNames}>Date of Participation</Text>\r\n\r\n                        <View style = {{ flexDirection: 'row'}}>\r\n                            <TextInput \r\n                                placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                placeholder=\"date of birth\"\r\n                                style={[styles.textInput,{color: colors.Logintext}]}\r\n                                //autoCapitalize=\"none\"\r\n                                value={participationDate}\r\n                                keyboardType='default'\r\n                                editable={false}\r\n                                onChangeText={(val) => {setParticipationDate(participationDate = val)}}\r\n                            /> \r\n                            <TouchableOpacity disabled={Overridecheck === true ? false : true} onPress={() => setOverrideShow(OverrideShow = !OverrideShow)}>\r\n                                <Feather style={{ marginLeft: 5}}\r\n                                    name=\"calendar\"\r\n                                    color=\"grey\"\r\n                                    size={25}\r\n                                />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        {OverrideShow && (\r\n                            <DateTimePickerModal\r\n                                isVisible={OverrideShow}\r\n                                mode=\"date\"\r\n                                date={(participationDate) ? new Date(participationDate) : new Date()}\r\n                                onConfirm={(val) => CensusOverridehandleConfirm(val)}\r\n                                onCancel={() => setOverrideShow(OverrideShow = !OverrideShow)}\r\n                            />\r\n                        )}\r\n                    <View style={{flexDirection: 'row', marginTop: 5}}>\r\n                        <CheckBox \r\n                            style={{paddingRight: 5}}\r\n                            checkedCheckBoxColor = {'#333333'}\r\n                            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                            isChecked={Overridecheck} onClick = {()=> setOverridecheck(Overridecheck = !Overridecheck)}/>\r\n                        <Text style = {{color: colors.Logintext,paddingTop: 2.5}}>Override Participation Date</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.button}>\r\n                    <TouchableOpacity style={styles.signIn} disabled={isLoading} onPress={() => {[setIsLoading(isLoading = true), SaveUserArray(navigation,Censustoken)]}}>\r\n                        <LinearGradient\r\n                            colors={['#72be03','#397e05']} //'#72be03','#397e05'\r\n                            style={styles.signIn}\r\n                            start={[0, 1]} end={[1, 0]}\r\n                        >\r\n                             {isLoading ?\r\n                                <ActivityIndicator size=\"large\" color={colors.icontitle}/>\r\n                                :\r\n                                <Text style={[styles.textSign, {color:'#fff'}]}>{parameter === 'CensusAddUser' ? 'Save New' : 'Update'}</Text>\r\n                            }   \r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {borderColor: '#333333', borderWidth: 1.5,marginTop: 15,marginBottom: 20}]}>\r\n                        <Text style={[styles.textSign, {color: '#333333'}]}>Cancel</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n        </View>\r\n            \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddModal;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      //backgroundColor: 'rgba(51,51,51, 0.8)'\r\n      backgroundColor: 'white',\r\n      //alignItems: 'center',\r\n      //justifyContent: 'center',\r\n    },\r\n    scroll: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n    header: {\r\n        color: '#333333',\r\n        fontSize: 17,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n    },\r\n    columnNames: {\r\n        marginTop: 10,\r\n        marginBottom: 5,\r\n    },\r\n    textInput: {\r\n        flex: 1,  \r\n        borderBottomWidth: 1.5,\r\n        borderBottomColor: '#989c9d',\r\n    },\r\n   \r\n    ItemsSpace: {\r\n        marginLeft: 10,    \r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 20\r\n        \r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n  });","import React from 'react';\r\nimport { View, Text, Button, StyleSheet,ScrollView,TouchableOpacity,TextInput } from 'react-native';\r\nimport{ AuthContext } from '../../components/context';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\n\r\nconst PlanCopy = ({navigation,route}) => {\r\n    const [{ClassAddorEdit },dataState] = React.useContext(AuthContext);\r\n   //console.log('checker',route.params?.CopyInfo)\r\n    const { colors } = useTheme();\r\n    let copy = route.params?.CopyInfo;\r\n    const data = [\r\n        {\r\n          id: 1,\r\n          label: 'Yes'\r\n         },\r\n         {\r\n          id: 2,\r\n          label: 'No'\r\n         }\r\n        ];\r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView style={styles.scroll}>\r\n            <Text style={styles.TitleName}>Original Plan</Text>\r\n            <View style={styles.columnNamesContainer}>\r\n                <Text ellipsizeMode='tail' numberOfLines={1} style={styles.columnNames}>Plan Name:  <Text style={styles.Copyinfo}>{copy.planName}</Text></Text>\r\n\r\n                <Text ellipsizeMode='tail' numberOfLines={1} style={styles.columnNames}>PLan Description: <Text style={styles.Copyinfo}>ewiueiweyiquweywqieyqwuieyqeuqew</Text></Text>\r\n                <Text ellipsizeMode='tail' numberOfLines={1} style={styles.columnNames}>User ID:  <Text style={styles.Copyinfo}>{copy.email}</Text></Text>\r\n                <Text style={styles.columnNames}>Copy Plan Detail Only</Text>\r\n                    <RadioButtonRN\r\n                        data={data}\r\n                        activeOpacity={1}\r\n                        initial={2}\r\n                        animationTypes={['pulse']}\r\n                        style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                        textStyle={{paddingLeft: 10}}\r\n                        boxStyle={{width: 70}}\r\n                        box={false}\r\n                        selectedBtn={(e) => {}}\r\n                        circleSize={12}\r\n                        activeColor={'#333333'}\r\n                        deactiveColor={'grey'}\r\n                        textColor={'#333333'}\r\n                    />\r\n            </View>\r\n            <Text style={styles.TitleName}>New Plan</Text>\r\n            <View style={styles.columnNamesContainer}>\r\n                <Text style={styles.columnNames}>Plan Name</Text>\r\n                <TextInput \r\n                    placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                    placeholder=\"Name\"\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    //autoCapitalize=\"none\"\r\n                    value={null}\r\n                    keyboardType='default'\r\n                    onChangeText={(val) => {}}\r\n                />\r\n                <Text style={styles.columnNames}>PLan Description</Text>\r\n                <TextInput \r\n                    multiline={true}\r\n                    numberOfLines={5}\r\n                    placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                    placeholder=\"Description\"\r\n                    style={[styles.textArea,{color: colors.Logintext}]}\r\n                    //autoCapitalize=\"none\"\r\n                    value={null}\r\n                    keyboardType='default'\r\n                    onChangeText={(val) => {}}\r\n                />\r\n                <Text ellipsizeMode='tail' numberOfLines={1} style={styles.columnNames}>User ID: <Text style={styles.Copyinfo}>{copy.email}</Text></Text>\r\n            </View>\r\n\r\n            <View style={styles.button}>\r\n                <TouchableOpacity style={[styles.signIn,{marginRight: 2.5, marginBottom: 10}]} onPress={() => {}}>\r\n                    <LinearGradient\r\n                        colors={['#72be03','#397e05']} //'#72be03','#397e05'\r\n                        style={styles.signIn}\r\n                        start={[0, 1]} end={[1, 0]}\r\n                    >\r\n                        <Text style={[styles.textSign, {color:'#fff'}]}>Copy</Text>\r\n                    </LinearGradient>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {borderColor: '#333333', borderWidth: 1.5,marginLeft: 2.5}]}>\r\n                    <Text style={[styles.textSign, {color: '#333333'}]}>Cancel</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default PlanCopy;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1, \r\n        backgroundColor: 'white',\r\n        //alignItems: 'center', \r\n        //justifyContent: 'center'\r\n    },\r\n    scroll: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        //paddingHorizontal: 15,\r\n    },\r\n    TitleName: {\r\n        padding: 2.5,\r\n        paddingHorizontal: 15,\r\n        color: 'grey',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n        backgroundColor: 'lightgrey'\r\n    },\r\n    columnNamesContainer: {\r\n        paddingHorizontal: 25,\r\n    },\r\n    textArea: {\r\n        flex: 1,  \r\n        textAlignVertical: 'top',\r\n        padding: 5,\r\n        borderRadius: 5,\r\n        borderWidth: 1.5,\r\n        borderColor: '#989c9d',\r\n    },\r\n\r\n    columnNames: {\r\n        //paddingHorizontal: 25,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n    },\r\n    Copyinfo: {\r\n        //paddingHorizontal: 25,\r\n        marginTop: 5,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        fontWeight: 'normal'\r\n    },\r\n    textInput: {\r\n        flex: 1,  \r\n        height: 30,\r\n        borderBottomWidth: 1.5,\r\n        borderBottomColor: '#989c9d',\r\n        marginBottom: 5,\r\n    },\r\n    button: {\r\n        //backgroundColor: 'grey',\r\n        //marginTop: 10,\r\n        margin: 10,\r\n        flexDirection: 'column'\r\n\r\n    },\r\n    signIn: {\r\n        flex: 1,\r\n\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        //alignItems: 'center',\r\n        borderRadius: 5\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n});","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,Modal,Dimensions,ScrollView,TextInput,Alert,ActivityIndicator,KeyboardAvoidingView } from 'react-native';\r\nimport{ AuthContext } from '../components/context';\r\nimport RadioButtonRN from 'radio-buttons-react-native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport Settings from '../settings.json';\r\nconst baseURL = Settings.domain;\r\n//import { WebView } from 'react-native-webview';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst CopyModal = ({ navigation,route }) => {\r\n    const [{},dataState] = React.useContext(AuthContext);\r\n    let copy = route.params?.CopyInfo;\r\n   //console.log('OpenModal', copy)\r\n    let [isLoading, setIsLoading] = React.useState(false);\r\n    //let [Hide, setHide] = React.useState(true);\r\n    const { colors } = useTheme();\r\n    //console.log('dataState',dataState.plan)\r\n    let [planID, setPlanId] = React.useState(copy.planId);     \r\n    let [planName, setPlanName] = React.useState(\"\"); \r\n    let [planDesc, setPlanDesc] = React.useState(copy.planDescription);\r\n    let [userName, setUserName] = React.useState(dataState.userName);\r\n    let [includeDetail, setIncludeDetail] = React.useState(false);\r\n    let [userNumber, setuserNumber] = React.useState(copy.userNumber);\r\n    let [sponsorId, setsponsorId] = React.useState(dataState.userSponsorId);\r\n\r\n\r\n    const data = [\r\n        {\r\n          id: 1,\r\n          label: 'Yes'\r\n         },\r\n         {\r\n          id: 2,\r\n          label: 'No'\r\n         }\r\n        ];\r\n\r\n    \r\n    \r\n        \r\n    const CopyNow = async() => {\r\n        if ( planName == 0) {\r\n            setIsLoading(isLoading = false)\r\n            Alert.alert('Invalid Plan Name', 'Plan Name field cannot be empty.', [\r\n                {text: 'OK'}\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        let url = baseURL + '/Plans/PlanCopy';\r\n        let method = 'POST';\r\n        let headers = new Headers();\r\n        let body = {\"planId\":planID,\r\n        \"planName\":planName,\r\n        \"planDesc\":planDesc,\r\n        \"userName\":userName,\r\n        \"includeDetail\":includeDetail == 2? true: false,\r\n        \"userNumber\":userNumber,\r\n        \"sponsorId\":sponsorId\r\n        } \r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', dataState.userToken);\r\n        \r\n       //console.log(method,headers,body,url);\r\n\r\n        body = JSON.stringify(body);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers,\r\n            body\r\n        });\r\n        \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            \r\n            if (responseJson.isSuccess){\r\n               //console.log(\"copy plan\", responseJson);\r\n                Alert.alert('Plan Copy', 'Copy plan complete.', [\r\n                    {text: 'OK' , onPress: () =>{[\r\n                        navigation.navigate('Plan Directory', {screen: 'Plan List', params: {CopyPlan: true}})\r\n                    ]}}\r\n                ]);\r\n            } else{\r\n                Alert.alert(\"Save Error\", responseJson.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n    } \r\n\r\n\r\n    return(\r\n       \r\n        <Modal\r\n            animated={true}\r\n            //ref={ref => (this._modal = ref)}\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={true}\r\n            onRequestClose={() => {}}  \r\n        >\r\n       \r\n        <View style ={styles.ModalBackground}>\r\n            <View style ={styles.Modalcontainer}>\r\n\r\n                <View style={[styles.Colorcontainer, {backgroundColor: colors.icon}]}>\r\n                    <View style={styles.headercontainer}>\r\n                        <Text style={[styles.header,{padding: 5}]}>Plan Duplication</Text>\r\n                        <TouchableOpacity style={{ padding: 5, borderRadius: 10}} onPress={() => {navigation.goBack()}}>\r\n                            <Text style={styles.header}>X</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n                <KeyboardAvoidingView style={{ flex: 1, flexDirection: 'column',justifyContent: 'center',}} behavior=\"padding\" keyboardVerticalOffset={100}>\r\n                    <ScrollView style={styles.scroll}>\r\n                        <Text style={styles.TitleName}>Original Plan</Text>\r\n                        <View style={styles.columnNamesContainer}>\r\n                            <Text style={styles.columnNames}>Plan Name: {copy.planName}</Text>\r\n                            \r\n                            <Text style={styles.columnNames}>PLan Description: {copy.planDescription}</Text>\r\n                            <Text style={styles.columnNames}>User ID: {copy.email}</Text>\r\n                            \r\n                            <Text style={styles.columnNames}>Copy Plan Detail Only</Text>\r\n                                <RadioButtonRN\r\n                                    data={data}\r\n                                    activeOpacity={1}\r\n                                    initial={2}\r\n                                    animationTypes={['pulse']}\r\n                                    style={{paddingLeft: 10,flexDirection: 'row'}}\r\n                                    textStyle={{paddingLeft: 10}}\r\n                                    boxStyle={{width: 70}}\r\n                                    box={false}\r\n                                    selectedBtn={(e) => {setIncludeDetail(includeDetail = e.id)}}\r\n                                    circleSize={12}\r\n                                    activeColor={'#333333'}\r\n                                    deactiveColor={'grey'}\r\n                                    textColor={'#333333'}\r\n                                />\r\n                        </View>\r\n                        <Text style={styles.TitleName}>New Plan</Text>\r\n                        <View style={styles.columnNamesContainer}>\r\n                            <Text style={styles.columnNames}>Plan Name</Text>\r\n                            <TextInput \r\n                                    placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                    placeholder=\"Name\"\r\n                                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                                    //autoCapitalize=\"none\"\r\n                                    value={null}\r\n                                    keyboardType='default'\r\n                                    onChangeText={(val) => {setPlanName(planName = val)}}\r\n                                />\r\n                            <Text style={styles.columnNames}>PLan Description</Text>\r\n                            <TextInput \r\n                                    placeholderTextColor = 'rgba(51,51,51,0.7)'\r\n                                    placeholder=\"Description\"\r\n                                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                                    //autoCapitalize=\"none\"\r\n                                    value={planDesc}\r\n                                    keyboardType='default'\r\n                                    onChangeText={(val) => {setPlanDesc(planDesc = val)}}\r\n                                />\r\n                            <Text style={styles.columnNames}>User ID: {copy.email}</Text>\r\n                            \r\n                        </View>\r\n\r\n                        <View style={styles.button}>\r\n                        \r\n                            <TouchableOpacity style={[styles.signIn,{marginRight: 2.5}]} disabled={isLoading} onPress={() => {[setIsLoading(isLoading = true), CopyNow()]}}>\r\n                                <LinearGradient\r\n                                    colors={['#72be03','#397e05']} //'#72be03','#397e05'\r\n                                    style={styles.signIn}\r\n                                    start={[0, 1]} end={[1, 0]}\r\n                                >\r\n                                    {isLoading ?\r\n                                        <ActivityIndicator size=\"large\" color={colors.icontitle}/>\r\n                                        :\r\n                                        <Text style={[styles.textSign, {color:'#fff'}]}>Copy</Text>\r\n                                    } \r\n                                </LinearGradient>\r\n                            </TouchableOpacity>\r\n\r\n                            <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {borderColor: '#333333', borderWidth: 1.5,marginLeft: 2.5}]}>\r\n                                <Text style={[styles.textSign, {color: '#333333'}]}>Cancel</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </ScrollView>\r\n                </KeyboardAvoidingView>\r\n            </View>\r\n        </View>\r\n    \r\n        </Modal>\r\n       \r\n    )\r\n}\r\n\r\nexport default CopyModal;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    ModalBackground: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(51,51,51, 0.9)'\r\n    },\r\n    Modalcontainer: {\r\n        //flex: 1,\r\n        height: height/1.3,\r\n        //borderRadius: 5,\r\n        //marginBottom: 150,\r\n        //marginTop: 150,\r\n        marginRight: 30,\r\n        marginLeft: 30,\r\n        top: '10%',\r\n        //padding: 20,\r\n        //backgroundColor: 'rgba(51,51,51,1)',\r\n        backgroundColor: 'white',\r\n       //justifyContent: 'center'\r\n    },\r\n    Colorcontainer: {\r\n        padding: 5,\r\n        /*backgroundColor: '#00BFFF',*/\r\n        //justifyContent: 'center'\r\n        textAlign: 'center'\r\n        \r\n    },\r\n    headercontainer: {\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        flexDirection: 'row',      \r\n        justifyContent: 'space-between',\r\n        \r\n    },\r\n    header: {\r\n        fontSize: 17,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        alignContent: 'center',\r\n    },\r\n    scroll: {\r\n        //marginTop: 5,\r\n        marginBottom: 5,\r\n        //paddingHorizontal: 15,\r\n    },\r\n    textInput: {\r\n        flex: 1,  \r\n        height: 40,\r\n        borderBottomWidth: 1.5,\r\n        borderBottomColor: '#989c9d',\r\n    },\r\n    TitleName: {\r\n        padding: 2.5,\r\n        paddingHorizontal: 15,\r\n        color: 'grey',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n        backgroundColor: 'lightgrey'\r\n    },\r\n    columnNamesContainer: {\r\n        paddingHorizontal: 25,\r\n    },\r\n\r\n    columnNames: {\r\n        //paddingHorizontal: 25,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        fontWeight: 'bold'\r\n    },\r\n    Copyinfo: {\r\n        //paddingHorizontal: 25,\r\n        marginTop: 5,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        //fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        //backgroundColor: 'grey',\r\n        //marginTop: 10,\r\n        margin: 10,\r\n        flexDirection: 'row'\r\n\r\n    },\r\n    signIn: {\r\n        flex: 1,\r\n\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        //alignItems: 'center',\r\n        borderRadius: 5\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n  \r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity,Modal,Dimensions,Platform } from 'react-native';\r\nimport{ AuthContext } from '../components/context';\r\n//import RadioButtonRN from 'radio-buttons-react-native';\r\n//import {LinearGradient} from 'expo-linear-gradient';\r\nimport { useTheme } from '@react-navigation/native';\r\n//import { WebView } from 'react-native-webview';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst AlertModal = ({ navigation }) => {\r\n\r\n  //let [Hide, setHide] = React.useState(true);\r\n  const { colors } = useTheme();\r\n  const [{setScreen},dataState] = React.useContext(AuthContext);\r\n    //console.log('dataState',dataState.plan)\r\n    \r\n    return(\r\n       \r\n        <Modal\r\n            animated={true}\r\n            //ref={ref => (this._modal = ref)}\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={true}\r\n            onRequestClose={() => {}}  \r\n        >\r\n       \r\n        <View style ={styles.ModalBackground}>\r\n            <View style ={styles.Modalcontainer}>\r\n\r\n           \r\n                <View style={styles.headercontainer}>\r\n                    <Text style={[styles.header,{padding: 5}]}>Census Upload</Text>\r\n                    <Text style={[styles.message,{padding: 5}]}>Are you sure you want to upload New Census?</Text>\r\n                </View>\r\n           \r\n                \r\n                <View style={styles.button}>\r\n                \r\n                    <TouchableOpacity style={[styles.signIn,{marginRight: 2.5}]} onPress={() => {[navigation.goBack(), \r\n                        setTimeout(() => {\r\n                            setScreen({Name: 'Census', Method: 'PickAndUpload'})\r\n                        }, 800)\r\n                    ]}}>\r\n                        <View style={styles.signIn}>\r\n                            <Text style={[styles.textSign, {color:'#333333'}]}>Yes</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={() => navigation.goBack()} style={[styles.signIn, {marginLeft: 2.5}]}>\r\n                        <Text style={[styles.textSign, {color: '#333333'}]}>No</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n          \r\n            </View>\r\n        </View>\r\n    \r\n        </Modal>\r\n       \r\n    )\r\n}\r\n\r\nexport default AlertModal;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    ModalBackground: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(51,51,51, 0.9)',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    Modalcontainer: {\r\n        //flex: 1,\r\n        height: height/5,\r\n        width: width/1.2,\r\n        borderRadius: 5,\r\n        //marginBottom: Platform.OS === 'ios' ? height/2.4 : height/2.52,\r\n       // marginTop: Platform.OS === 'ios' ? height/2.4 : height/2.52,\r\n        //marginRight: 30,\r\n        //marginLeft: 30,\r\n        //top: '10%',\r\n        //padding: 20,\r\n        //backgroundColor: 'rgba(51,51,51,1)',\r\n        backgroundColor: 'white',\r\n       //justifyContent: 'center'\r\n    },\r\n    headercontainer: {\r\n        marginLeft: 5,\r\n        marginRight: 5,   \r\n        flexDirection: 'column',\r\n        padding: 5,\r\n        textAlign: 'center'\r\n    },\r\n    header: {\r\n        fontSize: 18,\r\n        color: 'grey',\r\n        fontWeight: 'bold',\r\n        alignContent: 'center',\r\n    },\r\n    message: {\r\n        fontSize: 15,\r\n        color: 'grey',\r\n        //fontWeight: 'bold',\r\n        alignContent: 'center',\r\n    },\r\n    TitleName: {\r\n        padding: 2.5,\r\n        paddingHorizontal: 15,\r\n        color: 'grey',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n        backgroundColor: 'lightgrey'\r\n    },\r\n   \r\n    Copyinfo: {\r\n        //paddingHorizontal: 25,\r\n        marginTop: 5,\r\n        marginLeft: 5,\r\n        marginBottom: 5,\r\n        //fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        //backgroundColor: 'grey',\r\n        flex: 1,\r\n        margin: 10,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    signIn: {\r\n        //flex: 1,\r\n        width: 40,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        //alignItems: 'center',\r\n        borderRadius: 5\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n  \r\n  });","import React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableHighlight,Modal,Dimensions,FlatList, Platform } from 'react-native';\r\nimport{ AuthContext } from '../components/context';\r\n//import PlanTopTab from './PlandetailsTopTab'\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { Feather } from '@expo/vector-icons';\r\nconst {width,height} = Dimensions.get('window');\r\n\r\nconst MenuModal = ({ navigation }) => {\r\n  const { colors } = useTheme();\r\n  const [{IsSelected},dataState] = React.useContext(AuthContext);\r\n  let [MenuLoad, setMenuLoad] = React.useState(true);\r\n\r\n    const Time = [\r\n        {id: '0',Time: 'In 24 hours'},\r\n        {id: '1',Time: 'In 48 hours'},\r\n        {id: '2',Time: 'This Week'},\r\n        {id: '3',Time: 'All Plans'},\r\n      ];\r\n    /*\r\n    doNow = (item,index,navigation) => {\r\n     // setTimeout(() => \r\n      //{\r\n      //  if(MenuLoad === false) {\r\n       //   IsSelected(item,index,navigation,MenuLoad, setMenuLoad);\r\n       // }\r\n     // }\r\n     // , 100);\r\n        IsSelected(item,index,navigation);\r\n     \r\n    }*/\r\n\r\n      \r\n    return(\r\n       \r\n        <Modal \r\n          transparent={true} \r\n          visible={MenuLoad}\r\n          animationType={'fade'}\r\n        >\r\n        <TouchableHighlight underlayColor={'transparent'} style={{flex:1}} onPress={() => navigation.goBack()}>\r\n          <View style={styles.Modalcontainer}>\r\n           \r\n            <FlatList      \r\n                data={Time}\r\n                renderItem={({ item,index }) => <Item id={item.id} time={item.Time} item={item} index={index} /> }\r\n                keyExtractor={item => item.id}\r\n            />\r\n          </View>\r\n        </TouchableHighlight>\r\n      </Modal>\r\n       \r\n    )\r\n\r\n    function Item({ id,time,item,index }) {\r\n      return (\r\n        \r\n        <View style={{flexDirection: \"row\"}}>\r\n          <TouchableHighlight key={index} underlayColor={'transparent'} style={styles.item} onPress={() => [setMenuLoad(MenuLoad = false),IsSelected(item,index,navigation)]}>\r\n            <Text style={{color:'black'}}>{time}</Text>\r\n          </TouchableHighlight>\r\n          {dataState.Selected === index &&\r\n          <View style={styles.icon}>\r\n            <Feather name=\"check\" size={24} color=\"black\" />\r\n          </View>}\r\n        </View>\r\n      );\r\n  } \r\n}\r\n\r\n\r\n\r\nexport default MenuModal;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    Modalcontainer: {\r\n      backgroundColor:'white',\r\n      borderRadius: 5,\r\n      shadowOffset: { width: 5, height: 5 },\r\n      shadowColor: 'black',\r\n      shadowOpacity: 0.5,\r\n      elevation: 3,\r\n      position:'absolute',\r\n      top: Platform.OS === 'ios' ? 16 : 10,\r\n      right:5,\r\n      width: height > 800 ? 150 : 120,\r\n    },\r\n    icon: {\r\n      //backgroundColor:'black',\r\n      alignContent: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    item: {\r\n      //backgroundColor:'black',\r\n      padding: 10\r\n    },\r\n\r\n   \r\n  });","import React, { useEffect, useRef } from 'react';\r\nimport { Text,View,Alert, BackHandler} from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { createStackNavigator,HeaderBackButton } from '@react-navigation/stack';\r\nimport { useTheme, getFocusedRouteNameFromRoute } from '@react-navigation/native';\r\nimport{ AuthContext } from '../components/context';\r\n//import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Icon3 from 'react-native-vector-icons/Octicons';\r\nimport Icon4 from 'react-native-vector-icons/FontAwesome';\r\nimport Icon5 from 'react-native-vector-icons/AntDesign';\r\nimport { Entypo } from '@expo/vector-icons'; \r\nimport HomeScreen from './HomeScreen';\r\nimport DetailsScreen from './Menu/BookmarkScreen';\r\nimport ExploreScreen from './Menu/SettingsScreen';\r\nimport HelpScreen from './Menu/SupportScreen';\r\nimport ProfileScreen from './Menu/ProfileScreen';\r\n//import PlanDetails from './PlanDetails';\r\nimport PlanDetailsTopTab from './Plan/PlanDetailsTopTab'\r\nimport CensusScreen from './Census/CensusScreen';  //'./CensusScreen';\r\nimport reportTab from './Report/ReportTopTabScreen';\r\nimport reportList from './Report/ReportListScreen';\r\nimport Standard from './Report/ReportStandardScreen'; //'./BlankReportsScreen;\r\nimport CalculateScreen from './Calculate/CalculateScreen';\r\nimport Classes from './Classes/ClassesScreen';\r\nimport ClassesUpdate from './Classes/ClassesUpdateScreen';\r\n\r\nimport PlanListScreen from './Plan/PlanListScreen';\r\nimport PPACalculator from './PPACalculator/BlankPPACalculatorScreen';\r\nimport OwnerOnlyScreen from './OwnerOnly/BlankOwnerOnlyScreen';\r\nimport AddModal from './Census/CensusUpdateScreen';\r\nimport PlanCopy from './Plan/PlanCopyList';\r\nimport CopyModal from '../components/CopyModal';\r\nimport AlertModal from '../components/AlertModalExcel';\r\nimport moment from 'moment';\r\nimport MenuModal from '../components/MenuModal';\r\nimport Settings from '../settings.json';\r\nimport Menu, { MenuItem, MenuDivider } from 'react-native-material-menu';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst baseURL = Settings.domain;\r\n//import PlanTopTab from './PlandetailsTopTab'\r\n\r\nconst HomeStack = createStackNavigator();\r\nconst DetailsStack = createStackNavigator();\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst PlanTab = createMaterialBottomTabNavigator();\r\n\r\n\r\nconst ConfirmSave = (save, navigation, type, planId, planName, userToken, userNumber, userSponsorId, error) => {\r\n  //console.log('checkiinnnnn' , planNRA_Error);\r\n  if(error === true)\r\n  {\r\n    alert('Valid values are from 62-65. NRA less than 62 generally not allowed per Notice 2007-69.');\r\n  }\r\n  else\r\n  {\r\n   //console.log('CONFIRM ====>', planName, userToken);\r\n    let msg = \"Are you sure you want to Add New Plan?\"\r\n    if (planId) msg = \"Are you sure you want to save changes to \" + planName + \" Plan?\"\r\n    if (planName){\r\n      Alert.alert(\"Save Plan\", msg, \r\n      [{ text: \"Yes\", onPress: () => save(navigation, type, planId, userToken, userNumber, userSponsorId) }, //CalculatePlan(dataState, setScreen)\r\n      { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n      { cancelable: false }); \r\n    } else {\r\n      alert('Plan Name field is required.');\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nconst ConfirmCalculate = (dataState, setScreen) => {\r\n  Alert.alert(\"Calculate\", \"Are you sure you want to Calculate Plan?\", \r\n  [{ text: \"Yes\", onPress: () => setScreen({Name: 'Calculate', Method: 'Calculate'}) }, //CalculatePlan(dataState, setScreen)\r\n  { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n  { cancelable: false }); \r\n}\r\n\r\n\r\nconst ConfirmUpload = (setScreen) => { //dataState,setCensusData,CensusIsloading, setCensusIsloading\r\n  Alert.alert(\"Census Upload\", \"Are you sure you want to upload New Census?\", \r\n  [{ text: \"Yes\", onPress: () => setScreen({Name: 'Census', Method: 'PickAndUpload'}) } , //PickAndUpload(dataState,setCensusData,CensusIsloading, setCensusIsloading)\r\n  { text: \"No\", onPress: () => {}, style: \"cancel\" }],\r\n  { cancelable: false }); \r\n}\r\n\r\nconst EbgLink = async () => {\r\n  let webLink = 'https://www.ebgsystems.com/';\r\n  let result = await WebBrowser.openBrowserAsync(webLink);\r\n  //setresult(thisresult = result) \r\n}; \r\n\r\n\r\n\r\nfunction getHeaderTitle(route) {\r\n\r\n  const routeName = getFocusedRouteNameFromRoute(route) ?? 'Home';\r\n      //console.log(routeName)\r\n\r\n  switch (routeName) {\r\n    case 'Home':\r\n      return 'Home';\r\n    case 'Profile':\r\n      return 'My Profile';\r\n    case 'Contact':\r\n      return 'My Contacts';\r\n    case 'Setup':\r\n      return 'Setup';\r\n    case 'Help':\r\n      return 'Help';\r\n    case 'Plan Directory':\r\n      return 'Plan List';\r\n  }\r\n}\r\n\r\n\r\nfunction getPlanHeaderTitle(route, setScreen, dataState) {\r\n\r\n  const routeName = getFocusedRouteNameFromRoute(route) ?? 'Plan List';\r\n\r\n    let Method = 'Load';\r\n    if (routeName === 'Plan Details' && route.params?.screen === 'Plan Details'){\r\n      Method = 'New Plan';\r\n    } \r\n    //console.log('Check=====>', routeName, route.params?.screen);\r\n    if (!dataState[routeName]){\r\n      setScreen({Name: routeName, Method});\r\n    } else if (dataState[routeName] && dataState[routeName].PlanId != dataState.plan.planId) {\r\n      if (dataState[routeName].Name != 'Plan List' && dataState[routeName].Name != 'Report')setScreen({Name: routeName, Method});\r\n    }\r\n  switch (routeName) {\r\n    case 'Plan List':\r\n      return 'Plan List';\r\n    case 'Plan Details':\r\n      if(route.params?.screen === 'Plan Details') return 'New Plan';\r\n      return 'Plan Details';\r\n    case 'Classes':\r\n      return 'Classes';\r\n    case 'Census':\r\n      return 'Census';\r\n    case 'Report':\r\n      return 'Reports';\r\n    case 'Calculate':     \r\n      return 'Calculate';\r\n  }\r\n}\r\n\r\nfunction getPlanIconsTitle(route,navigation,colors/*,search,Plansearch*/,save,dataState,Census, setCensus,Plan, setPlan, setScreen,menu,documentType, setdocumentType,CalculateToggle, setCalculateToggle,error) {\r\n\r\n  const hideMenuXls = () =>\r\n  {\r\n    menu.current.hide(() => {\r\n      navigation.navigate('Alert modal')\r\n    });\r\n    setdocumentType(documentType = 'application/vnd.ms-excel');\r\n    //ConfirmUpload(setScreen);\r\n   \r\n    \r\n    //alert(documentType);\r\n  } \r\n  const hideMenuXlsx = () =>\r\n  { \r\n    menu.current.hide(() => {\r\n      \r\n        navigation.navigate('Alert modal')\r\n     \r\n    });\r\n    setdocumentType(documentType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n    //alert(documentType);\r\n  } \r\n  /*\r\n  const hideMenuXlsx = () =>\r\n  { \r\n    setdocumentType(documentType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n    menu.current.hide(() => {\r\n      setTimeout(() => {\r\n        ConfirmUpload(setScreen);\r\n      }, 500);\r\n    });\r\n    \r\n    //alert(documentType);\r\n  } \r\n  */\r\n\r\n  //setScreen({Name: \"Plan Details\", Method: \"ADD\"\"})\r\n  const showMenu = () => menu.current.show();\r\n\r\n  const routeName = getFocusedRouteNameFromRoute(route) ?? 'Plan List';\r\n      //console.log('checker',routeName,route.params?.screen );\r\n  switch (routeName) {\r\n    case 'Plan List': \r\n      return [<Icon.Button key={0} name=\"ios-search\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => [setPlan(Plan = !Plan)]}></Icon.Button>,//, Alert.alert('Function ' + Plan)\r\n              <Icon.Button key={1} name=\"ios-add\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => [dataState.selectedPlan=null,navigation.navigate(\"Plan Directory\", {screen: 'Plan Details', params: {screen: 'General', params: {homeClick: 'Add'}}}), setScreen({Name: \"Plan Details\", Method: \"ADD\"})]}></Icon.Button>,\r\n              <Icon5.Button key={2} name=\"filter\" size={21} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => navigation.navigate('menu')}></Icon5.Button>];//Plansearch() //navigation.setParams({plansearch: !route.params.plansearch})\r\n    case 'Plan Details':\r\n        if (route.params?.screen === 'Plan Details') return [<Icon.Button key={0} name=\"ios-save\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => ConfirmSave(save, navigation,'Add New', null, dataState.Details.planName, dataState.userToken, dataState.userNumber, dataState.userSponsorId,error)}></Icon.Button>, // Alert.alert('Save')\r\n        <Icon.Button key={1} name=\"ios-close-circle\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => navigation.navigate('Plan Directory', {screen: 'Plan List', params: {AddCancel: 'cancel'}})}></Icon.Button>]\r\n        return <Icon.Button key={0} name=\"ios-save\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() =>  ConfirmSave(save, navigation,'Edit', dataState.selectedPlan, dataState.Details.planName, dataState.userToken, dataState.userNumber, dataState.userSponsorId, error)}></Icon.Button>;  //Alert.alert('No function yet')\r\n    case 'Classes':\r\n      return <Icon.Button key={0} name=\"ios-add\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => navigation.navigate('Class Detail Entry',{State: 'addnew'})}></Icon.Button>; \r\n      case 'Census':\r\n        return [//<Icon.Button key={0} name=\"ios-search\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => setCensus(Census = !Census)}></Icon.Button>,//search() //navigation.setParams({censusSearch: !route.params.censusSearch})\r\n        //<Icon.Button key={1} name=\"md-cloud-upload\" size={25} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => ConfirmUpload(setScreen)}></Icon.Button>, //dataState, setCensusData, CensusIsloading, setCensusIsloading// Alert.alert('Upload Census')\r\n        <View key={1} style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n          <Menu \r\n            ref={menu}\r\n            button={<Icon.Button name=\"md-cloud-upload\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => showMenu()}></Icon.Button>}\r\n          >\r\n           \r\n            <MenuItem onPress={hideMenuXls} ><Icon name=\"ios-document\" size={20}>  xls</Icon> </MenuItem>\r\n            <MenuDivider />\r\n            <MenuItem onPress={hideMenuXlsx}><Icon name=\"md-document\" size={20}>  xlsx</Icon></MenuItem>\r\n          </Menu>\r\n        </View>,\r\n        <Icon.Button key={2} name=\"ios-add\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => navigation.navigate('Add',{State: 'CensusAddUser'})}></Icon.Button>]; //Alert.alert('Add')\r\n      case 'Report':\r\n        return <Icon2.Button key={0} name=\"format-list-bulleted\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => navigation.navigate(\"Report list\")}></Icon2.Button>;\r\n      case 'Calculate':\r\n  return [<Icon4.Button key={0} name=\"refresh\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => setScreen({Name: 'Calculate', Method: 'Refresh'})}></Icon4.Button>,\r\n          <Icon.Button key={1} name=\"ios-calculator\" size={20} iconStyle={{left: 5}} backgroundColor= {colors.primary} underlayColor= 'grey' onPress={() => setCalculateToggle(CalculateToggle = true)/*ConfirmCalculate(dataState,setScreen)*/}></Icon.Button>]; \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst MainTabScreen = ({navigation, route}) => {\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({ headerTitle: getHeaderTitle(route) });\r\n  }, [navigation, route]);\r\n\r\n  const { colors } = useTheme();\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      activeColor=\"#fff\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarColor: colors.primary, // #009387\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"ios-home\" color={color} size={24} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"ios-person\" color={color} size={24} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Contact\"\r\n        component={DetailsScreen}\r\n        options={{\r\n          tabBarLabel: 'contacts',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"contacts\" color={color} size={24} />\r\n          ),\r\n        }}\r\n      />\r\n      {/*\r\n      <Tab.Screen\r\n        name=\"Setup\"\r\n        component={ExploreScreen}\r\n        options={{\r\n          tabBarLabel: 'Setup',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"settings\" color={color} size={26} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Help\"\r\n        component={HelpScreen}\r\n        options={{\r\n          tabBarLabel: 'Help',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"help\" color={color} size={26} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n              event.preventDefault();\r\n              EbgLink();\r\n          }\r\n          })\r\n        }\r\n      />*/}\r\n      \r\n    </Tab.Navigator>\r\n  )\r\n};\r\n\r\n\r\nconst PlanTabScreen = ({navigation, route}) => {\r\n  const { colors } = useTheme();\r\n  const [{save, setCensusData, setScreen},dataState] = React.useContext(AuthContext);\r\n  //console.log('Allroute', route.params)\r\n  let [Plan, setPlan] = React.useState(false);\r\n  let [Census, setCensus] = React.useState(false);\r\n  let [CalculateToggle, setCalculateToggle] = React.useState(false);\r\n  let [error, set_Error] = React.useState(false);\r\n  //console.log('from main tab: ' + CalculateToggle)\r\n  let [documentType, setdocumentType] = React.useState('*/*');\r\n  const menu = useRef();\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({ headerTitle: getPlanHeaderTitle(route, setScreen, dataState),  \r\n      headerRight: () => (\r\n        <View style={{flexDirection:\"row\"}}>\r\n          {getPlanIconsTitle(route,navigation,colors/*,search,Plansearch*/,save,dataState,Census, setCensus,Plan, setPlan, setScreen,menu,documentType, setdocumentType,CalculateToggle, setCalculateToggle,error)}\r\n        </View>\r\n      ),\r\n\r\n      headerLeft: (props) => (\r\n        <HeaderBackButton\r\n          {...props}\r\n          onPress={() => { \r\n            if(route.params?.screen === 'Plan Details')\r\n            {\r\n              Alert.alert(\"Unsaved\", \"Are you sure you want to go back?\", \r\n              [{ text: \"Cancel\", onPress: () => {}, style: \"cancel\" }, \r\n              { text: \"Go Back\", onPress: () => navigation.goBack() }], //navigation.navigate('Home')\r\n              { cancelable: false }); \r\n            }\r\n            else{\r\n              navigation.goBack()\r\n            }\r\n          }}\r\n        />\r\n      ),\r\n\r\n    });\r\n  }, [navigation, route, error]);\r\n\r\n  useEffect(() => {\r\n\r\n    if(route.params?.screen === 'Plan Details')\r\n    {\r\n      const handleBackPress = () => {\r\n        Alert.alert(\r\n            \"Unsaved\",\r\n            \"Are you sure you want to go back?\",\r\n            [\r\n                {\r\n                    text: \"Cancel\",\r\n                    onPress: () => {console.log(\"Cancel Pressed\"); }, style: \"cancel\"\r\n                },\r\n                { text: \"Go Back\", onPress: () => navigation.goBack() }],\r\n            { cancelable: false }\r\n        );\r\n        return true;\r\n      }\r\n\r\n      BackHandler.addEventListener(\"hardwareBackPress\",handleBackPress);\r\n\r\n      return () => {\r\n        //?console.log('code unmounted')\r\n        BackHandler.removeEventListener(\"hardwareBackPress\",handleBackPress);\r\n        //thisbackHandler.remove();\r\n      }  \r\n    }\r\n   \r\n  }, [])\r\n  \r\n  \r\n  \r\n  return (\r\n    <PlanTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      activeColor=\"#fff\"\r\n    >\r\n      <PlanTab.Screen\r\n        name=\"Plan List\"\r\n        //component={PlanListScreen}\r\n        options={{\r\n          tabBarLabel: 'Plan List',\r\n          tabBarColor: colors.primary, // #009387\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"list-circle-sharp\" color={color} size={25} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          })\r\n        }\r\n      >\r\n         {props => <PlanListScreen {...props} PlanToggle={Plan} />}\r\n      </PlanTab.Screen>\r\n\r\n      <PlanTab.Screen\r\n        name=\"Plan Details\"\r\n        //component={PlanDetailsTopTab}\r\n        options={{\r\n          tabBarLabel: <Text style={{ fontSize: 10.5 }}>Plan Details</Text>,\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon3 name=\"file-submodule\" color={color} size={24} />\r\n          ),\r\n        }}\r\n        listeners={({ navigation }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            } else{\r\n              navigation.navigate(\"Plan Details\", {screen: 'General'});\r\n            }\r\n            \r\n          }\r\n          })\r\n        }\r\n        >\r\n            {props => <PlanDetailsTopTab {...props} error={error} set_Error={set_Error} />}\r\n      </PlanTab.Screen>\r\n\r\n      <PlanTab.Screen\r\n        name=\"Classes\"\r\n        component={Classes}\r\n        options={{\r\n          tabBarLabel: 'Classes',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"card-account-details\" color={color} size={24} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          })\r\n        }\r\n      />\r\n      \r\n      <PlanTab.Screen\r\n        name=\"Census\"\r\n        //component={CensusScreen}\r\n        options={{\r\n          tabBarLabel: 'Census',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"ios-people\" color={color} size={24} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          })\r\n        }\r\n      >\r\n         {props => <CensusScreen {...props} DocumentType={documentType} />}\r\n      </PlanTab.Screen>\r\n\r\n      <PlanTab.Screen\r\n        name=\"Calculate\"\r\n        //component={CalculateScreen}\r\n        options={{\r\n          tabBarLabel: 'Calculate',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"calculator-variant\" color={color} size={24} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          })\r\n        }\r\n      >\r\n        {props => <CalculateScreen {...props} CalculateModal={CalculateToggle} SetCalculateModal={setCalculateToggle} />}\r\n      </PlanTab.Screen>\r\n\r\n      <PlanTab.Screen\r\n        name=\"Report\"\r\n        component={Standard}\r\n        options={{\r\n          tabBarLabel: 'Report',\r\n          tabBarColor: colors.primary,\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon2 name=\"file-chart\" color={color} size={24} />\r\n          ),\r\n        }}\r\n        listeners={({ }) => ({\r\n          tabPress: event => {\r\n            if(route.params?.screen === 'Plan Details' || !dataState.selectedPlan)\r\n            {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          })\r\n        }\r\n      />\r\n        \r\n    </PlanTab.Navigator>\r\n  )\r\n};\r\n\r\n\r\n\r\nconst HomeStackScreen = ({navigation}) => {\r\n  const [{setScreen}] = React.useContext(AuthContext);\r\n  const { colors } = useTheme();\r\n  return (\r\n  <HomeStack.Navigator headerMode='screen' screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: colors.primary,\r\n            //shadowColor: 'transparent',\r\n            //elevation: 0,\r\n            //shadowOffset: { height: 0, width: 0 }\r\n          },\r\n          headerPressColorAndroid: 'transparent',\r\n          headerBackImage: ({ tintColor })=> <Entypo name=\"chevron-left\" size={25} color={tintColor} />,\r\n          headerTitleAlign: 'center',\r\n          headerBackTitleVisible: true,\r\n          //headerBackTitleStyle: { fontWeight: 'bold', },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n          fontWeight: 'bold'\r\n          }\r\n      }}>\r\n          <HomeStack.Screen name=\"Home\" component={MainTabScreen} options={{\r\n            headerLeft: () => (\r\n                <Icon.Button name=\"ios-menu\" size={25} backgroundColor= {colors.primary} onPress={() => navigation.openDrawer()}></Icon.Button>\r\n            )\r\n          }} />\r\n          <HomeStack.Screen name=\"Plan Directory\" component={PlanTabScreen} options={{\r\n            headerStyle: {\r\n              backgroundColor: colors.primary,\r\n              //shadowColor: 'transparent',\r\n              //elevation: 0,\r\n            },\r\n          }}/>\r\n          <HomeStack.Screen name=\"menu\" component={MenuModal}  options={{ \r\n              headerShown: false,\r\n              animationEnabled: false,\r\n              cardStyle: {\r\n                backgroundColor: 'transparent'\r\n              }\r\n          }}/>\r\n\r\n          <HomeStack.Screen name=\"PPA Calculator\" component={PPACalculator} />\r\n          <HomeStack.Screen name=\"Owner Only\" component={OwnerOnlyScreen} />\r\n          <HomeStack.Screen name=\"Add\" component={AddModal} options={{\r\n              title: 'Employee Information',\r\n              headerBackTitleVisible: false,\r\n              headerPressColorAndroid: 'white',\r\n          }}/>\r\n             <HomeStack.Screen name=\"Copy modal\" component={CopyModal}  options={{ \r\n              headerShown: false,\r\n              animationEnabled: false,\r\n              cardStyle: {\r\n                backgroundColor: 'transparent'\r\n              }\r\n          }}/>\r\n          <HomeStack.Screen name=\"Alert modal\" component={AlertModal}  options={{ \r\n              headerShown: false,\r\n              animationEnabled: false,\r\n              \r\n              cardStyle: {\r\n                backgroundColor: 'transparent'\r\n              }\r\n              \r\n          }}/>\r\n          <HomeStack.Screen name=\"Class Detail Entry\" component={ClassesUpdate} options={{\r\n              headerBackTitleVisible: false,\r\n              headerPressColorAndroid: 'white',\r\n          }}/>\r\n          <HomeStack.Screen name=\"Plan Duplication\" component={PlanCopy} options={{\r\n              headerBackTitleVisible: false,\r\n              headerPressColorAndroid: 'white',\r\n          }}/>\r\n\r\n        <HomeStack.Screen name=\"Report list\" component={reportList} options={{\r\n              headerBackTitleVisible: false,\r\n              headerPressColorAndroid: 'white',\r\n              headerRight: () => (\r\n                <Icon4.Button name=\"refresh\" size={25} iconStyle={{left: 5}} backgroundColor= {colors.primary} onPress={() => setScreen({Name: 'Report', Method: 'Refresh'})}></Icon4.Button> //alert('refresh')\r\n              )\r\n          }}/>\r\n\r\n  </HomeStack.Navigator>\r\n  )\r\n};\r\n\r\nexport default HomeStackScreen;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\n//import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Entypo } from '@expo/vector-icons'; \r\nimport ContactScreen from './BookmarkScreen';\r\nimport Settings from '../../settings.json';\r\n\r\nconst baseURL = Settings.domain;\r\n\r\nconst ContactStack = createStackNavigator();\r\n\r\nconst ContactStackScreen = ({navigation}) => {\r\n  \r\n  const { colors } = useTheme();\r\n  return (\r\n    <ContactStack.Navigator headerMode='screen' screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: colors.primary,\r\n            },\r\n            headerPressColorAndroid: 'transparent',\r\n            headerBackImage: ({ tintColor })=> <Entypo name=\"chevron-left\" size={25} color={tintColor} />,\r\n            headerTitleAlign: 'center',\r\n            headerBackTitleVisible: true,\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n        }}>\r\n            <ContactStack.Screen name=\"My Contact\" component={ContactScreen} options={{\r\n                headerLeft: () => (\r\n                    <Icon.Button name=\"ios-menu\" size={25} backgroundColor= {colors.primary} onPress={() => navigation.openDrawer()}></Icon.Button>\r\n                )\r\n            }} />\r\n            \r\n    </ContactStack.Navigator>\r\n  )\r\n};\r\n\r\nexport default ContactStackScreen;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\n//import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Entypo } from '@expo/vector-icons'; \r\nimport SetupScreen from './SettingsScreen';\r\nimport Settings from '../../settings.json';\r\n\r\nconst baseURL = Settings.domain;\r\n\r\nconst SetupStack = createStackNavigator();\r\n\r\nconst SetupStackScreen = ({navigation}) => {\r\n  \r\n  const { colors } = useTheme();\r\n  return (\r\n    <SetupStack.Navigator headerMode='screen' screenOptions={{\r\n            headerStyle: {\r\n              backgroundColor: colors.primary,\r\n            },\r\n            headerPressColorAndroid: 'transparent',\r\n            headerBackImage: ({ tintColor })=> <Entypo name=\"chevron-left\" size={25} color={tintColor} />,\r\n            headerTitleAlign: 'center',\r\n            headerBackTitleVisible: true,\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold'\r\n            }\r\n        }}>\r\n            <SetupStack.Screen name=\"Setup\" component={SetupScreen} options={{\r\n              headerLeft: () => (\r\n                  <Icon.Button name=\"ios-menu\" size={25} backgroundColor= {colors.primary} onPress={() => navigation.openDrawer()}></Icon.Button>\r\n              )\r\n            }} />\r\n          \r\n    </SetupStack.Navigator>\r\n  )\r\n};\r\n\r\nexport default SetupStackScreen;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport{ AuthContext } from '../../components/context';\r\n//import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Entypo } from '@expo/vector-icons'; \r\nimport ProfileScreen from './ProfileScreen';\r\nimport Settings from '../../settings.json';\r\n\r\nconst baseURL = Settings.domain;\r\n\r\nconst ProfileStack = createStackNavigator();\r\n\r\nconst ProfileStackScreen = ({navigation}) => {\r\n  \r\n  const { colors } = useTheme();\r\n  return (\r\n    <ProfileStack.Navigator headerMode='screen' screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: colors.primary,\r\n            },\r\n            headerPressColorAndroid: 'transparent',\r\n            headerBackImage: ({ tintColor })=> <Entypo name=\"chevron-left\" size={25} color={tintColor} />,\r\n            headerTitleAlign: 'center',\r\n            headerBackTitleVisible: true,\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n        }}>\r\n            <ProfileStack.Screen name=\"My Profile\" component={ProfileScreen} options={{\r\n                headerLeft: () => (\r\n                    <Icon.Button name=\"ios-menu\" size={25} backgroundColor= {colors.primary} onPress={() => navigation.openDrawer()}></Icon.Button>\r\n                )\r\n            }} />\r\n            \r\n    </ProfileStack.Navigator>\r\n  )\r\n};\r\n\r\nexport default ProfileStackScreen;\r\n","import React from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    TouchableOpacity, \r\n    Dimensions,\r\n    StyleSheet,\r\n    StatusBar,\r\n    Image\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nconst SplashScreen = ({navigation}) => {\r\n    const { colors } = useTheme();\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n          <StatusBar backgroundColor='#009387' barStyle=\"light-content\"/>\r\n        <View style={styles.header}>\r\n            <Animatable.Image \r\n                animation=\"bounceIn\"\r\n                duraton=\"1500\"\r\n            source={require('../assets/logo.png')}\r\n            style={styles.logo}\r\n            resizeMode=\"stretch\"\r\n            />\r\n        </View>\r\n        <Animatable.View \r\n            style={[styles.footer, {\r\n                backgroundColor: colors.background\r\n            }]}\r\n            animation=\"fadeInUpBig\"\r\n        >\r\n            <Text style={[styles.title, {\r\n                color: colors.text\r\n            }]}>Stay connected with everyone!</Text>\r\n            <Text style={styles.text}>Sign in with account</Text>\r\n            <View style={styles.button}>\r\n            <TouchableOpacity onPress={()=>navigation.navigate('SignInScreen')}>\r\n                <LinearGradient\r\n                    colors={['#08d4c4', '#01ab9d']}\r\n                    style={styles.signIn}\r\n                >\r\n                    <Text style={styles.textSign}>Get Started</Text>\r\n                    <MaterialIcons \r\n                        name=\"navigate-next\"\r\n                        color=\"#fff\"\r\n                        size={20}\r\n                    />\r\n                </LinearGradient>\r\n            </TouchableOpacity>\r\n            </View>\r\n        </Animatable.View>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst {height} = Dimensions.get(\"screen\");\r\nconst height_logo = height * 0.28;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#009387'\r\n  },\r\n  header: {\r\n      flex: 2,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n  },\r\n  footer: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      borderTopLeftRadius: 30,\r\n      borderTopRightRadius: 30,\r\n      paddingVertical: 50,\r\n      paddingHorizontal: 30\r\n  },\r\n  logo: {\r\n      width: height_logo,\r\n      height: height_logo\r\n  },\r\n  title: {\r\n      color: '#05375a',\r\n      fontSize: 30,\r\n      fontWeight: 'bold'\r\n  },\r\n  text: {\r\n      color: 'grey',\r\n      marginTop:5\r\n  },\r\n  button: {\r\n      alignItems: 'flex-end',\r\n      marginTop: 30\r\n  },\r\n  signIn: {\r\n      width: 150,\r\n      height: 40,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: 50,\r\n      flexDirection: 'row'\r\n  },\r\n  textSign: {\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n  }\r\n});\r\n\r\n","import React from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    TouchableOpacity, \r\n    TextInput,\r\n    Platform,\r\n    StyleSheet ,\r\n    StatusBar,\r\n    Alert,\r\n    Dimensions,\r\n    ActivityIndicator,\r\n    KeyboardAvoidingView\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\n//import { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\r\nimport { Feather as Icon } from '@expo/vector-icons';\r\nimport CheckBox from 'react-native-check-box';\r\nimport Settings from '../settings.json';\r\nimport base64 from 'base-64'\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { useTheme } from 'react-native-paper';\r\n\r\nimport { AuthContext } from '../components/context';\r\n\r\nimport Users from '../model/users';\r\nimport moment from 'moment';\r\n\r\nconst {width,height} = Dimensions.get('window')\r\nconst logoUri = './assets/save.png'\r\nconst baseURL = Settings.site;\r\nconst baseURL1 = Settings.auth;\r\nconst baseURL2 = Settings.domain;\r\nconst ver = Settings.version;\r\n\r\nconst slideUp = {\r\n  from: {\r\n    transform: [{ scaleY: 1.5 }],\r\n    width: width,\r\n    height: height/1.80,\r\n  },\r\n  to: {\r\n     transform: [{ scaleY: 1 }],\r\n    width: width,\r\n    height: height*1.85,\r\n  },\r\n};\r\n\r\nconst SignInScreen = ({navigation}) => {\r\n    //alert('width ' + width + \" \" + 'height'  + height)\r\n    const [data, setData] = React.useState({\r\n        username: '',\r\n        password: '',\r\n        check_textInputChange: false,\r\n        secureTextEntry: true,\r\n        isValidUser: true,\r\n        isValidPassword: true,\r\n        isLoading: false\r\n    });\r\n\r\n    let [isChecked, setIsChecked] = React.useState(false);\r\n\r\n    const { colors } = useTheme();\r\n\r\n    const [{ signIn }] = React.useContext(AuthContext);\r\n\r\n    let passwordInput = React.createRef();\r\n    \r\n\r\n    const textInputChange = (val) => {\r\n        if( val.trim().length >= 4 ) {\r\n            setData({\r\n                ...data,\r\n                username: val,\r\n                check_textInputChange: true,\r\n                isValidUser: true\r\n            });\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                username: val,\r\n                check_textInputChange: false,\r\n                isValidUser: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = (val) => {\r\n        if( val.trim().length >= 8 ) {\r\n            setData({\r\n                ...data,\r\n                password: val,\r\n                isValidPassword: true\r\n            });\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                password: val,\r\n                isValidPassword: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            secureTextEntry: !data.secureTextEntry\r\n        });\r\n    }\r\n\r\n    const handleValidUser = (val) => {\r\n        if( val.trim().length >= 4 ) {\r\n            setData({\r\n                ...data,\r\n                isValidUser: true\r\n            });\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                isValidUser: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const loginHandle = async (userName, password) => {\r\n       //console.log('============>>>>',userName, password);\r\n       \r\n        if ( data.username.length == 0 || data.password.length == 0 ) {\r\n            Alert.alert('Wrong Input!', 'Username or password field cannot be empty.', [\r\n                {text: 'Okay'}\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        setData({...data, isLoading: true});\r\n\r\n        let url = baseURL1 + \"/Token/Bearer?grant_type=authentication_code\";\r\n        let method = 'POST';\r\n        let headers = new Headers();\r\n        let auth = 'Basic ' + base64.encode(userName + \":\" + password)\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('src', 'CB');\r\n        headers.append('udid', Math.random().toString());\r\n        headers.append('Authorization', auth);\r\n        \r\n        \r\n       //console.log('==============> Login', url, method, headers, auth);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n       //console.log('==============> ');\r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n           //console.log(responseJson);\r\n            if(responseJson && responseJson.identityToken){\r\n                let expireAt = moment().add(1, 'days'); //moment.unix(responseJson.accessToken_expires_in).format('MM/DD/YYYY HH:MM:ss');\r\n                let info = JSON.parse(base64.decode(responseJson.identityToken));\r\n                let hasNewUpdate = false;\r\n                if (isChecked) expireAt = moment().add(5, 'days');\r\n                //console.log('EXPIREAT ========', expireAt.format('MM/DD/YYYY HH:MM:ss'));\r\n                if (info.hasNewUpdate) hasNewUpdate = info.hasNewUpdate;\r\n                //console.log('this is info', info);\r\n                \r\n                let details = {\r\n                    \"_id\": info._id,\r\n                    \"email\": info.email,\r\n                    \"firstName\": info.firstName,\r\n                    \"lastName\": info.lastName,\r\n                    \"userNumber\": info.userNumber,\r\n                    \"userSponsorId\": info.userSponsorId,\r\n                    \"apiToken\": \"bearer \" + responseJson.accessToken, //\"bearer eyd1c2VyTnVtYmVyJzoxNzE0LCd1c2VySWQnOidycmF5bXVuZG9AZWJnc3lzdGVtcy5jb20nLCd1c2VyVHlwZSc6J1AnLCd1c2VyU3RhdHVzJzonQScsJ3VzZXJTcG9uc29ySWQnOjEwMDB9\", //\r\n                    \"changePassword\": info.changePassword ? info.changePassword: false,\r\n                    \"passwordExpiry\": info.passwordExpiry ? info.passwordExpiry: moment().add(4, 'days'),\r\n                    \"isGenerated\": info.isGenerated ? info.isGenerated: false,\r\n                    \"expireAt\": expireAt,\r\n                    hasNewUpdate\r\n                }\r\n               //console.log(\"info ===>\", expireAt, moment().add(1, 'days').format('MM/DD/YYYY HH:MM:ss'), info, details);\r\n                getProfile(details);\r\n            } else {\r\n                setData({...data, isLoading: false});\r\n                Alert.alert('Invalid User!', 'Username or password is incorrect.', [\r\n                    {text: 'Okay'}\r\n                ]);\r\n                return;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setData({...data, isLoading: false});\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    const loginHandle1 = async (userName, password) => {\r\n        //const foundUser = Users.filter( item => {\r\n        //    return userName == item.username && password == item.password;\r\n        //});\r\n\r\n        //let foundUser = await signInAsync(userName, password, 'ABC123');\r\n\r\n        //console.log(foundUser);\r\n        \r\n        if ( data.username.length == 0 || data.password.length == 0 ) {\r\n            Alert.alert('Wrong Input!', 'Username or password field cannot be empty.', [\r\n                {text: 'Okay'}\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        setData({...data, isLoading: true});\r\n\r\n        let url = baseURL + '/login';\r\n        let method = 'POST';\r\n        let headers = new Headers();\r\n      \r\n        let body = JSON.stringify({\r\n            \"username\": userName,\r\n            \"password\": password\r\n        });\r\n       \r\n        headers.append('Content-Type', 'application/json');\r\n       \r\n        let req = new Request(url, {\r\n            method,\r\n            headers,\r\n            body\r\n        });\r\n\r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson && responseJson.success){\r\n                //console.log(\"LOGIN==>\", responseJson.details.apiToken);\r\n                getDefaultPlanDetails(responseJson.details)\r\n            } else{\r\n                setData({...data, isLoading: false});\r\n                Alert.alert('Invalid User!', 'Username or password is incorrect.', [\r\n                    {text: 'Okay'}\r\n                ]);\r\n                return;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setData({...data, isLoading: false});\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    const getProfile = async (userDetails) => {\r\n        let url = baseURL1 + '/Profile?info=profilepic';\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', userDetails.apiToken);\r\n        headers.append('src', 'CB');\r\n        headers.append('udid', Math.random().toString());\r\n        //console.log('getProfile >>>>>>>>>>> ',url,method,headers);\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n        \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson){\r\n               //console.log('Profile Found');\r\n            } else {\r\n               //console.log('Profile Not Found.');\r\n            }\r\n            \r\n            userDetails.profilePic = responseJson.profilePic\r\n            getDefaultPlanDetails(userDetails);\r\n        })\r\n        .catch((error) => {\r\n            userDetails.profilePic = \"\";\r\n           //console.log(\"Connection Error\", error.message);\r\n            getDefaultPlanDetails(userDetails);\r\n        });\r\n    }\r\n\r\n    const getDefaultPlanDetails = async (userDetails) => {\r\n        let url = baseURL2 + '/Plans/PlanInit';\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', userDetails.apiToken);\r\n        //headers.append('Host', 'rpc-api-test.azurewebsites.net');\r\n        //console.log('EndPoint: ', url);\r\n        //console.log('Method:', method);\r\n        //console.log('Headers: ', headers);//,userDetails\r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            //console.log('Response: ',responseJson);\r\n            if (responseJson.isSuccess && responseJson.obj){\r\n                getDefaultDropdown(userDetails, responseJson.obj);\r\n            } else {\r\n                setData({...data, isLoading: false});\r\n                //console.log(responseJson.message);\r\n                Alert.alert(\"Auth Error\", responseJson.message);\r\n                return null;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setData({...data, isLoading: false});\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return null;\r\n        });\r\n    }\r\n\r\n    const getDefaultDropdown = async (userDetails, planDetails) => {\r\n        let url = baseURL2 + '/CBLookUp/GetCBLookupTables';\r\n        let method = 'GET';\r\n        let headers = new Headers();\r\n        \r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', userDetails.apiToken);\r\n       \r\n        let req = new Request(url, {\r\n            method,\r\n            headers\r\n        });\r\n    \r\n        await fetch(req)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson.isSuccess && responseJson.obj){\r\n                signIn(userDetails, planDetails, responseJson.obj);\r\n            } else {\r\n                setData({...data, isLoading: false});\r\n                Alert.alert(\"Data Error\", responseJson.message);\r\n                return null;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setData({...data, isLoading: false});\r\n            Alert.alert(\"Connection Error\", error.message);\r\n            return null;\r\n        });\r\n    }\r\n\r\n\r\n    const register = async () => {\r\n        let reportLink = 'http://therpc.com/register';\r\n        let result = await WebBrowser.openBrowserAsync(reportLink);\r\n        //setresult(thisresult = result)\r\n    };    \r\n\r\n\r\n    const chkKeepMeSignedIn = () =>\r\n    {       \r\n        setIsChecked(isChecked = !isChecked);\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={[styles.container,{backgroundColor: colors.accent}]}>\r\n            <StatusBar barStyle=\"light-content\"/>\r\n            <View style = {styles.logocontainer}>\r\n                {/* RPC LOGO and bounce animation*/}\r\n                <View style = {styles.height}>\r\n                    <Animatable.Image \r\n                        animation='bounceIn'\r\n                        duration= {2000}\r\n                        style = {styles.logo} source = {require('../assets/logo.png')} />\r\n                \r\n\r\n                    {/* text and bounce animation*/}\r\n                    <Animatable.Text \r\n                        animation='bounceIn'\r\n                        duration= {2000}\r\n                        style = {styles.title}>Client Login</Animatable.Text>\r\n                </View>\r\n                {/*\r\n                <View style = {styles.Header}>\r\n                    <Animatable.Image \r\n                    animation='fadeInDownBig'\r\n                    duration= {1000}\r\n                    style={styles.img}  source = {require(logoUri)} />  \r\n                </View>\r\n                */}\r\n\r\n                {/* header green circle and slide animation*/}\r\n      \r\n                <Animatable.View\r\n                    animation= {slideUp}\r\n                    duration= {1000}\r\n                    //direction=\"reverse\"\r\n                    delay= {500}\r\n                    style = {{ position: 'absolute' }}                   \r\n                >            \r\n                    <LinearGradient \r\n                    colors={['#397e05','#72be03']}\r\n                    style = {styles.header}         \r\n                    >\r\n                    </LinearGradient>\r\n                </Animatable.View>\r\n             \r\n            </View>\r\n            \r\n            {/* login design and function */}\r\n            <Animatable.View \r\n                animation=\"fadeInUpBig\"\r\n                delay= {1000}\r\n                style={styles.formContainer}>\r\n\r\n                    <View style={[styles.InputStyle,{borderBottomColor: colors.Logintext}]}>\r\n                        <Icon name= \"mail\" size={30} color={colors.Logintext} />\r\n                        <TextInput\r\n                            style={[styles.input,{color: colors.Logintext}]}\r\n                            placeholder = \"Email\"\r\n                            placeholderTextColor = {colors.placeholder}\r\n                            returnKeyType=\"next\"\r\n                            autoCapitalize=\"none\"\r\n                            onChangeText={(val) => textInputChange(val)}\r\n                            onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\r\n                            onSubmitEditing={() => passwordInput.current.focus()}\r\n                            keyboardType=\"email-address\"\r\n                            />\r\n                    </View>\r\n                    { data.isValidUser ? null : \r\n                        <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n                            <Text style={[styles.errorMsg,{color: colors.Logintext}]}>Email must be 4 characters long.</Text>\r\n                        </Animatable.View>\r\n                    }\r\n                    <View style={[styles.InputStyle,{borderBottomColor: colors.Logintext}]}>\r\n                        <Icon name= \"lock\" size={30} color={colors.Logintext} />\r\n                        <TextInput \r\n                            style={[styles.input,{color: colors.Logintext}]}\r\n                            placeholder = \"Password\"\r\n                            placeholderTextColor = {colors.placeholder}\r\n                            returnKeyType=\"go\"\r\n                            secureTextEntry={data.secureTextEntry ? true : false}\r\n                            ref={passwordInput} \r\n                            autoCapitalize=\"none\"\r\n                            onChangeText={(val) => handlePasswordChange(val)}\r\n                            onSubmitEditing={() => {loginHandle( data.username, data.password )}}\r\n                        />     \r\n                        <TouchableOpacity onPress = {updateSecureTextEntry}>\r\n                            {data.secureTextEntry ? \r\n                                <Icon name=\"eye-off\" size={30} color={colors.Logintext}/>\r\n                                :\r\n                                <Icon name=\"eye\" size={30} color={colors.Logintext}/>\r\n                            }\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    { data.isValidPassword ? null : \r\n                        <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n                            <Text style={[styles.errorMsg,{color: colors.Logintext}]}>Password must be 8 characters long.</Text>\r\n                        </Animatable.View>\r\n                    }\r\n                    <View style={styles.checkBox}>\r\n                        <TouchableOpacity style={styles.checkBox} onPress={() => {chkKeepMeSignedIn()}}>\r\n                            <CheckBox \r\n                            style={styles.checkStyle}\r\n                            checkedCheckBoxColor ={'#72be03'}\r\n                            uncheckedCheckBoxColor\t= {colors.Logintext}\r\n                            isChecked={isChecked} onClick = {()=> chkKeepMeSignedIn()}/>\r\n\r\n                            <Text style = {[styles.checkInput,{color: colors.Logintext}]}> Keep me signed in</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    \r\n                    \r\n                    <TouchableOpacity style = {styles.buttoncontainer} disabled = {data.isLoading}\r\n                        onPress={() => {loginHandle( data.username, data.password )}}\r\n                    >\r\n                        <LinearGradient \r\n                        colors={['#72be03','#397e05']}\r\n                        style = {styles.gradient}\r\n                        start={[0, 1]} end={[1, 0]}\r\n                        >\r\n                        { data.isLoading ?\r\n                            <ActivityIndicator size=\"large\" color={colors.icontitle}/>\r\n                            :\r\n                            <Text style = {styles.buttonText}>LOGIN</Text>\r\n                        }    \r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n\r\n                    \r\n                    <View style ={styles.lastoptions}>\r\n                        <TouchableOpacity>\r\n                            <Text style = {[styles.lastText,{color: colors.Logintext}]}>Cannot login?</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <Text style = {[styles.lastText,{color: colors.Logintext}]}>|</Text>\r\n\r\n                        <TouchableOpacity\r\n                            onPress={() => register()/*navigation.navigate('SignUpScreen')*/}\r\n                        >\r\n                            <Text style = {[styles.lastText,{color: colors.Logintext}]}>Register Today</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View>\r\n                        <Text style = {[{textAlign: 'center', marginTop:40, color: colors.Logintext, fontSize:11}]}>{ver}</Text>\r\n                    </View>\r\n            </Animatable.View>\r\n\r\n        </KeyboardAvoidingView>\r\n    );\r\n};\r\n\r\nexport default SignInScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        //backgroundColor: '#465558',\r\n        //overflow: 'hidden'\r\n    },\r\n    logocontainer: {\r\n        position: 'relative',\r\n        alignItems: 'center',\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        //position: 'absolute'\r\n        \r\n    },\r\n    height: {\r\n        zIndex: 3,\r\n        elevation: 10,\r\n        height: height/6.5,\r\n    },\r\n    logo: {\r\n        //marginTop: Platform.OS === 'ios' ? 10 : 0,\r\n        resizeMode: 'contain',\r\n        height: height > 800 ? height/7.5 : height/6.5,\r\n        //height: height/.5,\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: height > 800 ? 35 : 25,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        //zIndex: 3,\r\n        //elevation: 9\r\n    },        \r\n    header: {\r\n        resizeMode: 'contain',\r\n        width: width,\r\n        height: height+100,\r\n        transform: [{ scaleX: 1.6 }],\r\n        //transform: [{ scaleY: 1 }],\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: 2, height: 2 },\r\n        shadowOpacity:  0.5,\r\n        shadowRadius: 5,\r\n        elevation: 10,\r\n        zIndex: 2,\r\n        //padding: '30%',\r\n        borderRadius: width/2,\r\n        //borderRadius: height > 800 ? 300 : 190,\r\n        //borderBottomLeftRadius: 200,\r\n        //borderBottomRightRadius: 200,\r\n        \r\n        //overflow: 'hidden'\r\n       \r\n    },\r\n    \r\n    formContainer: {\r\n        flex: 2,\r\n        padding: 30,\r\n        marginTop: 35,\r\n        //zIndex: 1,\r\n        //overflow: 'visible',\r\n        //backgroundColor: '#465558',\r\n        \r\n    },\r\n    InputStyle: {\r\n        paddingTop: 15,\r\n        borderBottomColor: '#989c9d',\r\n        borderBottomWidth: 1.5,\r\n        flexDirection: \"row\",\r\n        //zIndex: 0\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        alignSelf: 'stretch',\r\n        height: 30,\r\n        marginBottom: 5,\r\n        marginLeft: 5,\r\n        fontSize: 15,\r\n        //color: \"#989c9d\",  \r\n        //fontWeight: 'bold',\r\n    },\r\n    checkBox: {\r\n        flexDirection:'row',\r\n        marginBottom: 10,\r\n        marginTop: 5,\r\n        //color: \"#989c9d\",\r\n        //borderColor: \"#989c9d\",\r\n    },\r\n    checkStyle: {\r\n        marginLeft: 2.5,\r\n    },\r\n    checkInput: {\r\n        fontSize: 13,\r\n        //color: \"#989c9d\",  \r\n        fontWeight: 'bold',\r\n        marginTop: 2.5,\r\n        marginLeft: 2.5,\r\n    },\r\n    buttoncontainer: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 2, height: 2 },\r\n        shadowOpacity:  0.5,\r\n        shadowRadius: 5,\r\n        elevation: 5,\r\n        //overflow: 'hidden'\r\n    },\r\n    gradient: {\r\n        flex: 1,\r\n        paddingVertical: 25,\r\n        justifyContent: 'center',\r\n        borderRadius: 5,\r\n        //overflow: 'hidden'   \r\n        \r\n    },\r\n    buttonText: {\r\n        height: 25,\r\n        textAlign: 'center',\r\n        color: \"white\",\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        overflow: 'hidden'\r\n    },\r\n   \r\n    lastoptions: {\r\n        flexDirection: 'row',\r\n        marginTop: 5,\r\n        justifyContent: 'space-evenly',   \r\n    },\r\n    lastText: {\r\n        //color: \"#989c9d\",\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n    },\r\n    errorMsg: {\r\n        //color: '#FFFFFF',\r\n        fontSize: 14,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    Button, \r\n    TouchableOpacity, \r\n    Dimensions,\r\n    TextInput,\r\n    Platform,\r\n    StyleSheet,\r\n    ScrollView,\r\n    StatusBar\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { useTheme } from 'react-native-paper';\r\nconst {width,height} = Dimensions.get('window')\r\n\r\nconst slideUp = {\r\n    from: {\r\n      width: width,\r\n      height: height*1.95,\r\n    },\r\n    to: {\r\n      width: width,\r\n      height: height/2.5,\r\n    },\r\n  };\r\n\r\nconst SignInScreen = ({navigation}) => {\r\n\r\n    const [data, setData] = React.useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        username: '',\r\n        phone:'',\r\n        password: '',\r\n        confirm_password: '',\r\n        promocode:'',\r\n        check_firstNameInputChange: false,\r\n        check_lastNameInputChange: false,\r\n        check_userNameInputChange: false,\r\n        check_phoneInputChange: false,\r\n        check_promoCodeInputChange: false,\r\n        secureTextEntry: true,\r\n        confirm_secureTextEntry: true,\r\n    });\r\n\r\n    const { colors } = useTheme();\r\n\r\n    const textInputChange = (val, field) => {\r\n        if( val.length !== 0 ) {\r\n            switch(field) {\r\n                case 'firstname':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        firstname: val,\r\n                        check_firstNameInputChange: true\r\n                    });\r\n                    break;\r\n                case 'lastname':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        lastname: val,\r\n                        check_lastNameInputChange: true\r\n                    });\r\n                    break;\r\n                case 'username':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        username: val,\r\n                        check_userNameInputChange: true\r\n                    });\r\n                    break;\r\n                case 'phone':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        phone: val,\r\n                        check_phoneInputChange: true\r\n                    });\r\n                break;\r\n                case 'promocode':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        promocode: val,\r\n                        check_promoCodeInputChange: true\r\n                    });\r\n                    break;\r\n                default:\r\n                  // code block\r\n            }\r\n        } else {\r\n            switch(field) {\r\n                case 'firstname':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        firstname: val,\r\n                        check_firstNameInputChange: false\r\n                    });\r\n                    break;\r\n                case 'lastname':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        lastname: val,\r\n                        check_lastNameInputChange: false\r\n                    });\r\n                    break;\r\n                case 'username':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        username: val,\r\n                        check_userNameInputChange: false\r\n                    });\r\n                    break;\r\n                case 'phone':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        phone: val,\r\n                        check_phoneInputChange: false\r\n                    });\r\n                break;\r\n                case 'promocode':\r\n                    // code block\r\n                    setData({\r\n                        ...data,\r\n                        promocode: val,\r\n                        check_promoCodeInputChange: false\r\n                    });\r\n                    break;\r\n                default:\r\n                  // code block\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            password: val\r\n        });\r\n    }\r\n\r\n    const handleConfirmPasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            confirm_password: val\r\n        });\r\n    }\r\n\r\n    const updateSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            secureTextEntry: !data.secureTextEntry\r\n        });\r\n    }\r\n\r\n    const updateConfirmSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            confirm_secureTextEntry: !data.confirm_secureTextEntry\r\n        });\r\n    }\r\n\r\n    return (\r\n      <View style={[styles.container, {backgroundColor: colors.accent}]}>\r\n          <StatusBar barStyle=\"light-content\"/>\r\n          <View style = {styles.logocontainer}>\r\n            \r\n            <View style = {styles.height}>\r\n                <Animatable.Image \r\n                    animation='bounceIn'\r\n                    duration= {2000}\r\n                style = {styles.logo} source = {require('../assets/logo.png')} />\r\n                \r\n                <Animatable.Text\r\n                    animation='bounceIn'\r\n                    duration= {2000}\r\n                style={styles.text_sub}>Free 7-day trial for first-time users</Animatable.Text>\r\n                <Animatable.Text \r\n                    animation='bounceIn'\r\n                    duration= {2000}\r\n                style={styles.text_header}>Register Now!</Animatable.Text>\r\n            \r\n            </View>\r\n\r\n            <Animatable.View  \r\n                animation= {slideUp}\r\n                duration= {1000}\r\n                direction=\"reverse\"\r\n                delay= {500}\r\n            style = {{ position: 'absolute'}}  >\r\n                <LinearGradient \r\n                    colors={['#397e05','#72be03']}\r\n                    style = {styles.header}         \r\n                    >\r\n                </LinearGradient>\r\n            </Animatable.View>\r\n        </View>\r\n        \r\n\r\n\r\n        <Animatable.View \r\n            animation=\"fadeInUpBig\"\r\n            delay= {1000}\r\n            style={styles.footer}\r\n        >\r\n            <ScrollView>\r\n            \r\n            <Text style={[styles.text_footer,{color: colors.Logintext}]}>First Name</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <FontAwesome \r\n                    name=\"user-o\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Your First Name\"\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => textInputChange(val, 'firstname')}\r\n                />\r\n                {data.check_firstNameInputChange ? \r\n                <Animatable.View\r\n                    animation=\"bounceIn\"\r\n                >\r\n                    <Feather \r\n                        name=\"check-circle\"\r\n                        color=\"#72be03\"\r\n                        size={20}\r\n                    />\r\n                </Animatable.View>\r\n                : null}\r\n            </View>\r\n\r\n            <Text style={[styles.text_footer, { marginTop: 35,color: colors.Logintext }]}>Last Name</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <FontAwesome \r\n                    name=\"user-o\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Your Last Name\"\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => textInputChange(val, 'lastname')}\r\n                />\r\n                {data.check_lastNameInputChange ? \r\n                <Animatable.View\r\n                    animation=\"bounceIn\"\r\n                >\r\n                    <Feather \r\n                        name=\"check-circle\"\r\n                        color=\"#72be03\"\r\n                        size={20}\r\n                    />\r\n                </Animatable.View>\r\n                : null}\r\n            </View>\r\n\r\n            <Text style={[styles.text_footer, { marginTop: 35,color: colors.Logintext }]}>Email(Username)</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <Feather\r\n                    name=\"mail\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Your Email\"\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => textInputChange(val, 'username')}\r\n                />\r\n                {data.check_userNameInputChange ? \r\n                <Animatable.View\r\n                    animation=\"bounceIn\"\r\n                >\r\n                    <Feather \r\n                        name=\"check-circle\"\r\n                        color=\"#72be03\"\r\n                        size={20}\r\n                    />\r\n                </Animatable.View>\r\n                : null}\r\n            </View>\r\n            \r\n            { /* phone and ext*/}\r\n            <View style={{ flexDirection: 'row'}}>\r\n                <Text style={[styles.text_footer, { marginTop: 35, width: '60%', marginRight: 5,color: colors.Logintext }]}>Phone</Text>\r\n                <Text style={[styles.text_footer, { marginTop: 35, width: '30%',color: colors.Logintext  }]}>Ext</Text>\r\n            </View>\r\n            <View style={{ flexDirection: 'row'}}>\r\n            \r\n                <View style={[styles.action2,{borderColor: colors.Logintext}]}>\r\n                    <Feather\r\n                        name=\"phone\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                        //style={{ flexDirection: 'row'}}\r\n                    />\r\n                    <TextInput \r\n                        placeholderTextColor = {colors.placeholder}\r\n                        placeholder=\"Your Phone Number\"\r\n                        style={[styles.textInput,{color: colors.Logintext}]}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(val) => textInputChange(val, 'phone')}\r\n                    />\r\n                    {data.check_phoneInputChange ? \r\n                    <Animatable.View\r\n                        animation=\"bounceIn\"\r\n                    >\r\n                        <Feather \r\n                            name=\"check-circle\"\r\n                            color=\"#72be03\"\r\n                            size={20}\r\n                        />\r\n                    </Animatable.View>\r\n                    : null}\r\n                </View>\r\n                \r\n                \r\n                <View style={[styles.action3,{borderColor: colors.Logintext}]}>\r\n                    <Feather \r\n                        name=\"hash\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    <TextInput \r\n                        placeholderTextColor = {colors.placeholder}\r\n                        placeholder=\"Your Ext\"\r\n                        style={[styles.textInput,{color: colors.Logintext}]}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(val) => textInputChange(val)}\r\n                    />\r\n                    {data.check_textInputChange ? \r\n                    <Animatable.View\r\n                        animation=\"bounceIn\"\r\n                    >\r\n                        <Feather \r\n                            name=\"check-circle\"\r\n                            color=\"#72be03\"\r\n                            size={20}\r\n                        />\r\n                    </Animatable.View>\r\n                    : null}\r\n                </View>\r\n             \r\n            </View> \r\n            { /* phone and ext end*/}\r\n\r\n            { /* company name and code */}\r\n            <View style={{ flexDirection: 'row'}}>\r\n                <Text style={[styles.text_footer, { marginTop: 35, width: '60%', marginRight: 5,color: colors.Logintext }]}>Company</Text>\r\n                <Text style={[styles.text_footer, { marginTop: 35, width: '30%',color: colors.Logintext  }]}>Code</Text>\r\n            </View>\r\n            <View style={{ flexDirection: 'row'}}>\r\n            \r\n                <View style={[styles.action2,{borderColor: colors.Logintext}]}>\r\n                    <Feather\r\n                        name=\"home\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                        //style={{ flexDirection: 'row'}}\r\n                    />\r\n                    <TextInput \r\n                        placeholderTextColor = {colors.placeholder}\r\n                        placeholder=\"Your Company\"\r\n                        style={[styles.textInput,{color: colors.Logintext}]}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(val) => textInputChange(val, 'phone')}\r\n                    />\r\n                    {data.check_phoneInputChange ? \r\n                    <Animatable.View\r\n                        animation=\"bounceIn\"\r\n                    >\r\n                        <Feather \r\n                            name=\"check-circle\"\r\n                            color=\"#72be03\"\r\n                            size={20}\r\n                        />\r\n                    </Animatable.View>\r\n                    : null}\r\n                </View>\r\n                \r\n                \r\n                <View style={[styles.action3,{borderColor: colors.Logintext}]}>\r\n                    <Feather \r\n                        name=\"slack\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    <TextInput \r\n                        placeholderTextColor = {colors.placeholder}\r\n                        placeholder=\"Your Code\"\r\n                        style={[styles.textInput,{color: colors.Logintext}]}\r\n                        autoCapitalize=\"none\"\r\n                        onChangeText={(val) => textInputChange(val)}\r\n                    />\r\n                    {data.check_textInputChange ? \r\n                    <Animatable.View\r\n                        animation=\"bounceIn\"\r\n                    >\r\n                        <Feather \r\n                            name=\"check-circle\"\r\n                            color=\"#72be03\"\r\n                            size={20}\r\n                        />\r\n                    </Animatable.View>\r\n                    : null}\r\n                </View>\r\n             \r\n            </View> \r\n            { /* company name and code end*/}\r\n\r\n            <Text style={[styles.text_footer, {\r\n                marginTop: 35,color: colors.Logintext\r\n            }]}>Password</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <Feather \r\n                    name=\"lock\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Your Password\"\r\n                    secureTextEntry={data.secureTextEntry ? true : false}\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => handlePasswordChange(val)}\r\n                />\r\n                <TouchableOpacity\r\n                    onPress={updateSecureTextEntry}\r\n                >\r\n                    {data.secureTextEntry ? \r\n                    <Feather \r\n                        name=\"eye-off\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    :\r\n                    <Feather \r\n                        name=\"eye\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    }\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={[styles.text_footer, {\r\n                marginTop: 35,color: colors.Logintext\r\n            }]}>Confirm Password</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <Feather \r\n                    name=\"lock\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Confirm Your Password\"\r\n                    secureTextEntry={data.confirm_secureTextEntry ? true : false}\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => handleConfirmPasswordChange(val)}\r\n                />\r\n                <TouchableOpacity\r\n                    onPress={updateConfirmSecureTextEntry}\r\n                >\r\n                    {data.secureTextEntry ? \r\n                    <Feather \r\n                        name=\"eye-off\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    :\r\n                    <Feather \r\n                        name=\"eye\"\r\n                        color={colors.Logintext}\r\n                        size={20}\r\n                    />\r\n                    }\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={[styles.text_footer, { marginTop: 35,color: colors.Logintext }]}>Promo Code</Text>\r\n            <View style={[styles.action,{borderColor: colors.Logintext}]}>\r\n                <FontAwesome \r\n                    name=\"ticket\"\r\n                    color={colors.Logintext}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholderTextColor = {colors.placeholder}\r\n                    placeholder=\"Your Promo Code\"\r\n                    style={[styles.textInput,{color: colors.Logintext}]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => textInputChange(val, 'promocode')}\r\n                />\r\n                {data.check_promoCodeInputChange ? \r\n                <Animatable.View\r\n                    animation=\"bounceIn\"\r\n                >\r\n                    <Feather \r\n                        name=\"check-circle\"\r\n                        color=\"#72be03\"\r\n                        size={20}\r\n                    />\r\n                </Animatable.View>\r\n                : null}\r\n            </View>\r\n\r\n            <View style={styles.textPrivate}>\r\n                <Text style={styles.color_textPrivate}>\r\n                    By signing up you agree to our\r\n                </Text>\r\n                <Text style={[styles.color_textPrivate, {fontWeight: 'bold'}]}>{\" \"}Terms of service</Text>\r\n                <Text style={styles.color_textPrivate}>{\" \"}and</Text>\r\n                <Text style={[styles.color_textPrivate, {fontWeight: 'bold'}]}>{\" \"}Privacy policy</Text>\r\n            </View>\r\n            <View style={styles.button}>\r\n                <TouchableOpacity\r\n                    style={styles.signIn}\r\n                    onPress={() => {}}\r\n                >\r\n                <LinearGradient\r\n                    colors={['#72be03','#397e05']}\r\n                    style={styles.signIn}\r\n                    start={[0, 1]} end={[1, 0]}\r\n                >\r\n                    <Text style={[styles.textSign, {\r\n                        color:'#fff'\r\n                    }]}>Register</Text>\r\n                </LinearGradient>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.goBack()}\r\n                    style={[styles.signIn, {\r\n                        borderColor: '#72be03',\r\n                        borderWidth: 1.5,\r\n                        marginTop: 15\r\n                    }]}\r\n                >\r\n                    <Text style={[styles.textSign, {\r\n                        color: '#72be03'\r\n                    }]}>Cancel</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            </ScrollView>\r\n        </Animatable.View>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default SignInScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1, \r\n      //backgroundColor: '#465558',\r\n    },\r\n    row1: {\r\n        //flex: 1,\r\n        flexDirection: \"row\",\r\n        width:100\r\n    },\r\n\r\n    logocontainer: {\r\n        alignItems: 'center',\r\n        flexGrow: 0.2,\r\n       justifyContent: 'center',\r\n    },\r\n    height: {\r\n        zIndex: 2,\r\n        elevation: 10\r\n    },\r\n    logo: {\r\n        width: width/3,\r\n        height: height/9.5,\r\n        //alignItems: 'center',\r\n        alignSelf: 'center',\r\n        marginTop: Platform.OS === 'ios' ? 10 : 2.25,\r\n\r\n    },\r\n    text_sub: {\r\n        color: '#fff',\r\n        //fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n\r\n    },\r\n    text_header: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fontSize: 30,\r\n    },\r\n    /*\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 20\r\n    },\r\n    */\r\n   header: {\r\n        width: width,\r\n        height: height+100,\r\n        //height: height/3,\r\n        transform: [{ scaleX: 1.6 }],\r\n        borderRadius: 190,\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: 2, height: 2 },\r\n        shadowOpacity:  0.5,\r\n        shadowRadius: 5,\r\n        elevation: 10,\r\n    },\r\n    footer: {\r\n        ///flex: Platform.OS === 'ios' ? 3 : 5,\r\n        flex: 3,\r\n        marginTop: 10,\r\n        //backgroundColor: '#465558',\r\n        //borderTopLeftRadius: 30,\r\n        //borderTopRightRadius: 30,\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 30\r\n    },\r\n    \r\n    text_footer: {\r\n        //color: '#989c9d',\r\n        fontSize: 18\r\n    },\r\n    action: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1.5,\r\n        //borderBottomColor: '#989c9d',\r\n        paddingBottom: 5\r\n    },\r\n    action2: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        width: '60%',\r\n        borderBottomWidth: 1.5,\r\n        //borderBottomColor: '#989c9d',\r\n        paddingBottom: 5,\r\n        marginRight: 5,\r\n    },\r\n    action3: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        width: '40%',\r\n        borderBottomWidth: 1.5,\r\n        //borderBottomColor: '#989c9d',\r\n        paddingBottom: 5\r\n    },\r\n\r\n    textInput: {\r\n        flex: 1,\r\n        //marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n        paddingLeft: 10,\r\n        //color: '#989c9d',\r\n        \r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 50\r\n        \r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n        \r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    textPrivate: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 20\r\n    },\r\n    color_textPrivate: {\r\n        color: 'grey'\r\n    }\r\n  });\r\n","import React from 'react';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport SplashScreen from './SplashScreen';\r\nimport SignInScreen from './SignInScreen';\r\nimport SignUpScreen from './SignUpScreen';\r\n\r\nconst RootStack = createStackNavigator();\r\n\r\nconst RootStackScreen = ({navigation}) => (\r\n    <RootStack.Navigator headerMode='none'>\r\n        {/*<RootStack.Screen name=\"SplashScreen\" component={SplashScreen}/>*/}\r\n        <RootStack.Screen name=\"SignInScreen\" component={SignInScreen}/>\r\n        <RootStack.Screen name=\"SignUpScreen\" component={SignUpScreen}/>\r\n    </RootStack.Navigator>\r\n);\r\n\r\nexport default RootStackScreen;","const DefaultPlan = {\r\n  \"planId\": 0,\r\n  \"planName\": \"\",\r\n  \"companyName\": \"\",\r\n  \"planDescription\": \"A Combination 401(k) / Profit Sharing / Cash Balance Plan\",\r\n  \"planEffDate\": \"2020-01-01T00:00:00\",\r\n  \"retAge\": 65,\r\n  \"minAge\": 21.0,\r\n  \"minSvcType\": 3,\r\n  \"minSvcMonths\": 12,\r\n  \"minSvcHours\": null,\r\n  \"vestingSchedYear1\": 0,\r\n  \"vestingSchedYear2\": 0,\r\n  \"vestingSchedYear3\": 100,\r\n  \"excludedYears_18\": true,\r\n  \"excludedYears_Eff\": true,\r\n  \"hcetopPaid\": false,\r\n  \"include401k\": true,\r\n  \"preparedBy\": \"\",\r\n  \"cbInterestCredit\": 5.0,\r\n  \"overrideSegRate1\": 3.64,\r\n  \"overrideSegRate2\": 5.21,\r\n  \"overrideSegRate3\": 5.94,\r\n  \"preRetMortality\": false,\r\n  \"mortalityTableCombined\": true,\r\n  \"fundingForLumpSum\": true,\r\n  \"aePreRetInt\": 5.0,\r\n  \"aePostRetMortalityTable\": \"1994 Group Annuity Reserving Unisex Proj to 2002\",\r\n  \"aePostRetInt\": 5.0,\r\n  \"taPreRetInt\": 8.5,\r\n  \"taPostRetMort\": \"1984 Unisex\",\r\n  \"taPostRetInt\": 8.5,\r\n  \"totOwnerCost\": 100.0,\r\n  \"totNonOwnerCost\": 2.0,\r\n  \"catchUp\": \"Y\",\r\n  \"includeMatch\": 0,\r\n  \"matchPercent1\": 0.0,\r\n  \"matchLimit1\": 0.0,\r\n  \"matchPercent2\": 0.0,\r\n  \"matchLimit2\": 0.0,\r\n  \"matchPercent3\": 0.0,\r\n  \"matchLimit3\": 0.0,\r\n  \"isSafeHarborContrib\": false,\r\n  \"exclusions\": 0,\r\n  \"fileName\": null,\r\n  \"dateCreated\": \"0001-01-01T00:00:00\",\r\n  \"dateModified\": null,\r\n  \"isPBGCCovered\": false,\r\n  \"imputeDisparity\": false,\r\n  \"userNo\": 0,\r\n  \"active\": null,\r\n  \"planCalculated\": null,\r\n  \"ageDefinition\": \"N\",\r\n  \"isCashBalanceWithExcemption\": null,\r\n  \"minTaxBracket\": 15.0,\r\n  \"maxTaxBracket\": 34.0,\r\n  \"yearOfParticipationForNRA\": 5,\r\n  \"sponsorId\": 0,\r\n  \"includeDefInEmployerCost\": false,\r\n  \"psRetAge\": 65,\r\n  \"entryDate\": \"SA\",\r\n  \"entity\": \"C\"\r\n};\r\n\r\nexport default DefaultPlan;","const DropDown = {\r\n    \"yearOfParticipationForNRA\": [\r\n        {\r\n            \"label\": \"0\",\r\n            \"value\": 0\r\n        },\r\n        {\r\n            \"label\": \"1\",\r\n            \"value\": 1\r\n        },\r\n        {\r\n            \"label\": \"2\",\r\n            \"value\": 2\r\n        },\r\n        {\r\n            \"label\": \"3\",\r\n            \"value\": 3\r\n        },\r\n        {\r\n            \"label\": \"4\",\r\n            \"value\": 4\r\n        },\r\n        {\r\n            \"label\": \"5\",\r\n            \"value\": 5\r\n        }\r\n    ],\r\n    \"psRetAge\": [\r\n        {\r\n            \"label\": \"62\",\r\n            \"value\": 62\r\n        },\r\n        {\r\n            \"label\": \"63\",\r\n            \"value\": 63\r\n        },\r\n        {\r\n            \"label\": \"64\",\r\n            \"value\": 64\r\n        },\r\n        {\r\n            \"label\": \"65\",\r\n            \"value\": 65\r\n        }\r\n    ],\r\n    \"minAge\": [\r\n        {\r\n            \"label\": \"0\",\r\n            \"value\": 0.0\r\n        },\r\n        {\r\n            \"label\": \"18\",\r\n            \"value\": 18.0\r\n        },\r\n        {\r\n            \"label\": \"18.5\",\r\n            \"value\": 18.5\r\n        },\r\n        {\r\n            \"label\": \"19\",\r\n            \"value\": 19.0\r\n        },\r\n        {\r\n            \"label\": \"19.5\",\r\n            \"value\": 19.5\r\n        },\r\n        {\r\n            \"label\": \"20\",\r\n            \"value\": 20.0\r\n        },\r\n        {\r\n            \"label\": \"20.5\",\r\n            \"value\": 20.5\r\n        },\r\n        {\r\n            \"label\": \"21\",\r\n            \"value\": 21.0\r\n        }\r\n    ],\r\n    \"minSvcMonths\": [\r\n        {\r\n            \"label\": \"0\",\r\n            \"value\": 0\r\n        },\r\n        {\r\n            \"label\": \"3\",\r\n            \"value\": 3\r\n        },\r\n        {\r\n            \"label\": \"6\",\r\n            \"value\": 6\r\n        },\r\n        {\r\n            \"label\": \"9\",\r\n            \"value\": 9\r\n        },\r\n        {\r\n            \"label\": \"12\",\r\n            \"value\": 12\r\n        },\r\n        {\r\n            \"label\": \"24\",\r\n            \"value\": 24\r\n        }\r\n    ],\r\n    \"entryDate\": [\r\n        {\r\n            \"label\": \"PYB Only\",\r\n            \"value\": \"PYB\"\r\n        },\r\n        {\r\n            \"label\": \"Semi-Annual\",\r\n            \"value\": \"SA\"\r\n        },\r\n        {\r\n            \"label\": \"Quarterly\",\r\n            \"value\": \"Q\"\r\n        },\r\n        {\r\n            \"label\": \"Monthly\",\r\n            \"value\": \"M\"\r\n        },\r\n        {\r\n            \"label\": \"Immediate\",\r\n            \"value\": \"I\"\r\n        }\r\n    ],\r\n    \"entity\": [\r\n        {\r\n            \"label\": \"Regular Corporation ('C' - Corp)\",\r\n            \"value\": \"C\"\r\n        },\r\n        {\r\n            \"label\": \"Sole Proprietorship/Partnership\",\r\n            \"value\": \"S\"\r\n        }\r\n    ],\r\n    \"aePostRetMortalityTable\": [\r\n        {\r\n            \"label\": \"2020 Applicable Mortality\",\r\n            \"value\": \"2020 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2019 Applicable Mortality\",\r\n            \"value\": \"2019 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2018 Applicable Mortality\",\r\n            \"value\": \"2018 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2017 Applicable Mortality\",\r\n            \"value\": \"2017 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2016 Applicable Mortality\",\r\n            \"value\": \"2016 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2015 Applicable Mortality\",\r\n            \"value\": \"2015 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2014 Applicable Mortality\",\r\n            \"value\": \"2014 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"1994 UnInsured Pensioner Male\",\r\n            \"value\": \"1994 UnInsured Pensioner Male\"\r\n        },\r\n        {\r\n            \"label\": \"1994 UnInsured Pensioner Female\",\r\n            \"value\": \"1994 UnInsured Pensioner Female\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Unisex Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Unisex Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Male Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Male Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Female Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Female Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1990 Unisex\",\r\n            \"value\": \"1990 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1986 Unisex\",\r\n            \"value\": \"1986 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1984 Unisex\",\r\n            \"value\": \"1984 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Individual Annuity Male\",\r\n            \"value\": \"1983 Individual Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Individual Annuity Female\",\r\n            \"value\": \"1983 Individual Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Group Annuity Male\",\r\n            \"value\": \"1983 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Group Annuity Female\",\r\n            \"value\": \"1983 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Individual Annuity Male\",\r\n            \"value\": \"1971 Individual Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Individual Annuity Female\",\r\n            \"value\": \"1971 Individual Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Group Annuity Male\",\r\n            \"value\": \"1971 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Group Annuity Female\",\r\n            \"value\": \"1971 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1960 Group Annuity Male\",\r\n            \"value\": \"1960 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1960 Group Annuity Female\",\r\n            \"value\": \"1960 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1951 Group Annuity Male\",\r\n            \"value\": \"1951 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1951 Group Annuity Female\",\r\n            \"value\": \"1951 Group Annuity Female\"\r\n        }\r\n    ],\r\n    \"taPostRetMort\": [\r\n        {\r\n            \"label\": \"2020 Applicable Mortality\",\r\n            \"value\": \"2020 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2019 Applicable Mortality\",\r\n            \"value\": \"2019 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2018 Applicable Mortality\",\r\n            \"value\": \"2018 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2017 Applicable Mortality\",\r\n            \"value\": \"2017 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2016 Applicable Mortality\",\r\n            \"value\": \"2016 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2015 Applicable Mortality\",\r\n            \"value\": \"2015 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"2014 Applicable Mortality\",\r\n            \"value\": \"2014 Applicable Mortality\"\r\n        },\r\n        {\r\n            \"label\": \"1994 UnInsured Pensioner Male\",\r\n            \"value\": \"1994 UnInsured Pensioner Male\"\r\n        },\r\n        {\r\n            \"label\": \"1994 UnInsured Pensioner Female\",\r\n            \"value\": \"1994 UnInsured Pensioner Female\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Unisex Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Unisex Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Male Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Male Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1994 Group Annuity Reserving Female Proj to 2002\",\r\n            \"value\": \"1994 Group Annuity Reserving Female Proj to 2002\"\r\n        },\r\n        {\r\n            \"label\": \"1990 Unisex\",\r\n            \"value\": \"1990 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1986 Unisex\",\r\n            \"value\": \"1986 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1984 Unisex\",\r\n            \"value\": \"1984 Unisex\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Individual Annuity Male\",\r\n            \"value\": \"1983 Individual Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Individual Annuity Female\",\r\n            \"value\": \"1983 Individual Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Group Annuity Male\",\r\n            \"value\": \"1983 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1983 Group Annuity Female\",\r\n            \"value\": \"1983 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Individual Annuity Male\",\r\n            \"value\": \"1971 Individual Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Individual Annuity Female\",\r\n            \"value\": \"1971 Individual Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Group Annuity Male\",\r\n            \"value\": \"1971 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1971 Group Annuity Female\",\r\n            \"value\": \"1971 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1960 Group Annuity Male\",\r\n            \"value\": \"1960 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1960 Group Annuity Female\",\r\n            \"value\": \"1960 Group Annuity Female\"\r\n        },\r\n        {\r\n            \"label\": \"1951 Group Annuity Male\",\r\n            \"value\": \"1951 Group Annuity Male\"\r\n        },\r\n        {\r\n            \"label\": \"1951 Group Annuity Female\",\r\n            \"value\": \"1951 Group Annuity Female\"\r\n        }\r\n    ],\r\n    \"calculationRequestStatus\": [\r\n        {\r\n            \"label\": \"Request Received\",\r\n            \"value\": \"Q\"\r\n        },\r\n        {\r\n            \"label\": \"Processing\",\r\n            \"value\": \"P\"\r\n        },\r\n        {\r\n            \"label\": \"Done Calculation\",\r\n            \"value\": \"D\"\r\n        },\r\n        {\r\n            \"label\": \"Test Report Generation\",\r\n            \"value\": \"R\"\r\n        },\r\n        {\r\n            \"label\": \"Failed\",\r\n            \"value\": \"F\"\r\n        },\r\n        {\r\n            \"label\": \"Completed\",\r\n            \"value\": \"C\"\r\n        }\r\n    ],\r\n    \"reportRequestStatus\": [\r\n        {\r\n            \"label\": \"Request Received\",\r\n            \"value\": \"Q\"\r\n        },\r\n        {\r\n            \"label\": \"Processing\",\r\n            \"value\": \"P\"\r\n        },\r\n        {\r\n            \"label\": \"Failed\",\r\n            \"value\": \"F\"\r\n        },\r\n        {\r\n            \"label\": \"Completed\",\r\n            \"value\": \"C\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport default DropDown;","import React, { useEffect } from 'react';\r\nimport { View, ActivityIndicator,Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { \r\n  NavigationContainer, \r\n  DefaultTheme as NavigationDefaultTheme,\r\n  DarkTheme as NavigationDarkTheme\r\n} from '@react-navigation/native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport { \r\n  Provider as PaperProvider, \r\n  DefaultTheme as PaperDefaultTheme,\r\n  DarkTheme as PaperDarkTheme \r\n} from 'react-native-paper';\r\nimport moment from 'moment';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Icon2 from 'react-native-vector-icons/Ionicons';\r\nimport Settings from './settings.json';\r\nimport { DrawerContent } from './screens/DrawerContent';\r\nimport HomeStackScreen from './screens/MainTabScreen';\r\nimport SetupStackScreen from './screens/Menu/SetupStackScreen';\r\nimport ContactStackScreen from './screens/Menu/ContactStackScreen';\r\nimport ProfileStackScreen from './screens/Menu/ProfileStatckScreen';\r\nimport SupportScreen from './screens/Menu/SupportScreen';\r\nimport SettingsScreen from './screens/Menu/SettingsScreen';\r\nimport BookmarkScreen from './screens/Menu/BookmarkScreen';\r\nimport ProfileScreen from './screens/Menu/ProfileScreen';\r\nimport { AuthContext } from './components/context';\r\nimport RootStackScreen from './screens/RootStackScreen';\r\nimport { colors } from 'react-native-elements';\r\nimport DefaultPlan from './model/defaultPlan';\r\nimport DefaultDropdown from './model/dropDown';\r\nimport { enableScreens } from 'react-native-screens';\r\nconst baseURL = Settings.domain;\r\nconst Drawer = createDrawerNavigator();\r\nenableScreens(false);\r\n\r\nconst App = () => {\r\n  // const [isLoading, setIsLoading] = React.useState(true);\r\n  // const [userToken, setUserToken] = React.useState(null); \r\n\r\n  let [isDarkTheme, setIsDarkTheme] = React.useState(true);\r\n\r\n  //for search\r\n  //let [open, setopen] = React.useState(false);\r\n  //let [Planopen, setPlanopen] = React.useState(false);\r\n\r\n  const samplePlanData = [\r\n    {planId:10, planName:\"Gregory Folse DDS LLC d/b/a Mission Dental\", noOfEE:'125', retAge: 65, userNameOnly: \"Lorraine Dorsa\", email: \"ldorsa@aegispension.com\", preparedBy: \"Lorraine Dorsa, FCA, MAAA, MSPA, EA, CEBS\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:2, planName:\"Valued Client of Alan Hughes\", noOfEE:2, retAge: 65, userNameOnly: \"Dina Hamad\", email: \"dhamad@rpsi.org\", preparedBy: \"Dina Hamad\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:3, planName:\"Dr. Cotugno\", noOfEE:1, retAge: 62, userNameOnly: \"Christopher Paterna\", email: \"cpaterna@compass-cg.com\", preparedBy: \"Christopher Paterna\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:4, planName:\"Colony Pharmacy - Combo CB\", noOfEE:3, retAge: 65, userNameOnly: \"Jerry Filipski\", email: \"Jerry.Filipski@Ascensus.com\", preparedBy: \"Robin Weingast\", planEffDate: \"1/1/2019\", dateCreated:\"6/22/2020\", dateModified: \"6/22/2020\", planType:\"Cash Balance\"},\r\n    {planId:5, planName:\"D’Ambrosio Medical Group\", noOfEE:11, retAge: 65, userNameOnly: \"Mark Swedelson\", email: \"mds@gsapension.com\", preparedBy: \"Mark D. Swedelson, CPA\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:6, planName:\"Cardiac Consultants of Central Georgia\", noOfEE:16, retAge: 65, userNameOnly: \"Ellen Quinlan\", email: \"ellen@thepensionstudio.com\", preparedBy: \"\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:7, planName:\"Bay Ridge Surgical\", noOfEE:6, retAge: 65, userNameOnly: \"Jerry Filipski\", email: \"Jerry.Filipski@Ascensus.com\", preparedBy: \"Robin Weingast\", planEffDate: \"1/1/2021\", dateCreated:\"6/23/2020\", dateModified: \"6/23/2020\", planType:\"Cash Balance\"},\r\n    {planId:8, planName:\"Colony Pharmacy - CB Stand Alone\", noOfEE:3, retAge: 65, userNameOnly: \"Jerry Filipski\", email: \"Jerry.Filipski@Ascensus.com\", preparedBy: \"Robin Weingast\", planEffDate: \"1/1/2019\", dateCreated:\"6/22/2020\", dateModified: \"6/22/2020\", planType:\"Cash Balance\"},\r\n    \r\n  ];\r\n\r\n  const censusData = [\r\n    {id:1, color:\"#FF4500\", icon:\"https://bootdey.com/img/Content/avatar/avatar1.png\", dateOfBirth: \"08/01/1968\", dateOfHire: \"08/01/2001\", workHours: 1000, age: 46, sex:\"F\", name: \"Alice Brown\", tags:['Past Serv: 12', 'W-2 Earnings: 31,265.00', 'Catch Up? Yes', 'Class Code: B']},\r\n    {id:2, color:\"#87CEEB\", icon:\"https://bootdey.com/img/Content/avatar/avatar2.png\", dateOfBirth: \"12/01/1943\", dateOfHire: \"08/01/2001\", workHours: 1000, age: 71, sex:\"F\", name: \"Barbara Bush\", tags:['Past Serv: 12', 'W-2 Earnings: 62,247.00', 'Catch Up? Yes', 'Class Code: B']}, \r\n    {id:3, color:\"#4682B4\", icon:\"https://bootdey.com/img/Content/avatar/avatar3.png\", dateOfBirth: \"12/01/1967\", dateOfHire: \"01/01/1996\", workHours: 1000, age: 47, sex:\"F\", name: \"Dorothy Deloitte\", tags:['Is PR? Yes', 'Past Serv: 18', 'W-2 Earnings: 73,829.00', 'Catch Up? Yes', 'High Comp: Yes', 'Class Code: C', 'Deferral Override: 10%']}, \r\n    {id:4, color:\"#6A5ACD\", icon:\"https://bootdey.com/img/Content/avatar/avatar4.png\", dateOfBirth: \"07/01/1952\", dateOfHire: \"01/01/1996\", workHours: 1000, age: 62, sex:\"M\", own: 100, name: \"Frank B. Deloitte\", tags:['Is PR? Yes', '100% Own', 'Past Serv: 18', 'W-2 Earnings: 255,000.00', 'Catch Up? Yes', 'High Comp: Yes', 'Class Code: A', 'Deferral Override: $17,500']}, \r\n    {id:5, color:\"#FF69B4\", icon:\"https://bootdey.com/img/Content/avatar/avatar5.png\", dateOfBirth: \"03/29/1966\", dateOfHire: \"12/03/2003\", workHours: 1000, age: 49, name: \"Gertrude Cody\", tags:['Past Serv: 10', 'W-2 Earnings: 64,347.00', 'Catch Up? Yes', 'Class Code: B']},\r\n    {id:6, color:\"#00BFFF\", icon:\"https://bootdey.com/img/Content/avatar/avatar6.png\", dateOfBirth: \"07/01/1967\", dateOfHire: \"07/01/1999\", workHours: 1000, age: 47, sex:\"M\", name: \"Jackie Smith\", tags:['Past Serv: 15', 'W-2 Earnings: 30,517.00', 'Catch Up? Yes', 'Class Code: B']},\r\n    {id:7, color:\"#00FFFF\", icon:\"https://bootdey.com/img/Content/avatar/avatar1.png\", dateOfBirth: \"03/01/1981\", dateOfHire: \"10/01/2006\", workHours: 1000, age: 34, sex:\"F\", name: \"Marge Johnson\", tags:['Past Serv: 7', 'W-2 Earnings: 34,510.00', 'Catch Up? Yes', 'Class Code: B']},\r\n    {id:8, color:\"#20B2AA\", icon:\"https://bootdey.com/img/Content/avatar/avatar2.png\", dateOfBirth: \"10/01/1976\", dateOfHire: \"04/01/2004\", workHours: 1000, age: 38, sex:\"F\", name: \"Nanette Dougherty\", tags:['Past Serv: 10', 'W-2 Earnings: 75,299.00', 'Catch Up? Yes','High Comp: Yes', 'Class Code: B']},\r\n    {id:9, color:\"#191970\", icon:\"https://bootdey.com/img/Content/avatar/avatar3.png\", dateOfBirth: \"07/01/1968\", dateOfHire: \"11/01/1998\", workHours: 1000, age: 46, sex:\"F\", name: \"Vivian Greene\", tags:['Past Serv: 15', 'W-2 Earnings: 47,260.00', 'Catch Up? Yes', 'Class Code: B']},\r\n  ];\r\n\r\n  let [planData, setPlanData] = React.useState(samplePlanData);\r\n\r\n  const initialDataState = {\r\n    isLoading: true,\r\n    userName: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userNumber: null,\r\n    userSponsorId: null,\r\n    userToken: null,\r\n    isDarkTheme: true,\r\n    screen: null,\r\n    \"Plan List\": null,\r\n    \"Plan Details\": {Name: 'Plan Details', Method: 'New Plan'},\r\n    Classes: {Name: 'Classes', Method: 'Load'},\r\n    Census: {Name: 'Census', Method: 'Load'},\r\n    Report: null,\r\n    Calculate: {Name: 'Calculate', Method: 'Load'},\r\n    planData,\r\n    plan: {},\r\n    Details: {},\r\n    DetailsFetchedData: {}, // for 401K and Cashbalance\r\n    NewOverrideSegRatesNew: null,\r\n    DefaultPlan,\r\n    DefaultDropdown,\r\n    //Array: array,\r\n    SavePlanId: null,\r\n    Is401kChecked: true,\r\n    //search: false,\r\n    //plansearch: false,\r\n    //Balance: {},\r\n    //General: {},\r\n    selectedPlan: null,\r\n    selectedPlanName: null, \r\n    censusUpload: false,\r\n    Selected: 0,\r\n    MenuCurrent: null,\r\n    MenuResponse: false,\r\n    classEdited: null,\r\n    classAdded: null,\r\n    classData: null,\r\n    censusEdited: null,\r\n    censusAdded: null,\r\n    censusData,\r\n    profilePic: null,\r\n    censusDropDownData: [],\r\n  };\r\n\r\n  const CustomDefaultTheme = {\r\n    ...NavigationDefaultTheme,\r\n    ...PaperDefaultTheme,\r\n    colors: {\r\n      ...NavigationDefaultTheme.colors,\r\n      ...PaperDefaultTheme.colors,\r\n      primary: '#0e6b0e',//'#145E04',//'#2b5329',//'#0e6b0e',//'#089000',//'#0a5d00',//'#5A8D2E',//'#31533a', //'#225216', //shade of green for header '#009432', \r\n      secondary: '#063b00',//'#106424','#303808',//\r\n      tertiary: '#4C8619',\r\n      accent: '#f1f2f6', //white for login/signup\r\n      //surface: '',\r\n      icon: '#72be03',//'#72be03',//'#8ece16', //for home '#6ab04c',\r\n      //icondark: '#218c74', //for home\r\n      iconDes: '#ffffff',  //for home\r\n      icontitle: '#0c5100', //for home '#55c595'\r\n      plan: '#6ab04c', //for plan\r\n      planDes: '#5e7074',  //for plan\r\n      plantitle: '#ffffff', //for plan\r\n      plansub: '#55c595', //for plan \r\n      plandate: '#ffffff', //for plan\r\n      linearlight: '#e5e9ec', // gradient '#465558',\r\n      linearDark: '#B6C5CD',//'#796f83', //'#459d08',  // gradient '#333333',\r\n      background: '#ffffff', //white\r\n      text: '#333333', //dark grey\r\n      textGreen: '#488a6a',\r\n      textLight: 'grey',\r\n      textDark: '#72be03',\r\n      iconLight: '#ffffff',\r\n      email: '#219bda',\r\n      Logintext: 'rgba(51,51,51,0.8)',\r\n      placeholder: 'rgba(51,51,51,0.7)', //'#e5e9ec', //\r\n      imgBackground: '#959595',\r\n      imgBorder: '#e2e2e2'\r\n    }\r\n  }\r\n  \r\n  const CustomDarkTheme = {\r\n    ...NavigationDarkTheme,\r\n    ...PaperDarkTheme,\r\n    colors: {\r\n      ...NavigationDarkTheme.colors,\r\n      ...PaperDarkTheme.colors,\r\n      primary: '#333333', //dark for header\r\n      secondary: '#575f54',\r\n      tertiary: '#333333',\r\n      accent: '#465558', //shade of grey for login/signup\r\n      icon: '#72be03', //'#82b53f', //'#09a798',//'#d2f131' ,//'#97cc3b', //'#72be03', //for home\r\n      //icondark: '#465558', //for home\r\n      iconDes: '#333333', //'#262626', //'#333333',  //for home\r\n      icontitle: '#72be03', //'#82b53f', //'#72be03', //for home\r\n      \r\n      plan: '#72bf04', //for plan 900c3f '#72bf04'\r\n      planDes: '#ffffff',  //for plan\r\n      plantitle: '#333333', //for plan\r\n      plansub: '#989c9d', //for plan\r\n      plandate: '#333333', //for plan\r\n      linearlight: '#e5e9ec',//'#796f83', // gradient\r\n      linearDark: '#796f83',//'#668ecf', // gradient\r\n      background: '#333333', //dark grey\r\n      text: '#ffffff', //white\r\n      textGreen: '#72be03',\r\n      textLight: '#e5e9ec',\r\n      textDark: '#72be03',\r\n      iconLight: '#e5e9ec',\r\n      Logintext: '#989c9d',\r\n      email: '#219bda',\r\n      placeholder: 'rgba(255,255,255,0.5)',\r\n      imgBackground: '#959595',\r\n      imgBorder: '#ffffff'\r\n    }\r\n  }\r\n\r\n  const theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\r\n  const dataReducer = (prevState, action) => {\r\n    switch( action.type ) {\r\n      case 'RETRIEVE_TOKEN': \r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          firstName: action.firstName,\r\n          lastName: action.lastName,\r\n          userToken: action.token,\r\n          userNumber: action.userNumber,\r\n          userSponsorId: action.userSponsorId,\r\n          profilePic: action.profilePic,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGIN': \r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          firstName: action.firstName,\r\n          lastName: action.lastName,\r\n          userToken: action.token,\r\n          userNumber: action.userNumber,\r\n          userSponsorId: action.userSponsorId,\r\n          profilePic: action.profilePic,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGOUT': \r\n        return {\r\n          ...prevState,\r\n          userName: null,\r\n          firstName: null,\r\n          lastName: null,\r\n          portrait: null,\r\n          userToken: null,\r\n          isLoading: false,\r\n        };\r\n      case 'REGISTER': \r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          firstName: action.firstName,\r\n          lastName: action.lastName,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case 'APPDEFAULTS': \r\n      return {\r\n        ...prevState,\r\n        DefaultPlan : action.defaultPlanDetails,\r\n        DefaultDropdown: action.defaultDropdown,\r\n        //SavePlanId: action.newId\r\n      };  \r\n      case 'SCREEN': \r\n        return {\r\n          ...prevState,\r\n          screen: action.Data,\r\n        };\r\n      case 'SCREENINIT': \r\n        return {\r\n          ...prevState,\r\n          \"Plan Details\": action.planDetails,\r\n          Classes: action.classes,\r\n          Census: action.census,\r\n          Calculate: action.calculate\r\n        };\r\n      case 'SCREENPlanList': \r\n        return {\r\n          ...prevState,\r\n          \"Plan List\": action.Data,\r\n        };\r\n      case 'SCREENPlanDetails': \r\n        return {\r\n          ...prevState,\r\n          \"Plan Details\": action.Data,\r\n        };\r\n      case 'SCREENClass': \r\n        return {\r\n          ...prevState,\r\n          Classes: action.Data,\r\n        };\r\n      case 'SCREENCensus': \r\n        return {\r\n          ...prevState,\r\n          Census: action.Data,\r\n        };\r\n      case 'SCREENReports': \r\n        return {\r\n          ...prevState,\r\n          Report: action.Data,\r\n        };  \r\n      case 'SCREENCalculate': \r\n        return {\r\n          ...prevState,\r\n          Calculate: action.Data,\r\n        };  \r\n      case 'SAVE': \r\n        return {\r\n          ...prevState,\r\n          planData: action.planData,\r\n          SavePlanId: action.newId\r\n        };\r\n      case 'DELETE': \r\n        return {\r\n          ...prevState,\r\n          planData: action.newArr,\r\n          //SavePlanId: action.newId\r\n        };\r\n      case 'PLAN': \r\n        return {\r\n          ...prevState,\r\n          planData: action.Data,\r\n          //SavePlanId: action.newId\r\n        };  \r\n      case 'CENSUS': \r\n        return {\r\n          ...prevState,\r\n          censusData: action.Data,\r\n          //SavePlanId: action.newId\r\n        }; \r\n      case 'PLANID': \r\n        return {\r\n          ...prevState,\r\n          selectedPlan: action.PlanId,\r\n          selectedPlanName: action.PlanName,\r\n          //SavePlanId: action.newId\r\n        };  \r\n      case 'Menu': \r\n        return {\r\n          ...prevState,\r\n          Selected: action.index,\r\n          MenuCurrent: action.MenuName,\r\n          MenuResponse: action.Response\r\n          //SavePlanId: action.newId\r\n        };  \r\n      case 'ClassADD': \r\n        return {\r\n          ...prevState,\r\n          classAdded: action.NewInfo\r\n        };  \r\n      case 'ClassEdit': \r\n        return {\r\n          ...prevState,\r\n          classEdited: action.EditInfo\r\n        };  \r\n      case 'CensusADD': \r\n        return {\r\n          ...prevState,\r\n          censusAdded: action.NewUserInfo\r\n        };  \r\n      case 'CensusEdit': \r\n        return {\r\n          ...prevState,\r\n          censusEdited: action.EditUserInfo\r\n        };\r\n      case 'SetDetails': \r\n        return {\r\n          ...prevState,\r\n          DetailsFetchedData: action.Data\r\n        };  \r\n      case 'NewOverrideSegRatesNew': \r\n        return {\r\n          ...prevState,\r\n          NewOverrideSegRatesNew: action.RatesNew\r\n        };  \r\n      case 'SetProfilePic': \r\n        return {\r\n          ...prevState,\r\n          profilePic: action.url\r\n        };  \r\n      case 'SetDropdownData': \r\n        return {\r\n          ...prevState,\r\n          censusDropDownData: action.data\r\n        };  \r\n\r\n        /*\r\n      case 'OPEN': \r\n        return {\r\n          ...prevState,\r\n          search: action.open\r\n        };\r\n      case 'PLANOPEN': \r\n        return {\r\n          ...prevState,\r\n          plansearch: action.Planopen\r\n        };\r\n        */\r\n    }\r\n  };\r\n\r\n  const [dataState, dispatch] = React.useReducer(dataReducer, initialDataState);\r\n\r\n  const authContext = React.useMemo(() => ({\r\n    signIn: async(foundUser, defaultPlanDetails, defaultDropdown) => {\r\n      const token = foundUser.apiToken;\r\n      const id = foundUser.email; \r\n      const firstName = foundUser.firstName;\r\n      const lastName = foundUser.lastName;\r\n      const profilePic = foundUser.profilePic;\r\n      const userNumber = foundUser.userNumber;\r\n      const userSponsorId = foundUser.userSponsorId;\r\n      let appDefaults = { defaultPlanDetails, defaultDropdown }\r\n     //console.log('API TOKEN ===============================>', userNumber, userSponsorId, token);\r\n      //foundUser.token = token;\r\n      try {\r\n        await AsyncStorage.setItem('userProfile', JSON.stringify(foundUser));\r\n        await AsyncStorage.setItem('appDefaults', JSON.stringify(appDefaults));\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'LOGIN', id, token, firstName, lastName, userNumber, userSponsorId, profilePic });\r\n      if (defaultPlanDetails && defaultDropdown){\r\n        dispatch({ type: 'APPDEFAULTS', defaultPlanDetails, defaultDropdown });\r\n      }\r\n      \r\n    },\r\n    signOut: async() => {\r\n      try {\r\n        await AsyncStorage.removeItem('userProfile');\r\n        await AsyncStorage.removeItem('appDefaults');\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'LOGOUT' });\r\n    },\r\n    signUp: () => {\r\n      \r\n    },\r\n    toggleTheme: () => {\r\n      saveTheme();\r\n    },\r\n    Delete: (index) => {\r\n      let newArr = planData\r\n      newArr.splice(index,1);\r\n      //console.log('new',newArr.length)\r\n      dispatch({ type: 'DELETE', newArr});\r\n    },\r\n    initScreen: (planId)=>{\r\n      let planDetails = {Name: \"Plan Details\", Method: 'Load', PlanId: planId};\r\n      let classes = {Name: \"Classes\", Method: 'Load', PlanId: planId};\r\n      let census = {Name: \"Census\", Method: 'Load', PlanId: planId};\r\n      let calculate = {Name: \"Calculate\", Method: 'Load', PlanId: planId};\r\n      dispatch({ type: 'SCREENINIT', planDetails, classes, census, calculate});\r\n    },\r\n    setScreen: (Data) => {\r\n      //console.log('SET SCREEN CALLED =============================>', Data);\r\n      if (Data){\r\n        Data.PlanId = dataState.plan.planId;\r\n        switch (Data.Name) {\r\n          case 'Plan List':\r\n            dispatch({ type: 'SCREENPlanList', Data});\r\n            break;\r\n          case 'Plan Details':\r\n            dispatch({ type: 'SCREENPlanDetails', Data});\r\n            break;\r\n          case 'Classes':\r\n            dispatch({ type: 'SCREENClass', Data});\r\n            break;\r\n          case 'Census':\r\n            dispatch({ type: 'SCREENCensus', Data});\r\n            break;\r\n          case 'Report':\r\n            dispatch({ type: 'SCREENReports', Data});\r\n            break;\r\n          case 'Calculate':\r\n            //alert(JSON.stringify(Data));\r\n            dispatch({ type: 'SCREENCalculate', Data});\r\n            break;     \r\n        }\r\n      }\r\n      dispatch({ type: 'SCREEN', Data});\r\n      //console.log('MY SCREEN CALCULATE====>', dataState.screenCalculate);\r\n      //console.log('SET SCREEN DATA =============================>', dataState.Screen);\r\n    },\r\n    save: (navigation, type, planId, userToken, userNumber, userSponsorId) => {\r\n     //console.log('==========DATA STATE============>',userSponsorId, userNumber);\r\n\r\n      //if (!dataState.Details.minSvcType) dataState.Details.minSvcType = DefaultPlan.minSvcType;\r\n      //if (!dataState.Details.sponsorId) dataState.Details.sponsorId = userSponsorId;\r\n      //if (!dataState.Details.userNo) dataState.Details.userNo = userNumber;\r\n\r\n      if (planId && type != 'Add New'){\r\n          dataState.Details.planId = planId; \r\n       }\r\n       // reformat plan effectivity date and value of hceTopPaid\r\n       dataState.Details.planEffDate = moment(dataState.Details.planEffDate).format('YYYY-MM-DDT00:00:00');\r\n       dataState.Details.hceTopPaid = dataState.Details.hceTopPaid == 1 ? true : false;\r\n      //console.log('=====CHECK DETAILS==>',userToken, dataState.Details);\r\n      addEditPlan(navigation, planId, userToken, type);\r\n      \r\n      /*\r\n      //planData.length = total of current number of objects in the array\r\n      let newId = planData.length + 1\r\n      Alert.alert(\"Update\",\"Total index: \" + newId)\r\n      //const obj = [{ id: newId,noOfEE: newId, name: \"Blank\"}]\r\n      const obj = { planId: newId,noOfEE: newId, planName: \"Blank\"}\r\n      \r\n      setPlanData(planData = [obj, ...planData]) //planData.concat(obj)\r\n      //console.log(JSON.stringify(planData, null, 2))\r\n      navigation.navigate('Plan Directory', {screen: 'Plan List'})\r\n      \r\n      dispatch({ type: 'SAVE', planData,newId});\r\n      */\r\n    },\r\n    updatePlanData: (Data) => {\r\n      dispatch({ type: 'PLAN', Data});\r\n    },\r\n    setCensusData: (Data) => {\r\n      dispatch({ type: 'CENSUS', Data});\r\n    },\r\n    setPlanID: (PlanId, PlanName) => {\r\n      dispatch({ type: 'PLANID', PlanId, PlanName});\r\n    },\r\n    IsSelected: (item,index,navigation) => {\r\n      //console.log('from memo',item.Time);\r\n      let MenuName = item.Time;\r\n      let Response = true;\r\n      navigation.goBack();\r\n      dispatch({ type: 'Menu', index,MenuName,Response});\r\n    },\r\n    ClassAddorEdit: (navigation,StateArray,ClassesState, userToken, setIsLoading , isLoading) => {\r\n      \r\n      //alert(ClassesState);\r\n      addEditClass(navigation, StateArray, ClassesState, userToken, setIsLoading , isLoading);\r\n      /*\r\n      if(ClassesState === 'ClassAdd')\r\n      {\r\n        let NewInfo = StateArray;\r\n       //console.log('state for: ', ClassesState)\r\n       //console.log('AddArray:', StateArray)\r\n        \r\n        navigation.goBack();\r\n        dispatch({ type: 'ClassADD', NewInfo});\r\n      }\r\n      else//ClassesState === ClassEdit\r\n      {\r\n        let EditInfo = StateArray;\r\n       //console.log('state for: ', ClassesState)\r\n       //console.log('EditArray:', StateArray)\r\n        navigation.goBack();\r\n        dispatch({ type: 'ClassEdit', EditInfo});\r\n      }\r\n      */\r\n    },\r\n    CensusAddorEdit: (navigation,userArray,CensusState,Censustoken,setIsLoading,isLoading) => {\r\n      userArray.Principal = userArray.Principal == 0 ? false : true;\r\n      userArray.IsOwner = userArray.IsOwner == 0 ? false : true;\r\n     //console.log('CensusAddorEdit---------------->',userArray.IsOwner)\r\n      userArray.DateOfBirth = moment(userArray.DateOfBirth).format(\"YYYY-MM-DDT00:00:00\");\r\n      userArray.DateOfHire = moment(userArray.DateOfHire).format(\"YYYY-MM-DDT00:00:00\");\r\n      userArray.ParticipationDate = moment(userArray.ParticipationDate).format(\"YYYY-MM-DDT00:00:00\");\r\n      addEditCensus(navigation, userArray, CensusState, Censustoken,setIsLoading,isLoading);\r\n      \r\n      /*\r\n      if(CensusState === 'CensusAdduser')\r\n      {\r\n        let NewUserInfo = userArray;\r\n       //console.log('Newuser--------------->', NewUserInfo)\r\n       //console.log('state for: ', CensusState)\r\n       //console.log('AddUserArray: ==================>', userArray)\r\n        navigation.goBack();\r\n        //dispatch({ type: 'CensusADD', NewUserInfo});\r\n      }\r\n      else//CensusState === CensusEdituser\r\n      {\r\n        let EditUserInfo = userArray;\r\n       //console.log('state for: ', CensusState)\r\n       //console.log('EditUserArray:', userArray)\r\n        navigation.goBack();\r\n        //dispatch({ type: 'CensusEdit', EditUserInfo});\r\n      }\r\n      */\r\n    },\r\n    setDetails: (Data) => {\r\n     //console.log(\"App=== Set Details\", Data.planName);\r\n      dispatch({ type: 'SetDetails', Data});\r\n    },\r\n    setProfilePic: (url) => {\r\n     //console.log(\"url new -------------------------------->\",url);\r\n      dispatch({ type: 'SetProfilePic', url});\r\n    },\r\n    setDropdownData: (data) => {\r\n     //console.log(\"data -------------------------------->\",data);\r\n      dispatch({ type: 'SetDropdownData', data});\r\n    },\r\n    updateOverrideSegRatesNew: (RatesNew) => {\r\n      //console.log(\"DATA---------------------------->\" + RatesNew)\r\n      dispatch({ type: 'NewOverrideSegRatesNew', RatesNew});\r\n    },\r\n    /*\r\n    search: () => {\r\n      setopen(open = !open)\r\n      dispatch({ type: 'OPEN', open});\r\n    },\r\n    Plansearch: () => {\r\n      setPlanopen(Planopen = !Planopen)\r\n      dispatch({ type: 'PLANOPEN', Planopen});\r\n    }\r\n    */\r\n  }), []);\r\n\r\n  const saveTheme = async() => {\r\n    try {\r\n      //save theme to Storage\r\n      setIsDarkTheme( isDarkTheme = !isDarkTheme );\r\n      await AsyncStorage.setItem('isDarkTheme', isDarkTheme ? '1' : '0');      \r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n  };\r\n\r\n//\r\n//CENSUS \r\n//https://rpcapi-dev.azurewebsites.net/api/CB/Participants/Participant\r\n//{\"PlanId\":43773,\"FirstName\":\"Ramir A\",\"LastName\":\"Cortezano\",\"Principal\":false,\"PercentOwnership\":0,\"FamilyCode\":\" \",\"DateOfBirth\":\"02/01/1980\",\"DateOfHire\":\"01/01/2016\",\"WorkHours\":\"1000\",\"Age\":0,\"PastService\":4,\"LastYearComp\":10000,\"W2Earnings\":25000,\"CatchUp\":1,\"HighlyComp\":0,\"ClassId\":65,\"Sex\":\"M\",\"DeferralOverrideType\":\"%\",\"DeferralOverrideValue\":\" \",\"CBOverrideValue\":\" \",\"CBOverrideType\":\"%\",\"PSOverrideValue\":\" \",\"PSOverrideType\":\"%\",\"IsOwner\":false,\"RetAge\":0,\"ParticipationDate\":\"01/01/2020\",\"ParticipationDateOverride\":false,\"HCEOverride\":false}\r\n\r\n  const addEditCensus = async (navigation, data, type, userToken,setIsLoading,isLoading) => {\r\n   //console.log('census type ====', type);\r\n    let url = baseURL + '/Participants/Participant';\r\n    let method = 'POST';\r\n    let headers = new Headers();\r\n    let body = JSON.stringify(data);\r\n    if (type === 'CensusEdituser' ) method = 'PUT'\r\n    \r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', userToken);\r\n\r\n   //console.log(\"<==ADD EDIT Census==>\",  url, method, headers, body); //,\r\n  \r\n    let req = new Request(url, {\r\n        method,\r\n        headers,\r\n        body\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n     //console.log(responseJson);\r\n        \r\n        if (responseJson.isSuccess && responseJson.obj){\r\n          //alert(JSON.stringify(responseJson));\r\n          dispatch({ type: 'SCREENCensus', Data: {Name: 'Census', Method: 'Reload'}});\r\n          navigation.goBack();\r\n        } else {\r\n          setIsLoading(isLoading = false);\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n        }\r\n        \r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n\r\n  //https://rpcapi-dev.azurewebsites.net/api/CB/Classes/Class\r\n  // {\"PlanId\":43773, \"ClassCode\":\"G\",\"Description\":\"Class G\",\"ContributionType\":1,\"CBValue\":1,\"CBValueType\":\"%\",\"PSValue\":1,\"PSValueType\":\"%\",\"IsDefault\":0}\r\n  //{\"Code\":\"T\",\"Description\":null,\"Contritype\":\"1\",\"CashBalance\":null,\"CashAmt\":\"%\",\"ProfitSharing\":null,\"ProfitAmt\":\"%\"}\r\n\r\n  //DELETE : https://rpcapi-dev.azurewebsites.net/api/CB/Classes/Class?id=174107\r\n  const addEditClass = async (navigation, data, type, userToken, setIsLoading , isLoading) => {\r\n    let url = baseURL + '/Classes/Class';\r\n    let method = 'POST';\r\n    let headers = new Headers();\r\n    let body = JSON.stringify(data);\r\n    if (type === 'ClassEdit' ) method = 'PUT'\r\n    \r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', userToken);\r\n\r\n   //console.log(\"<==ADD EDIT CLASS==>\",  url, method, headers, body); //,\r\n   \r\n    let req = new Request(url, {\r\n        method,\r\n        headers,\r\n        body\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n     //console.log(responseJson);\r\n        \r\n        if (responseJson.isSuccess && responseJson.obj){\r\n          //alert(JSON.stringify(responseJson));\r\n          dispatch({ type: 'SCREENClass', Data: {Name: 'Classes', Method: 'Reload'}});\r\n          navigation.goBack();\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n          setIsLoading(isLoading = false);\r\n        }\r\n        \r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  const addEditPlan = async (navigation, planId, userToken, type) => {\r\n    let url = baseURL + '/Plans/Plan';\r\n    let method = 'POST';\r\n    let headers = new Headers();\r\n    let body = JSON.stringify(dataState.Details);\r\n    \r\n    if (planId) method = 'PUT'\r\n    \r\n    \r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', userToken);\r\n\r\n   //console.log(\"==================SAVE UPDATE PLAN====TOKEN===>\",  url, method, headers, body); //,\r\n   \r\n    let req = new Request(url, {\r\n        method,\r\n        headers,\r\n        body\r\n    });\r\n\r\n    await fetch(req)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        if (responseJson.isSuccess && responseJson.obj){\r\n          if (type === 'Add New'){\r\n            let PlanId = responseJson.obj;\r\n            dispatch({ type: 'PLANID', PlanId});\r\n            let Data = {Name: 'Plan List', Method : PlanId};\r\n            dispatch({ type: 'SCREENPlanList', Data});\r\n          } else {\r\n            let Data = {Name: 'Plan List', Method : \"reload\"};\r\n            dispatch({ type: 'SCREENPlanList', Data});\r\n          }\r\n\r\n          navigation.navigate('Plan Directory', {screen: 'Plan List'})\r\n         //console.log(\"==================SAVE RESPONSE ===>\", responseJson);\r\n        } else {\r\n          Alert.alert(\"Data Error\", responseJson.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert.alert(\"Connection Error\", error.message);\r\n        return false;\r\n    });\r\n  }\r\n\r\n  const getAsyncStorage = async() => {\r\n    let expired = false;\r\n    let minutes = 0;\r\n    let userProfile = null;\r\n        let userProfileObj = null;\r\n        let appDefaults = null;\r\n        let appDefaultsObj = null;\r\n        let defaultPlanDetails = null;\r\n        let defaultDropdown = null\r\n        let token = null;\r\n        let userName = null;\r\n        let firstName = null;\r\n        let lastName = null;\r\n        let profilePic = null;\r\n        let userNumber = null;\r\n        let userSponsorId = null;\r\n     //console.log(\"START++>\");\r\n      \r\n      \r\n      try {\r\n          //getting theme from Storage\r\n          var isDarkThemeStorage = await AsyncStorage.getItem('isDarkTheme');\r\n          if (isDarkThemeStorage && isDarkThemeStorage != null) setIsDarkTheme( isDarkTheme = (isDarkThemeStorage == '1' ? true : false) );\r\n          userProfile = await AsyncStorage.getItem('userProfile');\r\n          userProfileObj = JSON.parse(userProfile);\r\n         //console.log('User Profile=>', userProfileObj);\r\n          if (userProfileObj && userProfileObj.expireAt) minutes = moment(userProfileObj.expireAt).diff(new Date(), 'minutes');\r\n          \r\n          if (minutes <= 0) expired = true;\r\n\r\n        if (userProfileObj && userProfileObj.apiToken){\r\n            token = userProfileObj.apiToken;\r\n            userName = userProfileObj.email;\r\n            firstName =userProfileObj.firstName;\r\n            lastName = userProfileObj.lastName;\r\n            profilePic = userProfileObj.profilePic;\r\n            userNumber = userProfileObj.userNumber;\r\n            userSponsorId = userProfileObj.userSponsorId;\r\n        }\r\n        appDefaults = await AsyncStorage.getItem('appDefaults');\r\n        appDefaultsObj = JSON.parse(appDefaults);\r\n        if (appDefaultsObj && appDefaultsObj.defaultPlanDetails && appDefaultsObj.defaultDropdown){\r\n          defaultPlanDetails = appDefaultsObj.defaultPlanDetails;\r\n          defaultDropdown = appDefaultsObj.defaultDropdown;\r\n        }\r\n\r\n      } catch(e) {\r\n          console.log(e);\r\n      }\r\n\r\n      if (userProfileObj && userProfileObj.hasNewUpdate){\r\n        Alert.alert( 'New Update Available',\r\n        'You will now be redirected to Login screen.');\r\n        dispatch({ type: 'LOGOUT' });\r\n      } else if (expired) {\r\n        //Alert.alert( 'Session Expired',\r\n        //'You will now be redirected to Login screen.');\r\n        dispatch({ type: 'LOGOUT' });\r\n      } else {\r\n        \r\n        dispatch({ type: 'RETRIEVE_TOKEN', token, id: userName, firstName, lastName, profilePic, userNumber, userSponsorId });\r\n       //console.log('RETRIEVE_TOKEN=========================>', userNumber, userSponsorId, token);\r\n        if (defaultPlanDetails && defaultDropdown) {\r\n          dispatch({ type: 'APPDEFAULTS', defaultPlanDetails, defaultDropdown });\r\n        }\r\n      }\r\n      \r\n      \r\n  };\r\n\r\n  useEffect(() => {\r\n    //setTimeout(async() => {\r\n      getAsyncStorage();      \r\n    //}, 10);\r\n  }, []);\r\n\r\n  if( dataState.isLoading ) {\r\n    return(\r\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary}/>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n    <AuthContext.Provider value={[authContext, dataState]}>\r\n      <NavigationContainer theme={theme}>\r\n        { dataState.userToken !== null ? (\r\n          <Drawer.Navigator drawerContentOptions={{ activeBackgroundColor: 'rgba(59, 128, 5, 0.2)', activeTintColor: '#72bf04',\r\n          itemStyle: { marginTop: 2.25, marginHorizontal: 10 } }} drawerStyle ={{ backgroundColor: isDarkTheme ? '#333333' : 'white'}} drawerContent={props => <DrawerContent {...props} />}>\r\n            \r\n            <Drawer.Screen name=\"Home\"  component={HomeStackScreen} options={{\r\n                drawerIcon: ({ color, size }) => <Icon\r\n                    size={size}\r\n                    name=\"home\"\r\n                    color={color} />\r\n            }} />\r\n            <Drawer.Screen name=\"My Profile\" component={ProfileStackScreen} options={{\r\n                drawerIcon: ({ color, size }) => <Icon2\r\n                    size={size}\r\n                    name=\"ios-person\"\r\n                    color={color}\r\n                    style={{ marginRight: 2.5, marginLeft: 2.5}} />\r\n            }} />\r\n            <Drawer.Screen name=\"My Contact\" component={ContactStackScreen} options={{\r\n                drawerIcon: ({ color, size }) => <Icon\r\n                    size={size}\r\n                    name=\"contacts\"\r\n                    color={color} />\r\n            }} />\r\n             {/*\r\n            <Drawer.Screen name=\"Setup\" component={SetupStackScreen} options={{\r\n                drawerIcon: ({ color, size }) => <Icon\r\n                    size={size}\r\n                    name=\"settings\"\r\n                    color={color} />\r\n            }} />\r\n           \r\n            <Drawer.Screen name=\"Help\" component={SupportScreen} options={{\r\n                drawerIcon: ({ color, size }) => <Icon\r\n                    size={size}\r\n                    name=\"help\"\r\n                    color={color} />\r\n            }} />*/}\r\n            \r\n            {/* \r\n            <Drawer.Screen name=\"HomeScreen\"  component={MainTabScreen} />\r\n            <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\r\n            <Drawer.Screen name=\"SettingsScreen\" component={SettingsScreen } />\r\n            <Drawer.Screen name=\"BookmarkScreen\" component={BookmarkScreen} />    \r\n            */}\r\n          </Drawer.Navigator>\r\n        )\r\n      :\r\n        <RootStackScreen/>\r\n      }\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n    </PaperProvider>\r\n  );\r\n}\r\n\r\nexport default App;","var map = {\n\t\"./af\": 260,\n\t\"./af.js\": 260,\n\t\"./ar\": 261,\n\t\"./ar-dz\": 262,\n\t\"./ar-dz.js\": 262,\n\t\"./ar-kw\": 263,\n\t\"./ar-kw.js\": 263,\n\t\"./ar-ly\": 264,\n\t\"./ar-ly.js\": 264,\n\t\"./ar-ma\": 265,\n\t\"./ar-ma.js\": 265,\n\t\"./ar-sa\": 266,\n\t\"./ar-sa.js\": 266,\n\t\"./ar-tn\": 267,\n\t\"./ar-tn.js\": 267,\n\t\"./ar.js\": 261,\n\t\"./az\": 268,\n\t\"./az.js\": 268,\n\t\"./be\": 269,\n\t\"./be.js\": 269,\n\t\"./bg\": 270,\n\t\"./bg.js\": 270,\n\t\"./bm\": 271,\n\t\"./bm.js\": 271,\n\t\"./bn\": 272,\n\t\"./bn-bd\": 273,\n\t\"./bn-bd.js\": 273,\n\t\"./bn.js\": 272,\n\t\"./bo\": 274,\n\t\"./bo.js\": 274,\n\t\"./br\": 275,\n\t\"./br.js\": 275,\n\t\"./bs\": 276,\n\t\"./bs.js\": 276,\n\t\"./ca\": 277,\n\t\"./ca.js\": 277,\n\t\"./cs\": 278,\n\t\"./cs.js\": 278,\n\t\"./cv\": 279,\n\t\"./cv.js\": 279,\n\t\"./cy\": 280,\n\t\"./cy.js\": 280,\n\t\"./da\": 281,\n\t\"./da.js\": 281,\n\t\"./de\": 282,\n\t\"./de-at\": 283,\n\t\"./de-at.js\": 283,\n\t\"./de-ch\": 284,\n\t\"./de-ch.js\": 284,\n\t\"./de.js\": 282,\n\t\"./dv\": 285,\n\t\"./dv.js\": 285,\n\t\"./el\": 286,\n\t\"./el.js\": 286,\n\t\"./en-au\": 287,\n\t\"./en-au.js\": 287,\n\t\"./en-ca\": 288,\n\t\"./en-ca.js\": 288,\n\t\"./en-gb\": 289,\n\t\"./en-gb.js\": 289,\n\t\"./en-ie\": 290,\n\t\"./en-ie.js\": 290,\n\t\"./en-il\": 291,\n\t\"./en-il.js\": 291,\n\t\"./en-in\": 292,\n\t\"./en-in.js\": 292,\n\t\"./en-nz\": 293,\n\t\"./en-nz.js\": 293,\n\t\"./en-sg\": 294,\n\t\"./en-sg.js\": 294,\n\t\"./eo\": 295,\n\t\"./eo.js\": 295,\n\t\"./es\": 296,\n\t\"./es-do\": 297,\n\t\"./es-do.js\": 297,\n\t\"./es-mx\": 298,\n\t\"./es-mx.js\": 298,\n\t\"./es-us\": 299,\n\t\"./es-us.js\": 299,\n\t\"./es.js\": 296,\n\t\"./et\": 300,\n\t\"./et.js\": 300,\n\t\"./eu\": 301,\n\t\"./eu.js\": 301,\n\t\"./fa\": 302,\n\t\"./fa.js\": 302,\n\t\"./fi\": 303,\n\t\"./fi.js\": 303,\n\t\"./fil\": 304,\n\t\"./fil.js\": 304,\n\t\"./fo\": 305,\n\t\"./fo.js\": 305,\n\t\"./fr\": 306,\n\t\"./fr-ca\": 307,\n\t\"./fr-ca.js\": 307,\n\t\"./fr-ch\": 308,\n\t\"./fr-ch.js\": 308,\n\t\"./fr.js\": 306,\n\t\"./fy\": 309,\n\t\"./fy.js\": 309,\n\t\"./ga\": 310,\n\t\"./ga.js\": 310,\n\t\"./gd\": 311,\n\t\"./gd.js\": 311,\n\t\"./gl\": 312,\n\t\"./gl.js\": 312,\n\t\"./gom-deva\": 313,\n\t\"./gom-deva.js\": 313,\n\t\"./gom-latn\": 314,\n\t\"./gom-latn.js\": 314,\n\t\"./gu\": 315,\n\t\"./gu.js\": 315,\n\t\"./he\": 316,\n\t\"./he.js\": 316,\n\t\"./hi\": 317,\n\t\"./hi.js\": 317,\n\t\"./hr\": 318,\n\t\"./hr.js\": 318,\n\t\"./hu\": 319,\n\t\"./hu.js\": 319,\n\t\"./hy-am\": 320,\n\t\"./hy-am.js\": 320,\n\t\"./id\": 321,\n\t\"./id.js\": 321,\n\t\"./is\": 322,\n\t\"./is.js\": 322,\n\t\"./it\": 323,\n\t\"./it-ch\": 324,\n\t\"./it-ch.js\": 324,\n\t\"./it.js\": 323,\n\t\"./ja\": 325,\n\t\"./ja.js\": 325,\n\t\"./jv\": 326,\n\t\"./jv.js\": 326,\n\t\"./ka\": 327,\n\t\"./ka.js\": 327,\n\t\"./kk\": 328,\n\t\"./kk.js\": 328,\n\t\"./km\": 329,\n\t\"./km.js\": 329,\n\t\"./kn\": 330,\n\t\"./kn.js\": 330,\n\t\"./ko\": 331,\n\t\"./ko.js\": 331,\n\t\"./ku\": 332,\n\t\"./ku.js\": 332,\n\t\"./ky\": 333,\n\t\"./ky.js\": 333,\n\t\"./lb\": 334,\n\t\"./lb.js\": 334,\n\t\"./lo\": 335,\n\t\"./lo.js\": 335,\n\t\"./lt\": 336,\n\t\"./lt.js\": 336,\n\t\"./lv\": 337,\n\t\"./lv.js\": 337,\n\t\"./me\": 338,\n\t\"./me.js\": 338,\n\t\"./mi\": 339,\n\t\"./mi.js\": 339,\n\t\"./mk\": 340,\n\t\"./mk.js\": 340,\n\t\"./ml\": 341,\n\t\"./ml.js\": 341,\n\t\"./mn\": 342,\n\t\"./mn.js\": 342,\n\t\"./mr\": 343,\n\t\"./mr.js\": 343,\n\t\"./ms\": 344,\n\t\"./ms-my\": 345,\n\t\"./ms-my.js\": 345,\n\t\"./ms.js\": 344,\n\t\"./mt\": 346,\n\t\"./mt.js\": 346,\n\t\"./my\": 347,\n\t\"./my.js\": 347,\n\t\"./nb\": 348,\n\t\"./nb.js\": 348,\n\t\"./ne\": 349,\n\t\"./ne.js\": 349,\n\t\"./nl\": 350,\n\t\"./nl-be\": 351,\n\t\"./nl-be.js\": 351,\n\t\"./nl.js\": 350,\n\t\"./nn\": 352,\n\t\"./nn.js\": 352,\n\t\"./oc-lnc\": 353,\n\t\"./oc-lnc.js\": 353,\n\t\"./pa-in\": 354,\n\t\"./pa-in.js\": 354,\n\t\"./pl\": 355,\n\t\"./pl.js\": 355,\n\t\"./pt\": 356,\n\t\"./pt-br\": 357,\n\t\"./pt-br.js\": 357,\n\t\"./pt.js\": 356,\n\t\"./ro\": 358,\n\t\"./ro.js\": 358,\n\t\"./ru\": 359,\n\t\"./ru.js\": 359,\n\t\"./sd\": 360,\n\t\"./sd.js\": 360,\n\t\"./se\": 361,\n\t\"./se.js\": 361,\n\t\"./si\": 362,\n\t\"./si.js\": 362,\n\t\"./sk\": 363,\n\t\"./sk.js\": 363,\n\t\"./sl\": 364,\n\t\"./sl.js\": 364,\n\t\"./sq\": 365,\n\t\"./sq.js\": 365,\n\t\"./sr\": 366,\n\t\"./sr-cyrl\": 367,\n\t\"./sr-cyrl.js\": 367,\n\t\"./sr.js\": 366,\n\t\"./ss\": 368,\n\t\"./ss.js\": 368,\n\t\"./sv\": 369,\n\t\"./sv.js\": 369,\n\t\"./sw\": 370,\n\t\"./sw.js\": 370,\n\t\"./ta\": 371,\n\t\"./ta.js\": 371,\n\t\"./te\": 372,\n\t\"./te.js\": 372,\n\t\"./tet\": 373,\n\t\"./tet.js\": 373,\n\t\"./tg\": 374,\n\t\"./tg.js\": 374,\n\t\"./th\": 375,\n\t\"./th.js\": 375,\n\t\"./tk\": 376,\n\t\"./tk.js\": 376,\n\t\"./tl-ph\": 377,\n\t\"./tl-ph.js\": 377,\n\t\"./tlh\": 378,\n\t\"./tlh.js\": 378,\n\t\"./tr\": 379,\n\t\"./tr.js\": 379,\n\t\"./tzl\": 380,\n\t\"./tzl.js\": 380,\n\t\"./tzm\": 381,\n\t\"./tzm-latn\": 382,\n\t\"./tzm-latn.js\": 382,\n\t\"./tzm.js\": 381,\n\t\"./ug-cn\": 383,\n\t\"./ug-cn.js\": 383,\n\t\"./uk\": 384,\n\t\"./uk.js\": 384,\n\t\"./ur\": 385,\n\t\"./ur.js\": 385,\n\t\"./uz\": 386,\n\t\"./uz-latn\": 387,\n\t\"./uz-latn.js\": 387,\n\t\"./uz.js\": 386,\n\t\"./vi\": 388,\n\t\"./vi.js\": 388,\n\t\"./x-pseudo\": 389,\n\t\"./x-pseudo.js\": 389,\n\t\"./yo\": 390,\n\t\"./yo.js\": 390,\n\t\"./zh-cn\": 391,\n\t\"./zh-cn.js\": 391,\n\t\"./zh-hk\": 392,\n\t\"./zh-hk.js\": 392,\n\t\"./zh-mo\": 393,\n\t\"./zh-mo.js\": 393,\n\t\"./zh-tw\": 394,\n\t\"./zh-tw.js\": 394\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 563;","module.exports = __webpack_public_path__ + \"static/media/men1.fc8502fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/men2.3b868c41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/men3.27ba7537.jpg\";","module.exports = __webpack_public_path__ + \"static/media/women1.b6dec846.jpg\";","module.exports = __webpack_public_path__ + \"static/media/women2.c4bfd908.jpg\";","module.exports = __webpack_public_path__ + \"static/media/women3.703c29c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Owner.0824f663.jpg\";"],"sourceRoot":""}